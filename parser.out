 State 0:
          program ::= * xx_language
          xx_language ::= * xx_top_statement_list
          xx_top_statement_list ::= * xx_top_statement_list xx_top_statement
          xx_top_statement_list ::= * xx_top_statement
          xx_top_statement ::= * xx_namespace_def
          xx_top_statement ::= * xx_class_def
          xx_top_statement ::= * xx_comment
          xx_namespace_def ::= * NAMESPACE IDENTIFIER DOTCOMMA
          xx_class_def ::= * CLASS IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= * CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= * ABSTRACT CLASS IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= * ABSTRACT CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= * CLASS IDENTIFIER BRACKET_OPEN BRACKET_CLOSE
          xx_class_def ::= * CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN BRACKET_CLOSE
          xx_class_def ::= * ABSTRACT CLASS IDENTIFIER BRACKET_OPEN BRACKET_CLOSE
          xx_class_def ::= * ABSTRACT CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN BRACKET_CLOSE
          xx_comment ::= * COMMENT

                     NAMESPACE shift  7
                         CLASS shift  10
                      ABSTRACT shift  394
                       COMMENT shift  220
                       program accept
                   xx_language shift  1
         xx_top_statement_list shift  2
              xx_top_statement shift  407
              xx_namespace_def shift  4
                  xx_class_def shift  5
                    xx_comment shift  6

State 1:
      (0) program ::= xx_language *

                             $ reduce 0

State 2:
      (1) xx_language ::= xx_top_statement_list *
          xx_top_statement_list ::= xx_top_statement_list * xx_top_statement
          xx_top_statement ::= * xx_namespace_def
          xx_top_statement ::= * xx_class_def
          xx_top_statement ::= * xx_comment
          xx_namespace_def ::= * NAMESPACE IDENTIFIER DOTCOMMA
          xx_class_def ::= * CLASS IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= * CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= * ABSTRACT CLASS IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= * ABSTRACT CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= * CLASS IDENTIFIER BRACKET_OPEN BRACKET_CLOSE
          xx_class_def ::= * CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN BRACKET_CLOSE
          xx_class_def ::= * ABSTRACT CLASS IDENTIFIER BRACKET_OPEN BRACKET_CLOSE
          xx_class_def ::= * ABSTRACT CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN BRACKET_CLOSE
          xx_comment ::= * COMMENT

                             $ reduce 1
                     NAMESPACE shift  7
                         CLASS shift  10
                      ABSTRACT shift  394
                       COMMENT shift  220
              xx_top_statement shift  3
              xx_namespace_def shift  4
                  xx_class_def shift  5
                    xx_comment shift  6

State 3:
      (2) xx_top_statement_list ::= xx_top_statement_list xx_top_statement *

                     {default} reduce 2

State 4:
      (4) xx_top_statement ::= xx_namespace_def *

                     {default} reduce 4

State 5:
      (5) xx_top_statement ::= xx_class_def *

                     {default} reduce 5

State 6:
      (6) xx_top_statement ::= xx_comment *

                     {default} reduce 6

State 7:
          xx_namespace_def ::= NAMESPACE * IDENTIFIER DOTCOMMA

                    IDENTIFIER shift  8

State 8:
          xx_namespace_def ::= NAMESPACE IDENTIFIER * DOTCOMMA

                      DOTCOMMA shift  9

State 9:
      (7) xx_namespace_def ::= NAMESPACE IDENTIFIER DOTCOMMA *

                     {default} reduce 7

State 10:
          xx_class_def ::= CLASS * IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= CLASS * IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= CLASS * IDENTIFIER BRACKET_OPEN BRACKET_CLOSE
          xx_class_def ::= CLASS * IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN BRACKET_CLOSE

                    IDENTIFIER shift  11

State 11:
          xx_class_def ::= CLASS IDENTIFIER * BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= CLASS IDENTIFIER * EXTENDS IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= CLASS IDENTIFIER * BRACKET_OPEN BRACKET_CLOSE
          xx_class_def ::= CLASS IDENTIFIER * EXTENDS IDENTIFIER BRACKET_OPEN BRACKET_CLOSE

                  BRACKET_OPEN shift  12
                       EXTENDS shift  388

State 12:
          xx_class_def ::= CLASS IDENTIFIER BRACKET_OPEN * xx_class_definition BRACKET_CLOSE
          xx_class_def ::= CLASS IDENTIFIER BRACKET_OPEN * BRACKET_CLOSE
          xx_class_definition ::= * xx_class_properties_definition
          xx_class_definition ::= * xx_class_consts_definition
          xx_class_definition ::= * xx_class_methods_definition
          xx_class_definition ::= * xx_class_properties_definition xx_class_methods_definition
          xx_class_definition ::= * xx_class_properties_definition xx_class_consts_definition
          xx_class_definition ::= * xx_class_consts_definition xx_class_properties_definition
          xx_class_definition ::= * xx_class_consts_definition xx_class_methods_definition
          xx_class_definition ::= * xx_class_properties_definition xx_class_consts_definition xx_class_methods_definition
          xx_class_definition ::= * xx_class_consts_definition xx_class_properties_definition xx_class_methods_definition
          xx_class_properties_definition ::= * xx_class_properties_definition xx_class_property_definition
          xx_class_properties_definition ::= * xx_class_property_definition
          xx_class_property_definition ::= * COMMENT PUBLIC IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PUBLIC IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PUBLIC IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * COMMENT PUBLIC IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * PROTECTED IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * COMMENT PROTECTED IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PROTECTED IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * COMMENT PROTECTED IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_consts_definition ::= * xx_class_consts_definition xx_class_const_definition
          xx_class_consts_definition ::= * xx_class_const_definition
          xx_class_methods_definition ::= * xx_class_methods_definition xx_class_method_definition
          xx_class_const_definition ::= * COMMENT CONST IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_const_definition ::= * CONST IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_methods_definition ::= * xx_class_method_definition
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                 BRACKET_CLOSE shift  15
                       COMMENT shift  355
                        PUBLIC shift  368
                     PROTECTED shift  374
                         CONST shift  348
           xx_class_definition shift  13
xx_class_properties_definition shift  16
    xx_class_consts_definition shift  381
   xx_class_methods_definition shift  387
  xx_class_property_definition shift  386
     xx_class_const_definition shift  380
    xx_class_method_definition shift  353

State 13:
          xx_class_def ::= CLASS IDENTIFIER BRACKET_OPEN xx_class_definition * BRACKET_CLOSE

                 BRACKET_CLOSE shift  14

State 14:
      (8) xx_class_def ::= CLASS IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE *

                     {default} reduce 8

State 15:
     (12) xx_class_def ::= CLASS IDENTIFIER BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 12

State 16:
     (16) xx_class_definition ::= xx_class_properties_definition *
          xx_class_definition ::= xx_class_properties_definition * xx_class_methods_definition
          xx_class_definition ::= xx_class_properties_definition * xx_class_consts_definition
          xx_class_definition ::= xx_class_properties_definition * xx_class_consts_definition xx_class_methods_definition
          xx_class_properties_definition ::= xx_class_properties_definition * xx_class_property_definition
          xx_class_property_definition ::= * COMMENT PUBLIC IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PUBLIC IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PUBLIC IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * COMMENT PUBLIC IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * PROTECTED IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * COMMENT PROTECTED IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PROTECTED IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * COMMENT PROTECTED IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_consts_definition ::= * xx_class_consts_definition xx_class_const_definition
          xx_class_consts_definition ::= * xx_class_const_definition
          xx_class_methods_definition ::= * xx_class_methods_definition xx_class_method_definition
          xx_class_const_definition ::= * COMMENT CONST IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_const_definition ::= * CONST IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_methods_definition ::= * xx_class_method_definition
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                 BRACKET_CLOSE reduce 16
                       COMMENT shift  355
                        PUBLIC shift  368
                     PROTECTED shift  374
                         CONST shift  348
    xx_class_consts_definition shift  339
   xx_class_methods_definition shift  17
  xx_class_property_definition shift  354
     xx_class_const_definition shift  380
    xx_class_method_definition shift  353

State 17:
     (19) xx_class_definition ::= xx_class_properties_definition xx_class_methods_definition *
          xx_class_methods_definition ::= xx_class_methods_definition * xx_class_method_definition
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                 BRACKET_CLOSE reduce 19
                       COMMENT shift  305
                        PUBLIC shift  19
                     PROTECTED shift  330
    xx_class_method_definition shift  18

State 18:
     (37) xx_class_methods_definition ::= xx_class_methods_definition xx_class_method_definition *

                     {default} reduce 37

State 19:
          xx_class_method_definition ::= PUBLIC * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                      FUNCTION shift  20

State 20:
          xx_class_method_definition ::= PUBLIC FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                    IDENTIFIER shift  21

State 21:
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE

              PARENTHESES_OPEN shift  22

State 22:
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_parameter_list ::= * xx_parameter_list COMMA xx_parameter
          xx_parameter_list ::= * xx_parameter
          xx_parameter ::= * IDENTIFIER
          xx_parameter ::= * xx_parameter_type IDENTIFIER
          xx_parameter ::= * xx_parameter_cast IDENTIFIER
          xx_parameter ::= * IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_type IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_cast IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY

                          LESS shift  292
                    IDENTIFIER shift  281
             PARENTHESES_CLOSE shift  23
                  TYPE_INTEGER shift  295
                   TYPE_DOUBLE shift  296
                     TYPE_BOOL shift  297
                   TYPE_STRING shift  298
                    TYPE_ARRAY shift  299
             xx_parameter_list shift  301
                  xx_parameter shift  300
             xx_parameter_type shift  284
             xx_parameter_cast shift  288

State 23:
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_parameter_list ::= * xx_parameter_list COMMA xx_parameter
          xx_parameter_list ::= * xx_parameter
          xx_parameter ::= * IDENTIFIER
          xx_parameter ::= * xx_parameter_type IDENTIFIER
          xx_parameter ::= * xx_parameter_cast IDENTIFIER
          xx_parameter ::= * IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_type IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_cast IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY

                          LESS shift  292
                    IDENTIFIER shift  281
                  BRACKET_OPEN shift  24
                  TYPE_INTEGER shift  295
                   TYPE_DOUBLE shift  296
                     TYPE_BOOL shift  297
                   TYPE_STRING shift  298
                    TYPE_ARRAY shift  299
             xx_parameter_list shift  275
                  xx_parameter shift  300
             xx_parameter_type shift  284
             xx_parameter_cast shift  288

State 24:
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN * BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_return_statement ::= * RETURN xx_literal_expr DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_comment ::= * COMMENT

                 BRACKET_CLOSE shift  25
                       COMMENT shift  220
                  TYPE_INTEGER shift  199
                   TYPE_DOUBLE shift  208
                     TYPE_BOOL shift  214
                   TYPE_STRING shift  211
                         BREAK shift  42
                      CONTINUE shift  44
                            IF shift  46
                          LOOP shift  55
                         WHILE shift  59
                           FOR shift  64
                           LET shift  71
                          ECHO shift  159
                        RETURN shift  167
                         UNSET shift  175
                         THROW shift  190
                      TYPE_VAR shift  217
                    xx_comment shift  41
             xx_statement_list shift  26
                  xx_statement shift  221
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_unset_statement shift  34
            xx_throw_statement shift  35
          xx_declare_statement shift  36
            xx_break_statement shift  37
         xx_continue_statement shift  38
            xx_while_statement shift  39
              xx_for_statement shift  40

State 25:
     (41) xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 41

State 26:
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_return_statement ::= * RETURN xx_literal_expr DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_comment ::= * COMMENT

                 BRACKET_CLOSE shift  27
                       COMMENT shift  220
                  TYPE_INTEGER shift  199
                   TYPE_DOUBLE shift  208
                     TYPE_BOOL shift  214
                   TYPE_STRING shift  211
                         BREAK shift  42
                      CONTINUE shift  44
                            IF shift  46
                          LOOP shift  55
                         WHILE shift  59
                           FOR shift  64
                           LET shift  71
                          ECHO shift  159
                        RETURN shift  167
                         UNSET shift  175
                         THROW shift  190
                      TYPE_VAR shift  217
                    xx_comment shift  41
                  xx_statement shift  28
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_unset_statement shift  34
            xx_throw_statement shift  35
          xx_declare_statement shift  36
            xx_break_statement shift  37
         xx_continue_statement shift  38
            xx_while_statement shift  39
              xx_for_statement shift  40

State 27:
     (45) xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 45

State 28:
     (67) xx_statement_list ::= xx_statement_list xx_statement *

                     {default} reduce 67

State 29:
     (69) xx_statement ::= xx_let_statement *

                     {default} reduce 69

State 30:
     (70) xx_statement ::= xx_if_statement *

                     {default} reduce 70

State 31:
     (71) xx_statement ::= xx_loop_statement *

                     {default} reduce 71

State 32:
     (72) xx_statement ::= xx_echo_statement *

                     {default} reduce 72

State 33:
     (73) xx_statement ::= xx_return_statement *

                     {default} reduce 73

State 34:
     (74) xx_statement ::= xx_unset_statement *

                     {default} reduce 74

State 35:
     (75) xx_statement ::= xx_throw_statement *

                     {default} reduce 75

State 36:
     (76) xx_statement ::= xx_declare_statement *

                     {default} reduce 76

State 37:
     (77) xx_statement ::= xx_break_statement *

                     {default} reduce 77

State 38:
     (78) xx_statement ::= xx_continue_statement *

                     {default} reduce 78

State 39:
     (79) xx_statement ::= xx_while_statement *

                     {default} reduce 79

State 40:
     (80) xx_statement ::= xx_for_statement *

                     {default} reduce 80

State 41:
     (81) xx_statement ::= xx_comment *

                     {default} reduce 81

State 42:
          xx_break_statement ::= BREAK * DOTCOMMA

                      DOTCOMMA shift  43

State 43:
     (82) xx_break_statement ::= BREAK DOTCOMMA *

                     {default} reduce 82

State 44:
          xx_continue_statement ::= CONTINUE * DOTCOMMA

                      DOTCOMMA shift  45

State 45:
     (83) xx_continue_statement ::= CONTINUE DOTCOMMA *

                     {default} reduce 83

State 46:
          xx_if_statement ::= IF * xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF * xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF * xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF * xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF * xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF * xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_eval_expr ::= * xx_literal_expr
          xx_eval_expr ::= * NOT xx_eval_expr
          xx_eval_expr ::= * TYPEOF xx_eval_expr
          xx_eval_expr ::= * ISSET xx_isset_expr
          xx_eval_expr ::= * xx_eval_expr TYPEOF xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr EQUALS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr NOTEQUALS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr IDENTICAL xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr NOTIDENTICAL xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr LESS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr GREATER xx_eval_expr
          xx_eval_expr ::= * PARENTHESES_OPEN xx_eval_expr PARENTHESES_CLOSE
          xx_eval_expr ::= * IDENTIFIER
          xx_eval_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_eval_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                        TYPEOF shift  227
                           NOT shift  224
                    IDENTIFIER shift  252
              PARENTHESES_OPEN shift  249
                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
                         ISSET shift  230
               xx_literal_expr shift  223
                  xx_eval_expr shift  47

State 47:
          xx_if_statement ::= IF xx_eval_expr * BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr * BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr * BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_eval_expr ::= xx_eval_expr * TYPEOF xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * EQUALS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * NOTEQUALS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * IDENTICAL xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * NOTIDENTICAL xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * LESS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * GREATER xx_eval_expr

                        EQUALS shift  226
                     IDENTICAL shift  241
                          LESS shift  245
                       GREATER shift  247
                  NOTIDENTICAL shift  243
                     NOTEQUALS shift  229
                        TYPEOF shift  222
                  BRACKET_OPEN shift  48

State 48:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN * BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN * BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN * BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_return_statement ::= * RETURN xx_literal_expr DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_comment ::= * COMMENT

                 BRACKET_CLOSE shift  269
                       COMMENT shift  220
                  TYPE_INTEGER shift  199
                   TYPE_DOUBLE shift  208
                     TYPE_BOOL shift  214
                   TYPE_STRING shift  211
                         BREAK shift  42
                      CONTINUE shift  44
                            IF shift  46
                          LOOP shift  55
                         WHILE shift  59
                           FOR shift  64
                           LET shift  71
                          ECHO shift  159
                        RETURN shift  167
                         UNSET shift  175
                         THROW shift  190
                      TYPE_VAR shift  217
                    xx_comment shift  41
             xx_statement_list shift  49
                  xx_statement shift  221
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_unset_statement shift  34
            xx_throw_statement shift  35
          xx_declare_statement shift  36
            xx_break_statement shift  37
         xx_continue_statement shift  38
            xx_while_statement shift  39
              xx_for_statement shift  40

State 49:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_return_statement ::= * RETURN xx_literal_expr DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_comment ::= * COMMENT

                 BRACKET_CLOSE shift  50
                       COMMENT shift  220
                  TYPE_INTEGER shift  199
                   TYPE_DOUBLE shift  208
                     TYPE_BOOL shift  214
                   TYPE_STRING shift  211
                         BREAK shift  42
                      CONTINUE shift  44
                            IF shift  46
                          LOOP shift  55
                         WHILE shift  59
                           FOR shift  64
                           LET shift  71
                          ECHO shift  159
                        RETURN shift  167
                         UNSET shift  175
                         THROW shift  190
                      TYPE_VAR shift  217
                    xx_comment shift  41
                  xx_statement shift  28
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_unset_statement shift  34
            xx_throw_statement shift  35
          xx_declare_statement shift  36
            xx_break_statement shift  37
         xx_continue_statement shift  38
            xx_while_statement shift  39
              xx_for_statement shift  40

State 50:
     (86) xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE *
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE * ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE * ELSE BRACKET_OPEN BRACKET_CLOSE

                          ELSE shift  51
                     {default} reduce 86

State 51:
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE * BRACKET_OPEN BRACKET_CLOSE

                  BRACKET_OPEN shift  52

State 52:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN * BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_return_statement ::= * RETURN xx_literal_expr DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_comment ::= * COMMENT

                 BRACKET_CLOSE shift  268
                       COMMENT shift  220
                  TYPE_INTEGER shift  199
                   TYPE_DOUBLE shift  208
                     TYPE_BOOL shift  214
                   TYPE_STRING shift  211
                         BREAK shift  42
                      CONTINUE shift  44
                            IF shift  46
                          LOOP shift  55
                         WHILE shift  59
                           FOR shift  64
                           LET shift  71
                          ECHO shift  159
                        RETURN shift  167
                         UNSET shift  175
                         THROW shift  190
                      TYPE_VAR shift  217
                    xx_comment shift  41
             xx_statement_list shift  53
                  xx_statement shift  221
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_unset_statement shift  34
            xx_throw_statement shift  35
          xx_declare_statement shift  36
            xx_break_statement shift  37
         xx_continue_statement shift  38
            xx_while_statement shift  39
              xx_for_statement shift  40

State 53:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_return_statement ::= * RETURN xx_literal_expr DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_comment ::= * COMMENT

                 BRACKET_CLOSE shift  54
                       COMMENT shift  220
                  TYPE_INTEGER shift  199
                   TYPE_DOUBLE shift  208
                     TYPE_BOOL shift  214
                   TYPE_STRING shift  211
                         BREAK shift  42
                      CONTINUE shift  44
                            IF shift  46
                          LOOP shift  55
                         WHILE shift  59
                           FOR shift  64
                           LET shift  71
                          ECHO shift  159
                        RETURN shift  167
                         UNSET shift  175
                         THROW shift  190
                      TYPE_VAR shift  217
                    xx_comment shift  41
                  xx_statement shift  28
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_unset_statement shift  34
            xx_throw_statement shift  35
          xx_declare_statement shift  36
            xx_break_statement shift  37
         xx_continue_statement shift  38
            xx_while_statement shift  39
              xx_for_statement shift  40

State 54:
     (87) xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 87

State 55:
          xx_loop_statement ::= LOOP * BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= LOOP * BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  56

State 56:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= LOOP BRACKET_OPEN * BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= LOOP BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_return_statement ::= * RETURN xx_literal_expr DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_comment ::= * COMMENT

                 BRACKET_CLOSE shift  267
                       COMMENT shift  220
                  TYPE_INTEGER shift  199
                   TYPE_DOUBLE shift  208
                     TYPE_BOOL shift  214
                   TYPE_STRING shift  211
                         BREAK shift  42
                      CONTINUE shift  44
                            IF shift  46
                          LOOP shift  55
                         WHILE shift  59
                           FOR shift  64
                           LET shift  71
                          ECHO shift  159
                        RETURN shift  167
                         UNSET shift  175
                         THROW shift  190
                      TYPE_VAR shift  217
                    xx_comment shift  41
             xx_statement_list shift  57
                  xx_statement shift  221
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_unset_statement shift  34
            xx_throw_statement shift  35
          xx_declare_statement shift  36
            xx_break_statement shift  37
         xx_continue_statement shift  38
            xx_while_statement shift  39
              xx_for_statement shift  40

State 57:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= LOOP BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_return_statement ::= * RETURN xx_literal_expr DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_comment ::= * COMMENT

                 BRACKET_CLOSE shift  58
                       COMMENT shift  220
                  TYPE_INTEGER shift  199
                   TYPE_DOUBLE shift  208
                     TYPE_BOOL shift  214
                   TYPE_STRING shift  211
                         BREAK shift  42
                      CONTINUE shift  44
                            IF shift  46
                          LOOP shift  55
                         WHILE shift  59
                           FOR shift  64
                           LET shift  71
                          ECHO shift  159
                        RETURN shift  167
                         UNSET shift  175
                         THROW shift  190
                      TYPE_VAR shift  217
                    xx_comment shift  41
                  xx_statement shift  28
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_unset_statement shift  34
            xx_throw_statement shift  35
          xx_declare_statement shift  36
            xx_break_statement shift  37
         xx_continue_statement shift  38
            xx_while_statement shift  39
              xx_for_statement shift  40

State 58:
     (91) xx_loop_statement ::= LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 91

State 59:
          xx_while_statement ::= WHILE * xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= WHILE * xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_eval_expr ::= * xx_literal_expr
          xx_eval_expr ::= * NOT xx_eval_expr
          xx_eval_expr ::= * TYPEOF xx_eval_expr
          xx_eval_expr ::= * ISSET xx_isset_expr
          xx_eval_expr ::= * xx_eval_expr TYPEOF xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr EQUALS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr NOTEQUALS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr IDENTICAL xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr NOTIDENTICAL xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr LESS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr GREATER xx_eval_expr
          xx_eval_expr ::= * PARENTHESES_OPEN xx_eval_expr PARENTHESES_CLOSE
          xx_eval_expr ::= * IDENTIFIER
          xx_eval_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_eval_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                        TYPEOF shift  227
                           NOT shift  224
                    IDENTIFIER shift  252
              PARENTHESES_OPEN shift  249
                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
                         ISSET shift  230
               xx_literal_expr shift  223
                  xx_eval_expr shift  60

State 60:
          xx_while_statement ::= WHILE xx_eval_expr * BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= WHILE xx_eval_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_eval_expr ::= xx_eval_expr * TYPEOF xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * EQUALS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * NOTEQUALS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * IDENTICAL xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * NOTIDENTICAL xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * LESS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * GREATER xx_eval_expr

                        EQUALS shift  226
                     IDENTICAL shift  241
                          LESS shift  245
                       GREATER shift  247
                  NOTIDENTICAL shift  243
                     NOTEQUALS shift  229
                        TYPEOF shift  222
                  BRACKET_OPEN shift  61

State 61:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= WHILE xx_eval_expr BRACKET_OPEN * BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= WHILE xx_eval_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_return_statement ::= * RETURN xx_literal_expr DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_comment ::= * COMMENT

                 BRACKET_CLOSE shift  266
                       COMMENT shift  220
                  TYPE_INTEGER shift  199
                   TYPE_DOUBLE shift  208
                     TYPE_BOOL shift  214
                   TYPE_STRING shift  211
                         BREAK shift  42
                      CONTINUE shift  44
                            IF shift  46
                          LOOP shift  55
                         WHILE shift  59
                           FOR shift  64
                           LET shift  71
                          ECHO shift  159
                        RETURN shift  167
                         UNSET shift  175
                         THROW shift  190
                      TYPE_VAR shift  217
                    xx_comment shift  41
             xx_statement_list shift  62
                  xx_statement shift  221
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_unset_statement shift  34
            xx_throw_statement shift  35
          xx_declare_statement shift  36
            xx_break_statement shift  37
         xx_continue_statement shift  38
            xx_while_statement shift  39
              xx_for_statement shift  40

State 62:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= WHILE xx_eval_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_return_statement ::= * RETURN xx_literal_expr DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_comment ::= * COMMENT

                 BRACKET_CLOSE shift  63
                       COMMENT shift  220
                  TYPE_INTEGER shift  199
                   TYPE_DOUBLE shift  208
                     TYPE_BOOL shift  214
                   TYPE_STRING shift  211
                         BREAK shift  42
                      CONTINUE shift  44
                            IF shift  46
                          LOOP shift  55
                         WHILE shift  59
                           FOR shift  64
                           LET shift  71
                          ECHO shift  159
                        RETURN shift  167
                         UNSET shift  175
                         THROW shift  190
                      TYPE_VAR shift  217
                    xx_comment shift  41
                  xx_statement shift  28
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_unset_statement shift  34
            xx_throw_statement shift  35
          xx_declare_statement shift  36
            xx_break_statement shift  37
         xx_continue_statement shift  38
            xx_while_statement shift  39
              xx_for_statement shift  40

State 63:
     (93) xx_while_statement ::= WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 93

State 64:
          xx_for_statement ::= FOR * IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR * IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                    IDENTIFIER shift  65

State 65:
          xx_for_statement ::= FOR IDENTIFIER * IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER * COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                         COMMA shift  259
                            IN shift  66

State 66:
          xx_for_statement ::= FOR IDENTIFIER IN * xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_eval_expr ::= * xx_literal_expr
          xx_eval_expr ::= * NOT xx_eval_expr
          xx_eval_expr ::= * TYPEOF xx_eval_expr
          xx_eval_expr ::= * ISSET xx_isset_expr
          xx_eval_expr ::= * xx_eval_expr TYPEOF xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr EQUALS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr NOTEQUALS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr IDENTICAL xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr NOTIDENTICAL xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr LESS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr GREATER xx_eval_expr
          xx_eval_expr ::= * PARENTHESES_OPEN xx_eval_expr PARENTHESES_CLOSE
          xx_eval_expr ::= * IDENTIFIER
          xx_eval_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_eval_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                        TYPEOF shift  227
                           NOT shift  224
                    IDENTIFIER shift  252
              PARENTHESES_OPEN shift  249
                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
                         ISSET shift  230
               xx_literal_expr shift  223
                  xx_eval_expr shift  67

State 67:
          xx_for_statement ::= FOR IDENTIFIER IN xx_eval_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_eval_expr ::= xx_eval_expr * TYPEOF xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * EQUALS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * NOTEQUALS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * IDENTICAL xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * NOTIDENTICAL xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * LESS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * GREATER xx_eval_expr

                        EQUALS shift  226
                     IDENTICAL shift  241
                          LESS shift  245
                       GREATER shift  247
                  NOTIDENTICAL shift  243
                     NOTEQUALS shift  229
                        TYPEOF shift  222
                  BRACKET_OPEN shift  68

State 68:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER IN xx_eval_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_return_statement ::= * RETURN xx_literal_expr DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_comment ::= * COMMENT

                       COMMENT shift  220
                  TYPE_INTEGER shift  199
                   TYPE_DOUBLE shift  208
                     TYPE_BOOL shift  214
                   TYPE_STRING shift  211
                         BREAK shift  42
                      CONTINUE shift  44
                            IF shift  46
                          LOOP shift  55
                         WHILE shift  59
                           FOR shift  64
                           LET shift  71
                          ECHO shift  159
                        RETURN shift  167
                         UNSET shift  175
                         THROW shift  190
                      TYPE_VAR shift  217
                    xx_comment shift  41
             xx_statement_list shift  69
                  xx_statement shift  221
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_unset_statement shift  34
            xx_throw_statement shift  35
          xx_declare_statement shift  36
            xx_break_statement shift  37
         xx_continue_statement shift  38
            xx_while_statement shift  39
              xx_for_statement shift  40

State 69:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_return_statement ::= * RETURN xx_literal_expr DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_comment ::= * COMMENT

                 BRACKET_CLOSE shift  70
                       COMMENT shift  220
                  TYPE_INTEGER shift  199
                   TYPE_DOUBLE shift  208
                     TYPE_BOOL shift  214
                   TYPE_STRING shift  211
                         BREAK shift  42
                      CONTINUE shift  44
                            IF shift  46
                          LOOP shift  55
                         WHILE shift  59
                           FOR shift  64
                           LET shift  71
                          ECHO shift  159
                        RETURN shift  167
                         UNSET shift  175
                         THROW shift  190
                      TYPE_VAR shift  217
                    xx_comment shift  41
                  xx_statement shift  28
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_unset_statement shift  34
            xx_throw_statement shift  35
          xx_declare_statement shift  36
            xx_break_statement shift  37
         xx_continue_statement shift  38
            xx_while_statement shift  39
              xx_for_statement shift  40

State 70:
     (94) xx_for_statement ::= FOR IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 94

State 71:
          xx_let_statement ::= LET * xx_let_assignments DOTCOMMA
          xx_let_assignments ::= * xx_let_assignments COMMA xx_let_assignment
          xx_let_assignments ::= * xx_let_assignment
          xx_let_assignment ::= * IDENTIFIER ASSIGN xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW IDENTIFIER ASSIGN xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE ASSIGN xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE ASSIGN xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER INCR
          xx_let_assignment ::= * IDENTIFIER DECR

                    IDENTIFIER shift  76
            xx_let_assignments shift  72
             xx_let_assignment shift  158

State 72:
          xx_let_statement ::= LET xx_let_assignments * DOTCOMMA
          xx_let_assignments ::= xx_let_assignments * COMMA xx_let_assignment

                         COMMA shift  74
                      DOTCOMMA shift  73

State 73:
     (96) xx_let_statement ::= LET xx_let_assignments DOTCOMMA *

                     {default} reduce 96

State 74:
          xx_let_assignments ::= xx_let_assignments COMMA * xx_let_assignment
          xx_let_assignment ::= * IDENTIFIER ASSIGN xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW IDENTIFIER ASSIGN xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE ASSIGN xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE ASSIGN xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER INCR
          xx_let_assignment ::= * IDENTIFIER DECR

                    IDENTIFIER shift  76
             xx_let_assignment shift  75

State 75:
     (97) xx_let_assignments ::= xx_let_assignments COMMA xx_let_assignment *

                     {default} reduce 97

State 76:
          xx_let_assignment ::= IDENTIFIER * ASSIGN xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * ARROW IDENTIFIER ASSIGN xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * SBRACKET_OPEN SBRACKET_CLOSE ASSIGN xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE ASSIGN xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * INCR
          xx_let_assignment ::= IDENTIFIER * DECR

                        ASSIGN shift  77
                         ARROW shift  144
                 SBRACKET_OPEN shift  148
                          INCR shift  156
                          DECR shift  157

State 77:
          xx_let_assignment ::= IDENTIFIER ASSIGN * xx_assign_expr
          xx_assign_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_assign_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_assign_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_assign_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE
          xx_assign_expr ::= * xx_assign_expr ADD xx_assign_expr
          xx_assign_expr ::= * xx_assign_expr SUB xx_assign_expr
          xx_assign_expr ::= * INSTANCEOF xx_assign_expr
          xx_assign_expr ::= * TYPEOF xx_assign_expr
          xx_assign_expr ::= * IDENTIFIER
          xx_assign_expr ::= * INTEGER
          xx_assign_expr ::= * STRING
          xx_assign_expr ::= * DOUBLE
          xx_assign_expr ::= * NULL
          xx_assign_expr ::= * FALSE
          xx_assign_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_assign_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_assign_expr ::= * NEW IDENTIFIER
          xx_assign_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= * TRUE

                        TYPEOF shift  114
                    INSTANCEOF shift  112
                           NEW shift  137
                    IDENTIFIER shift  80
                 SBRACKET_OPEN shift  121
                       INTEGER shift  116
                        STRING shift  117
                        DOUBLE shift  118
                          NULL shift  119
                         FALSE shift  120
                          TRUE shift  143
                xx_assign_expr shift  78

State 78:
     (99) xx_let_assignment ::= IDENTIFIER ASSIGN xx_assign_expr *
          xx_assign_expr ::= xx_assign_expr * ADD xx_assign_expr
          xx_assign_expr ::= xx_assign_expr * SUB xx_assign_expr

                           ADD shift  79
                           SUB shift  110
                     {default} reduce 99

State 79:
          xx_assign_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_assign_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_assign_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_assign_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE
          xx_assign_expr ::= * xx_assign_expr ADD xx_assign_expr
          xx_assign_expr ::= xx_assign_expr ADD * xx_assign_expr
          xx_assign_expr ::= * xx_assign_expr SUB xx_assign_expr
          xx_assign_expr ::= * INSTANCEOF xx_assign_expr
          xx_assign_expr ::= * TYPEOF xx_assign_expr
          xx_assign_expr ::= * IDENTIFIER
          xx_assign_expr ::= * INTEGER
          xx_assign_expr ::= * STRING
          xx_assign_expr ::= * DOUBLE
          xx_assign_expr ::= * NULL
          xx_assign_expr ::= * FALSE
          xx_assign_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_assign_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_assign_expr ::= * NEW IDENTIFIER
          xx_assign_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= * TRUE

                        TYPEOF shift  114
                    INSTANCEOF shift  112
                           NEW shift  137
                    IDENTIFIER shift  80
                 SBRACKET_OPEN shift  121
                       INTEGER shift  116
                        STRING shift  117
                        DOUBLE shift  118
                          NULL shift  119
                         FALSE shift  120
                          TRUE shift  143
                xx_assign_expr shift  109

State 80:
          xx_assign_expr ::= IDENTIFIER * ARROW IDENTIFIER
          xx_assign_expr ::= IDENTIFIER * SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_assign_expr ::= IDENTIFIER * SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_assign_expr ::= IDENTIFIER * SBRACKET_OPEN STRING SBRACKET_CLOSE
    (136) xx_assign_expr ::= IDENTIFIER *
          xx_assign_expr ::= IDENTIFIER * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= IDENTIFIER * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= IDENTIFIER * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  105
                         ARROW shift  81
                 SBRACKET_OPEN shift  98
                     {default} reduce 136

State 81:
          xx_assign_expr ::= IDENTIFIER ARROW * IDENTIFIER
          xx_assign_expr ::= IDENTIFIER ARROW * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= IDENTIFIER ARROW * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                    IDENTIFIER shift  82

State 82:
    (128) xx_assign_expr ::= IDENTIFIER ARROW IDENTIFIER *
          xx_assign_expr ::= IDENTIFIER ARROW IDENTIFIER * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= IDENTIFIER ARROW IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  83
                     {default} reduce 128

State 83:
          xx_assign_expr ::= IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN * xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE
          xx_call_parameters ::= * xx_call_parameters COMMA xx_call_parameter
          xx_call_parameters ::= * xx_call_parameter
          xx_call_parameter ::= * xx_literal_expr
          xx_call_parameter ::= * IDENTIFIER
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                    IDENTIFIER shift  89
             PARENTHESES_CLOSE shift  96
                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
               xx_literal_expr shift  88
            xx_call_parameters shift  84
             xx_call_parameter shift  97

State 84:
          xx_assign_expr ::= IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters * PARENTHESES_CLOSE
          xx_call_parameters ::= xx_call_parameters * COMMA xx_call_parameter

                         COMMA shift  86
             PARENTHESES_CLOSE shift  85

State 85:
    (149) xx_assign_expr ::= IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE *

                     {default} reduce 149

State 86:
          xx_call_parameters ::= xx_call_parameters COMMA * xx_call_parameter
          xx_call_parameter ::= * xx_literal_expr
          xx_call_parameter ::= * IDENTIFIER
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                    IDENTIFIER shift  89
                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
               xx_literal_expr shift  88
             xx_call_parameter shift  87

State 87:
    (151) xx_call_parameters ::= xx_call_parameters COMMA xx_call_parameter *

                     {default} reduce 151

State 88:
    (153) xx_call_parameter ::= xx_literal_expr *

                     {default} reduce 153

State 89:
    (154) xx_call_parameter ::= IDENTIFIER *

                     {default} reduce 154

State 90:
    (165) xx_literal_expr ::= INTEGER *

                     {default} reduce 165

State 91:
    (166) xx_literal_expr ::= STRING *

                     {default} reduce 166

State 92:
    (167) xx_literal_expr ::= DOUBLE *

                     {default} reduce 167

State 93:
    (168) xx_literal_expr ::= NULL *

                     {default} reduce 168

State 94:
    (169) xx_literal_expr ::= FALSE *

                     {default} reduce 169

State 95:
    (170) xx_literal_expr ::= TRUE *

                     {default} reduce 170

State 96:
    (150) xx_assign_expr ::= IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE *

                     {default} reduce 150

State 97:
    (152) xx_call_parameters ::= xx_call_parameter *

                     {default} reduce 152

State 98:
          xx_assign_expr ::= IDENTIFIER SBRACKET_OPEN * IDENTIFIER SBRACKET_CLOSE
          xx_assign_expr ::= IDENTIFIER SBRACKET_OPEN * INTEGER SBRACKET_CLOSE
          xx_assign_expr ::= IDENTIFIER SBRACKET_OPEN * STRING SBRACKET_CLOSE

                    IDENTIFIER shift  99
                       INTEGER shift  101
                        STRING shift  103

State 99:
          xx_assign_expr ::= IDENTIFIER SBRACKET_OPEN IDENTIFIER * SBRACKET_CLOSE

                SBRACKET_CLOSE shift  100

State 100:
    (129) xx_assign_expr ::= IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE *

                     {default} reduce 129

State 101:
          xx_assign_expr ::= IDENTIFIER SBRACKET_OPEN INTEGER * SBRACKET_CLOSE

                SBRACKET_CLOSE shift  102

State 102:
    (130) xx_assign_expr ::= IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE *

                     {default} reduce 130

State 103:
          xx_assign_expr ::= IDENTIFIER SBRACKET_OPEN STRING * SBRACKET_CLOSE

                SBRACKET_CLOSE shift  104

State 104:
    (131) xx_assign_expr ::= IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE *

                     {default} reduce 131

State 105:
          xx_assign_expr ::= IDENTIFIER PARENTHESES_OPEN * xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE
          xx_call_parameters ::= * xx_call_parameters COMMA xx_call_parameter
          xx_call_parameters ::= * xx_call_parameter
          xx_call_parameter ::= * xx_literal_expr
          xx_call_parameter ::= * IDENTIFIER
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                    IDENTIFIER shift  89
             PARENTHESES_CLOSE shift  108
                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
               xx_literal_expr shift  88
            xx_call_parameters shift  106
             xx_call_parameter shift  97

State 106:
          xx_assign_expr ::= IDENTIFIER PARENTHESES_OPEN xx_call_parameters * PARENTHESES_CLOSE
          xx_call_parameters ::= xx_call_parameters * COMMA xx_call_parameter

                         COMMA shift  86
             PARENTHESES_CLOSE shift  107

State 107:
    (147) xx_assign_expr ::= IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE *

                     {default} reduce 147

State 108:
    (148) xx_assign_expr ::= IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE *

                     {default} reduce 148

State 109:
          xx_assign_expr ::= xx_assign_expr * ADD xx_assign_expr
    (132) xx_assign_expr ::= xx_assign_expr ADD xx_assign_expr *
          xx_assign_expr ::= xx_assign_expr * SUB xx_assign_expr

                     {default} reduce 132

State 110:
          xx_assign_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_assign_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_assign_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_assign_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE
          xx_assign_expr ::= * xx_assign_expr ADD xx_assign_expr
          xx_assign_expr ::= * xx_assign_expr SUB xx_assign_expr
          xx_assign_expr ::= xx_assign_expr SUB * xx_assign_expr
          xx_assign_expr ::= * INSTANCEOF xx_assign_expr
          xx_assign_expr ::= * TYPEOF xx_assign_expr
          xx_assign_expr ::= * IDENTIFIER
          xx_assign_expr ::= * INTEGER
          xx_assign_expr ::= * STRING
          xx_assign_expr ::= * DOUBLE
          xx_assign_expr ::= * NULL
          xx_assign_expr ::= * FALSE
          xx_assign_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_assign_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_assign_expr ::= * NEW IDENTIFIER
          xx_assign_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= * TRUE

                        TYPEOF shift  114
                    INSTANCEOF shift  112
                           NEW shift  137
                    IDENTIFIER shift  80
                 SBRACKET_OPEN shift  121
                       INTEGER shift  116
                        STRING shift  117
                        DOUBLE shift  118
                          NULL shift  119
                         FALSE shift  120
                          TRUE shift  143
                xx_assign_expr shift  111

State 111:
          xx_assign_expr ::= xx_assign_expr * ADD xx_assign_expr
          xx_assign_expr ::= xx_assign_expr * SUB xx_assign_expr
    (133) xx_assign_expr ::= xx_assign_expr SUB xx_assign_expr *

                     {default} reduce 133

State 112:
          xx_assign_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_assign_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_assign_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_assign_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE
          xx_assign_expr ::= * xx_assign_expr ADD xx_assign_expr
          xx_assign_expr ::= * xx_assign_expr SUB xx_assign_expr
          xx_assign_expr ::= * INSTANCEOF xx_assign_expr
          xx_assign_expr ::= INSTANCEOF * xx_assign_expr
          xx_assign_expr ::= * TYPEOF xx_assign_expr
          xx_assign_expr ::= * IDENTIFIER
          xx_assign_expr ::= * INTEGER
          xx_assign_expr ::= * STRING
          xx_assign_expr ::= * DOUBLE
          xx_assign_expr ::= * NULL
          xx_assign_expr ::= * FALSE
          xx_assign_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_assign_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_assign_expr ::= * NEW IDENTIFIER
          xx_assign_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= * TRUE

                        TYPEOF shift  114
                    INSTANCEOF shift  112
                           NEW shift  137
                    IDENTIFIER shift  80
                 SBRACKET_OPEN shift  121
                       INTEGER shift  116
                        STRING shift  117
                        DOUBLE shift  118
                          NULL shift  119
                         FALSE shift  120
                          TRUE shift  143
                xx_assign_expr shift  113

State 113:
          xx_assign_expr ::= xx_assign_expr * ADD xx_assign_expr
          xx_assign_expr ::= xx_assign_expr * SUB xx_assign_expr
    (134) xx_assign_expr ::= INSTANCEOF xx_assign_expr *

                     {default} reduce 134

State 114:
          xx_assign_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_assign_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_assign_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_assign_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE
          xx_assign_expr ::= * xx_assign_expr ADD xx_assign_expr
          xx_assign_expr ::= * xx_assign_expr SUB xx_assign_expr
          xx_assign_expr ::= * INSTANCEOF xx_assign_expr
          xx_assign_expr ::= * TYPEOF xx_assign_expr
          xx_assign_expr ::= TYPEOF * xx_assign_expr
          xx_assign_expr ::= * IDENTIFIER
          xx_assign_expr ::= * INTEGER
          xx_assign_expr ::= * STRING
          xx_assign_expr ::= * DOUBLE
          xx_assign_expr ::= * NULL
          xx_assign_expr ::= * FALSE
          xx_assign_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_assign_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_assign_expr ::= * NEW IDENTIFIER
          xx_assign_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= * TRUE

                        TYPEOF shift  114
                    INSTANCEOF shift  112
                           NEW shift  137
                    IDENTIFIER shift  80
                 SBRACKET_OPEN shift  121
                       INTEGER shift  116
                        STRING shift  117
                        DOUBLE shift  118
                          NULL shift  119
                         FALSE shift  120
                          TRUE shift  143
                xx_assign_expr shift  115

State 115:
          xx_assign_expr ::= xx_assign_expr * ADD xx_assign_expr
          xx_assign_expr ::= xx_assign_expr * SUB xx_assign_expr
    (135) xx_assign_expr ::= TYPEOF xx_assign_expr *

                     {default} reduce 135

State 116:
    (137) xx_assign_expr ::= INTEGER *

                     {default} reduce 137

State 117:
    (138) xx_assign_expr ::= STRING *

                     {default} reduce 138

State 118:
    (139) xx_assign_expr ::= DOUBLE *

                     {default} reduce 139

State 119:
    (140) xx_assign_expr ::= NULL *

                     {default} reduce 140

State 120:
    (141) xx_assign_expr ::= FALSE *

                     {default} reduce 141

State 121:
          xx_assign_expr ::= SBRACKET_OPEN * SBRACKET_CLOSE
          xx_assign_expr ::= SBRACKET_OPEN * xx_array_list SBRACKET_CLOSE
          xx_array_list ::= * xx_array_list COMMA xx_array_item
          xx_array_list ::= * xx_array_item
          xx_array_item ::= * xx_array_key COLON xx_array_value
          xx_array_item ::= * xx_array_value
          xx_array_key ::= * IDENTIFIER
          xx_array_key ::= * STRING
          xx_array_key ::= * INTEGER
          xx_array_value ::= * xx_literal_expr
          xx_array_value ::= * IDENTIFIER
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                    IDENTIFIER shift  133
                SBRACKET_CLOSE shift  122
                       INTEGER shift  135
                        STRING shift  134
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
               xx_literal_expr shift  130
                 xx_array_list shift  123
                 xx_array_item shift  136
                  xx_array_key shift  127
                xx_array_value shift  132

State 122:
    (142) xx_assign_expr ::= SBRACKET_OPEN SBRACKET_CLOSE *

                     {default} reduce 142

State 123:
          xx_assign_expr ::= SBRACKET_OPEN xx_array_list * SBRACKET_CLOSE
          xx_array_list ::= xx_array_list * COMMA xx_array_item

                         COMMA shift  125
                SBRACKET_CLOSE shift  124

State 124:
    (143) xx_assign_expr ::= SBRACKET_OPEN xx_array_list SBRACKET_CLOSE *

                     {default} reduce 143

State 125:
          xx_array_list ::= xx_array_list COMMA * xx_array_item
          xx_array_item ::= * xx_array_key COLON xx_array_value
          xx_array_item ::= * xx_array_value
          xx_array_key ::= * IDENTIFIER
          xx_array_key ::= * STRING
          xx_array_key ::= * INTEGER
          xx_array_value ::= * xx_literal_expr
          xx_array_value ::= * IDENTIFIER
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                    IDENTIFIER shift  133
                       INTEGER shift  135
                        STRING shift  134
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
               xx_literal_expr shift  130
                 xx_array_item shift  126
                  xx_array_key shift  127
                xx_array_value shift  132

State 126:
    (155) xx_array_list ::= xx_array_list COMMA xx_array_item *

                     {default} reduce 155

State 127:
          xx_array_item ::= xx_array_key * COLON xx_array_value

                         COLON shift  128

State 128:
          xx_array_item ::= xx_array_key COLON * xx_array_value
          xx_array_value ::= * xx_literal_expr
          xx_array_value ::= * IDENTIFIER
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                    IDENTIFIER shift  131
                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
               xx_literal_expr shift  130
                xx_array_value shift  129

State 129:
    (157) xx_array_item ::= xx_array_key COLON xx_array_value *

                     {default} reduce 157

State 130:
    (162) xx_array_value ::= xx_literal_expr *

                     {default} reduce 162

State 131:
    (163) xx_array_value ::= IDENTIFIER *

                     {default} reduce 163

State 132:
    (158) xx_array_item ::= xx_array_value *

                     {default} reduce 158

State 133:
    (159) xx_array_key ::= IDENTIFIER *
    (163) xx_array_value ::= IDENTIFIER *

                         COLON reduce 159
                     {default} reduce 163

State 134:
    (160) xx_array_key ::= STRING *
    (166) xx_literal_expr ::= STRING *

                         COLON reduce 160
                     {default} reduce 166

State 135:
    (161) xx_array_key ::= INTEGER *
    (165) xx_literal_expr ::= INTEGER *

                         COLON reduce 161
                     {default} reduce 165

State 136:
    (156) xx_array_list ::= xx_array_item *

                     {default} reduce 156

State 137:
          xx_assign_expr ::= NEW * IDENTIFIER
          xx_assign_expr ::= NEW * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= NEW * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE

                    IDENTIFIER shift  138

State 138:
    (144) xx_assign_expr ::= NEW IDENTIFIER *
          xx_assign_expr ::= NEW IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= NEW IDENTIFIER * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  139
                     {default} reduce 144

State 139:
          xx_assign_expr ::= NEW IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE
          xx_assign_expr ::= NEW IDENTIFIER PARENTHESES_OPEN * xx_call_parameters PARENTHESES_CLOSE
          xx_call_parameters ::= * xx_call_parameters COMMA xx_call_parameter
          xx_call_parameters ::= * xx_call_parameter
          xx_call_parameter ::= * xx_literal_expr
          xx_call_parameter ::= * IDENTIFIER
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                    IDENTIFIER shift  89
             PARENTHESES_CLOSE shift  140
                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
               xx_literal_expr shift  88
            xx_call_parameters shift  141
             xx_call_parameter shift  97

State 140:
    (145) xx_assign_expr ::= NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE *

                     {default} reduce 145

State 141:
          xx_assign_expr ::= NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters * PARENTHESES_CLOSE
          xx_call_parameters ::= xx_call_parameters * COMMA xx_call_parameter

                         COMMA shift  86
             PARENTHESES_CLOSE shift  142

State 142:
    (146) xx_assign_expr ::= NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE *

                     {default} reduce 146

State 143:
    (164) xx_assign_expr ::= TRUE *

                     {default} reduce 164

State 144:
          xx_let_assignment ::= IDENTIFIER ARROW * IDENTIFIER ASSIGN xx_assign_expr

                    IDENTIFIER shift  145

State 145:
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER * ASSIGN xx_assign_expr

                        ASSIGN shift  146

State 146:
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER ASSIGN * xx_assign_expr
          xx_assign_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_assign_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_assign_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_assign_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE
          xx_assign_expr ::= * xx_assign_expr ADD xx_assign_expr
          xx_assign_expr ::= * xx_assign_expr SUB xx_assign_expr
          xx_assign_expr ::= * INSTANCEOF xx_assign_expr
          xx_assign_expr ::= * TYPEOF xx_assign_expr
          xx_assign_expr ::= * IDENTIFIER
          xx_assign_expr ::= * INTEGER
          xx_assign_expr ::= * STRING
          xx_assign_expr ::= * DOUBLE
          xx_assign_expr ::= * NULL
          xx_assign_expr ::= * FALSE
          xx_assign_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_assign_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_assign_expr ::= * NEW IDENTIFIER
          xx_assign_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= * TRUE

                        TYPEOF shift  114
                    INSTANCEOF shift  112
                           NEW shift  137
                    IDENTIFIER shift  80
                 SBRACKET_OPEN shift  121
                       INTEGER shift  116
                        STRING shift  117
                        DOUBLE shift  118
                          NULL shift  119
                         FALSE shift  120
                          TRUE shift  143
                xx_assign_expr shift  147

State 147:
    (100) xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER ASSIGN xx_assign_expr *
          xx_assign_expr ::= xx_assign_expr * ADD xx_assign_expr
          xx_assign_expr ::= xx_assign_expr * SUB xx_assign_expr

                           ADD shift  79
                           SUB shift  110
                     {default} reduce 100

State 148:
          xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN * SBRACKET_CLOSE ASSIGN xx_assign_expr
          xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN * IDENTIFIER SBRACKET_CLOSE ASSIGN xx_assign_expr

                    IDENTIFIER shift  152
                SBRACKET_CLOSE shift  149

State 149:
          xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE * ASSIGN xx_assign_expr

                        ASSIGN shift  150

State 150:
          xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE ASSIGN * xx_assign_expr
          xx_assign_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_assign_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_assign_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_assign_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE
          xx_assign_expr ::= * xx_assign_expr ADD xx_assign_expr
          xx_assign_expr ::= * xx_assign_expr SUB xx_assign_expr
          xx_assign_expr ::= * INSTANCEOF xx_assign_expr
          xx_assign_expr ::= * TYPEOF xx_assign_expr
          xx_assign_expr ::= * IDENTIFIER
          xx_assign_expr ::= * INTEGER
          xx_assign_expr ::= * STRING
          xx_assign_expr ::= * DOUBLE
          xx_assign_expr ::= * NULL
          xx_assign_expr ::= * FALSE
          xx_assign_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_assign_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_assign_expr ::= * NEW IDENTIFIER
          xx_assign_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= * TRUE

                        TYPEOF shift  114
                    INSTANCEOF shift  112
                           NEW shift  137
                    IDENTIFIER shift  80
                 SBRACKET_OPEN shift  121
                       INTEGER shift  116
                        STRING shift  117
                        DOUBLE shift  118
                          NULL shift  119
                         FALSE shift  120
                          TRUE shift  143
                xx_assign_expr shift  151

State 151:
    (101) xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE ASSIGN xx_assign_expr *
          xx_assign_expr ::= xx_assign_expr * ADD xx_assign_expr
          xx_assign_expr ::= xx_assign_expr * SUB xx_assign_expr

                           ADD shift  79
                           SUB shift  110
                     {default} reduce 101

State 152:
          xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN IDENTIFIER * SBRACKET_CLOSE ASSIGN xx_assign_expr

                SBRACKET_CLOSE shift  153

State 153:
          xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE * ASSIGN xx_assign_expr

                        ASSIGN shift  154

State 154:
          xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE ASSIGN * xx_assign_expr
          xx_assign_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_assign_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_assign_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_assign_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE
          xx_assign_expr ::= * xx_assign_expr ADD xx_assign_expr
          xx_assign_expr ::= * xx_assign_expr SUB xx_assign_expr
          xx_assign_expr ::= * INSTANCEOF xx_assign_expr
          xx_assign_expr ::= * TYPEOF xx_assign_expr
          xx_assign_expr ::= * IDENTIFIER
          xx_assign_expr ::= * INTEGER
          xx_assign_expr ::= * STRING
          xx_assign_expr ::= * DOUBLE
          xx_assign_expr ::= * NULL
          xx_assign_expr ::= * FALSE
          xx_assign_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_assign_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_assign_expr ::= * NEW IDENTIFIER
          xx_assign_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= * TRUE

                        TYPEOF shift  114
                    INSTANCEOF shift  112
                           NEW shift  137
                    IDENTIFIER shift  80
                 SBRACKET_OPEN shift  121
                       INTEGER shift  116
                        STRING shift  117
                        DOUBLE shift  118
                          NULL shift  119
                         FALSE shift  120
                          TRUE shift  143
                xx_assign_expr shift  155

State 155:
    (102) xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE ASSIGN xx_assign_expr *
          xx_assign_expr ::= xx_assign_expr * ADD xx_assign_expr
          xx_assign_expr ::= xx_assign_expr * SUB xx_assign_expr

                           ADD shift  79
                           SUB shift  110
                     {default} reduce 102

State 156:
    (103) xx_let_assignment ::= IDENTIFIER INCR *

                     {default} reduce 103

State 157:
    (104) xx_let_assignment ::= IDENTIFIER DECR *

                     {default} reduce 104

State 158:
     (98) xx_let_assignments ::= xx_let_assignment *

                     {default} reduce 98

State 159:
          xx_echo_statement ::= ECHO * xx_echo_expressions DOTCOMMA
          xx_echo_expressions ::= * xx_echo_expressions COMMA xx_echo_expression
          xx_echo_expressions ::= * xx_echo_expression
          xx_echo_expression ::= * xx_literal_expr
          xx_echo_expression ::= * IDENTIFIER
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                    IDENTIFIER shift  165
                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
               xx_literal_expr shift  164
           xx_echo_expressions shift  160
            xx_echo_expression shift  166

State 160:
          xx_echo_statement ::= ECHO xx_echo_expressions * DOTCOMMA
          xx_echo_expressions ::= xx_echo_expressions * COMMA xx_echo_expression

                         COMMA shift  162
                      DOTCOMMA shift  161

State 161:
    (105) xx_echo_statement ::= ECHO xx_echo_expressions DOTCOMMA *

                     {default} reduce 105

State 162:
          xx_echo_expressions ::= xx_echo_expressions COMMA * xx_echo_expression
          xx_echo_expression ::= * xx_literal_expr
          xx_echo_expression ::= * IDENTIFIER
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                    IDENTIFIER shift  165
                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
               xx_literal_expr shift  164
            xx_echo_expression shift  163

State 163:
    (106) xx_echo_expressions ::= xx_echo_expressions COMMA xx_echo_expression *

                     {default} reduce 106

State 164:
    (108) xx_echo_expression ::= xx_literal_expr *

                     {default} reduce 108

State 165:
    (109) xx_echo_expression ::= IDENTIFIER *

                     {default} reduce 109

State 166:
    (107) xx_echo_expressions ::= xx_echo_expression *

                     {default} reduce 107

State 167:
          xx_return_statement ::= RETURN * xx_literal_expr DOTCOMMA
          xx_return_statement ::= RETURN * IDENTIFIER DOTCOMMA
          xx_return_statement ::= RETURN * IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                    IDENTIFIER shift  170
                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
               xx_literal_expr shift  168

State 168:
          xx_return_statement ::= RETURN xx_literal_expr * DOTCOMMA

                      DOTCOMMA shift  169

State 169:
    (110) xx_return_statement ::= RETURN xx_literal_expr DOTCOMMA *

                     {default} reduce 110

State 170:
          xx_return_statement ::= RETURN IDENTIFIER * DOTCOMMA
          xx_return_statement ::= RETURN IDENTIFIER * ARROW IDENTIFIER DOTCOMMA

                      DOTCOMMA shift  171
                         ARROW shift  172

State 171:
    (111) xx_return_statement ::= RETURN IDENTIFIER DOTCOMMA *

                     {default} reduce 111

State 172:
          xx_return_statement ::= RETURN IDENTIFIER ARROW * IDENTIFIER DOTCOMMA

                    IDENTIFIER shift  173

State 173:
          xx_return_statement ::= RETURN IDENTIFIER ARROW IDENTIFIER * DOTCOMMA

                      DOTCOMMA shift  174

State 174:
    (112) xx_return_statement ::= RETURN IDENTIFIER ARROW IDENTIFIER DOTCOMMA *

                     {default} reduce 112

State 175:
          xx_unset_statement ::= UNSET * IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= UNSET * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= UNSET * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= UNSET * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA

                    IDENTIFIER shift  176

State 176:
          xx_unset_statement ::= UNSET IDENTIFIER * ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= UNSET IDENTIFIER * SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= UNSET IDENTIFIER * SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= UNSET IDENTIFIER * SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA

                         ARROW shift  177
                 SBRACKET_OPEN shift  180

State 177:
          xx_unset_statement ::= UNSET IDENTIFIER ARROW * IDENTIFIER DOTCOMMA

                    IDENTIFIER shift  178

State 178:
          xx_unset_statement ::= UNSET IDENTIFIER ARROW IDENTIFIER * DOTCOMMA

                      DOTCOMMA shift  179

State 179:
    (113) xx_unset_statement ::= UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA *

                     {default} reduce 113

State 180:
          xx_unset_statement ::= UNSET IDENTIFIER SBRACKET_OPEN * IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= UNSET IDENTIFIER SBRACKET_OPEN * INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= UNSET IDENTIFIER SBRACKET_OPEN * STRING SBRACKET_CLOSE DOTCOMMA

                    IDENTIFIER shift  181
                       INTEGER shift  184
                        STRING shift  187

State 181:
          xx_unset_statement ::= UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER * SBRACKET_CLOSE DOTCOMMA

                SBRACKET_CLOSE shift  182

State 182:
          xx_unset_statement ::= UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE * DOTCOMMA

                      DOTCOMMA shift  183

State 183:
    (114) xx_unset_statement ::= UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA *

                     {default} reduce 114

State 184:
          xx_unset_statement ::= UNSET IDENTIFIER SBRACKET_OPEN INTEGER * SBRACKET_CLOSE DOTCOMMA

                SBRACKET_CLOSE shift  185

State 185:
          xx_unset_statement ::= UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE * DOTCOMMA

                      DOTCOMMA shift  186

State 186:
    (115) xx_unset_statement ::= UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA *

                     {default} reduce 115

State 187:
          xx_unset_statement ::= UNSET IDENTIFIER SBRACKET_OPEN STRING * SBRACKET_CLOSE DOTCOMMA

                SBRACKET_CLOSE shift  188

State 188:
          xx_unset_statement ::= UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE * DOTCOMMA

                      DOTCOMMA shift  189

State 189:
    (116) xx_unset_statement ::= UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA *

                     {default} reduce 116

State 190:
          xx_throw_statement ::= THROW * IDENTIFIER DOTCOMMA
          xx_throw_statement ::= THROW * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA

                           NEW shift  193
                    IDENTIFIER shift  191

State 191:
          xx_throw_statement ::= THROW IDENTIFIER * DOTCOMMA

                      DOTCOMMA shift  192

State 192:
    (117) xx_throw_statement ::= THROW IDENTIFIER DOTCOMMA *

                     {default} reduce 117

State 193:
          xx_throw_statement ::= THROW NEW * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA

                    IDENTIFIER shift  194

State 194:
          xx_throw_statement ::= THROW NEW IDENTIFIER * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA

              PARENTHESES_OPEN shift  195

State 195:
          xx_throw_statement ::= THROW NEW IDENTIFIER PARENTHESES_OPEN * xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_call_parameters ::= * xx_call_parameters COMMA xx_call_parameter
          xx_call_parameters ::= * xx_call_parameter
          xx_call_parameter ::= * xx_literal_expr
          xx_call_parameter ::= * IDENTIFIER
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                    IDENTIFIER shift  89
                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
               xx_literal_expr shift  88
            xx_call_parameters shift  196
             xx_call_parameter shift  97

State 196:
          xx_throw_statement ::= THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters * PARENTHESES_CLOSE DOTCOMMA
          xx_call_parameters ::= xx_call_parameters * COMMA xx_call_parameter

                         COMMA shift  86
             PARENTHESES_CLOSE shift  197

State 197:
          xx_throw_statement ::= THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE * DOTCOMMA

                      DOTCOMMA shift  198

State 198:
    (118) xx_throw_statement ::= THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA *

                     {default} reduce 118

State 199:
          xx_declare_statement ::= TYPE_INTEGER * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  204
      xx_declare_variable_list shift  200
           xx_declare_variable shift  207

State 200:
          xx_declare_statement ::= TYPE_INTEGER xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  202
                      DOTCOMMA shift  201

State 201:
    (119) xx_declare_statement ::= TYPE_INTEGER xx_declare_variable_list DOTCOMMA *

                     {default} reduce 119

State 202:
          xx_declare_variable_list ::= xx_declare_variable_list COMMA * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  204
           xx_declare_variable shift  203

State 203:
    (124) xx_declare_variable_list ::= xx_declare_variable_list COMMA xx_declare_variable *

                     {default} reduce 124

State 204:
    (126) xx_declare_variable ::= IDENTIFIER *
          xx_declare_variable ::= IDENTIFIER * ASSIGN xx_literal_expr

                        ASSIGN shift  205
                     {default} reduce 126

State 205:
          xx_declare_variable ::= IDENTIFIER ASSIGN * xx_literal_expr
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
               xx_literal_expr shift  206

State 206:
    (127) xx_declare_variable ::= IDENTIFIER ASSIGN xx_literal_expr *

                     {default} reduce 127

State 207:
    (125) xx_declare_variable_list ::= xx_declare_variable *

                     {default} reduce 125

State 208:
          xx_declare_statement ::= TYPE_DOUBLE * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  204
      xx_declare_variable_list shift  209
           xx_declare_variable shift  207

State 209:
          xx_declare_statement ::= TYPE_DOUBLE xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  202
                      DOTCOMMA shift  210

State 210:
    (120) xx_declare_statement ::= TYPE_DOUBLE xx_declare_variable_list DOTCOMMA *

                     {default} reduce 120

State 211:
          xx_declare_statement ::= TYPE_STRING * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  204
      xx_declare_variable_list shift  212
           xx_declare_variable shift  207

State 212:
          xx_declare_statement ::= TYPE_STRING xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  202
                      DOTCOMMA shift  213

State 213:
    (121) xx_declare_statement ::= TYPE_STRING xx_declare_variable_list DOTCOMMA *

                     {default} reduce 121

State 214:
          xx_declare_statement ::= TYPE_BOOL * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  204
      xx_declare_variable_list shift  215
           xx_declare_variable shift  207

State 215:
          xx_declare_statement ::= TYPE_BOOL xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  202
                      DOTCOMMA shift  216

State 216:
    (122) xx_declare_statement ::= TYPE_BOOL xx_declare_variable_list DOTCOMMA *

                     {default} reduce 122

State 217:
          xx_declare_statement ::= TYPE_VAR * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  204
      xx_declare_variable_list shift  218
           xx_declare_variable shift  207

State 218:
          xx_declare_statement ::= TYPE_VAR xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  202
                      DOTCOMMA shift  219

State 219:
    (123) xx_declare_statement ::= TYPE_VAR xx_declare_variable_list DOTCOMMA *

                     {default} reduce 123

State 220:
    (189) xx_comment ::= COMMENT *

                     {default} reduce 189

State 221:
     (68) xx_statement_list ::= xx_statement *

                     {default} reduce 68

State 222:
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_eval_expr ::= * xx_literal_expr
          xx_eval_expr ::= * NOT xx_eval_expr
          xx_eval_expr ::= * TYPEOF xx_eval_expr
          xx_eval_expr ::= * ISSET xx_isset_expr
          xx_eval_expr ::= * xx_eval_expr TYPEOF xx_eval_expr
          xx_eval_expr ::= xx_eval_expr TYPEOF * xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr EQUALS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr NOTEQUALS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr IDENTICAL xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr NOTIDENTICAL xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr LESS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr GREATER xx_eval_expr
          xx_eval_expr ::= * PARENTHESES_OPEN xx_eval_expr PARENTHESES_CLOSE
          xx_eval_expr ::= * IDENTIFIER
          xx_eval_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_eval_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                        TYPEOF shift  227
                           NOT shift  224
                    IDENTIFIER shift  252
              PARENTHESES_OPEN shift  249
                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
                         ISSET shift  230
               xx_literal_expr shift  223
                  xx_eval_expr shift  258

State 223:
    (171) xx_eval_expr ::= xx_literal_expr *

                     {default} reduce 171

State 224:
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_eval_expr ::= * xx_literal_expr
          xx_eval_expr ::= * NOT xx_eval_expr
          xx_eval_expr ::= NOT * xx_eval_expr
          xx_eval_expr ::= * TYPEOF xx_eval_expr
          xx_eval_expr ::= * ISSET xx_isset_expr
          xx_eval_expr ::= * xx_eval_expr TYPEOF xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr EQUALS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr NOTEQUALS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr IDENTICAL xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr NOTIDENTICAL xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr LESS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr GREATER xx_eval_expr
          xx_eval_expr ::= * PARENTHESES_OPEN xx_eval_expr PARENTHESES_CLOSE
          xx_eval_expr ::= * IDENTIFIER
          xx_eval_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_eval_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                        TYPEOF shift  227
                           NOT shift  224
                    IDENTIFIER shift  252
              PARENTHESES_OPEN shift  249
                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
                         ISSET shift  230
               xx_literal_expr shift  223
                  xx_eval_expr shift  225

State 225:
    (172) xx_eval_expr ::= NOT xx_eval_expr *
          xx_eval_expr ::= xx_eval_expr * TYPEOF xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * EQUALS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * NOTEQUALS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * IDENTICAL xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * NOTIDENTICAL xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * LESS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * GREATER xx_eval_expr

                     {default} reduce 172

State 226:
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_eval_expr ::= * xx_literal_expr
          xx_eval_expr ::= * NOT xx_eval_expr
          xx_eval_expr ::= * TYPEOF xx_eval_expr
          xx_eval_expr ::= * ISSET xx_isset_expr
          xx_eval_expr ::= * xx_eval_expr TYPEOF xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr EQUALS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr EQUALS * xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr NOTEQUALS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr IDENTICAL xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr NOTIDENTICAL xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr LESS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr GREATER xx_eval_expr
          xx_eval_expr ::= * PARENTHESES_OPEN xx_eval_expr PARENTHESES_CLOSE
          xx_eval_expr ::= * IDENTIFIER
          xx_eval_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_eval_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                        TYPEOF shift  227
                           NOT shift  224
                    IDENTIFIER shift  252
              PARENTHESES_OPEN shift  249
                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
                         ISSET shift  230
               xx_literal_expr shift  223
                  xx_eval_expr shift  257

State 227:
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_eval_expr ::= * xx_literal_expr
          xx_eval_expr ::= * NOT xx_eval_expr
          xx_eval_expr ::= * TYPEOF xx_eval_expr
          xx_eval_expr ::= TYPEOF * xx_eval_expr
          xx_eval_expr ::= * ISSET xx_isset_expr
          xx_eval_expr ::= * xx_eval_expr TYPEOF xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr EQUALS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr NOTEQUALS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr IDENTICAL xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr NOTIDENTICAL xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr LESS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr GREATER xx_eval_expr
          xx_eval_expr ::= * PARENTHESES_OPEN xx_eval_expr PARENTHESES_CLOSE
          xx_eval_expr ::= * IDENTIFIER
          xx_eval_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_eval_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                        TYPEOF shift  227
                           NOT shift  224
                    IDENTIFIER shift  252
              PARENTHESES_OPEN shift  249
                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
                         ISSET shift  230
               xx_literal_expr shift  223
                  xx_eval_expr shift  228

State 228:
    (173) xx_eval_expr ::= TYPEOF xx_eval_expr *
          xx_eval_expr ::= xx_eval_expr * TYPEOF xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * EQUALS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * NOTEQUALS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * IDENTICAL xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * NOTIDENTICAL xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * LESS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * GREATER xx_eval_expr

                        TYPEOF shift  222
                     {default} reduce 173

State 229:
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_eval_expr ::= * xx_literal_expr
          xx_eval_expr ::= * NOT xx_eval_expr
          xx_eval_expr ::= * TYPEOF xx_eval_expr
          xx_eval_expr ::= * ISSET xx_isset_expr
          xx_eval_expr ::= * xx_eval_expr TYPEOF xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr EQUALS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr NOTEQUALS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr NOTEQUALS * xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr IDENTICAL xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr NOTIDENTICAL xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr LESS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr GREATER xx_eval_expr
          xx_eval_expr ::= * PARENTHESES_OPEN xx_eval_expr PARENTHESES_CLOSE
          xx_eval_expr ::= * IDENTIFIER
          xx_eval_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_eval_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                        TYPEOF shift  227
                           NOT shift  224
                    IDENTIFIER shift  252
              PARENTHESES_OPEN shift  249
                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
                         ISSET shift  230
               xx_literal_expr shift  223
                  xx_eval_expr shift  240

State 230:
          xx_eval_expr ::= ISSET * xx_isset_expr
          xx_isset_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_isset_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_isset_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE

                    IDENTIFIER shift  232
                 xx_isset_expr shift  231

State 231:
    (174) xx_eval_expr ::= ISSET xx_isset_expr *

                     {default} reduce 174

State 232:
          xx_isset_expr ::= IDENTIFIER * SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_isset_expr ::= IDENTIFIER * SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_isset_expr ::= IDENTIFIER * SBRACKET_OPEN STRING SBRACKET_CLOSE

                 SBRACKET_OPEN shift  233

State 233:
          xx_isset_expr ::= IDENTIFIER SBRACKET_OPEN * IDENTIFIER SBRACKET_CLOSE
          xx_isset_expr ::= IDENTIFIER SBRACKET_OPEN * INTEGER SBRACKET_CLOSE
          xx_isset_expr ::= IDENTIFIER SBRACKET_OPEN * STRING SBRACKET_CLOSE

                    IDENTIFIER shift  234
                       INTEGER shift  236
                        STRING shift  238

State 234:
          xx_isset_expr ::= IDENTIFIER SBRACKET_OPEN IDENTIFIER * SBRACKET_CLOSE

                SBRACKET_CLOSE shift  235

State 235:
    (186) xx_isset_expr ::= IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE *

                     {default} reduce 186

State 236:
          xx_isset_expr ::= IDENTIFIER SBRACKET_OPEN INTEGER * SBRACKET_CLOSE

                SBRACKET_CLOSE shift  237

State 237:
    (187) xx_isset_expr ::= IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE *

                     {default} reduce 187

State 238:
          xx_isset_expr ::= IDENTIFIER SBRACKET_OPEN STRING * SBRACKET_CLOSE

                SBRACKET_CLOSE shift  239

State 239:
    (188) xx_isset_expr ::= IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE *

                     {default} reduce 188

State 240:
          xx_eval_expr ::= xx_eval_expr * TYPEOF xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * EQUALS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * NOTEQUALS xx_eval_expr
    (177) xx_eval_expr ::= xx_eval_expr NOTEQUALS xx_eval_expr *
          xx_eval_expr ::= xx_eval_expr * IDENTICAL xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * NOTIDENTICAL xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * LESS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * GREATER xx_eval_expr

                        TYPEOF shift  222
                     {default} reduce 177

State 241:
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_eval_expr ::= * xx_literal_expr
          xx_eval_expr ::= * NOT xx_eval_expr
          xx_eval_expr ::= * TYPEOF xx_eval_expr
          xx_eval_expr ::= * ISSET xx_isset_expr
          xx_eval_expr ::= * xx_eval_expr TYPEOF xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr EQUALS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr NOTEQUALS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr IDENTICAL xx_eval_expr
          xx_eval_expr ::= xx_eval_expr IDENTICAL * xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr NOTIDENTICAL xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr LESS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr GREATER xx_eval_expr
          xx_eval_expr ::= * PARENTHESES_OPEN xx_eval_expr PARENTHESES_CLOSE
          xx_eval_expr ::= * IDENTIFIER
          xx_eval_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_eval_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                        TYPEOF shift  227
                           NOT shift  224
                    IDENTIFIER shift  252
              PARENTHESES_OPEN shift  249
                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
                         ISSET shift  230
               xx_literal_expr shift  223
                  xx_eval_expr shift  242

State 242:
          xx_eval_expr ::= xx_eval_expr * TYPEOF xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * EQUALS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * NOTEQUALS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * IDENTICAL xx_eval_expr
    (178) xx_eval_expr ::= xx_eval_expr IDENTICAL xx_eval_expr *
          xx_eval_expr ::= xx_eval_expr * NOTIDENTICAL xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * LESS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * GREATER xx_eval_expr

                        TYPEOF shift  222
                     {default} reduce 178

State 243:
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_eval_expr ::= * xx_literal_expr
          xx_eval_expr ::= * NOT xx_eval_expr
          xx_eval_expr ::= * TYPEOF xx_eval_expr
          xx_eval_expr ::= * ISSET xx_isset_expr
          xx_eval_expr ::= * xx_eval_expr TYPEOF xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr EQUALS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr NOTEQUALS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr IDENTICAL xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr NOTIDENTICAL xx_eval_expr
          xx_eval_expr ::= xx_eval_expr NOTIDENTICAL * xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr LESS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr GREATER xx_eval_expr
          xx_eval_expr ::= * PARENTHESES_OPEN xx_eval_expr PARENTHESES_CLOSE
          xx_eval_expr ::= * IDENTIFIER
          xx_eval_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_eval_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                        TYPEOF shift  227
                           NOT shift  224
                    IDENTIFIER shift  252
              PARENTHESES_OPEN shift  249
                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
                         ISSET shift  230
               xx_literal_expr shift  223
                  xx_eval_expr shift  244

State 244:
          xx_eval_expr ::= xx_eval_expr * TYPEOF xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * EQUALS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * NOTEQUALS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * IDENTICAL xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * NOTIDENTICAL xx_eval_expr
    (179) xx_eval_expr ::= xx_eval_expr NOTIDENTICAL xx_eval_expr *
          xx_eval_expr ::= xx_eval_expr * LESS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * GREATER xx_eval_expr

                        TYPEOF shift  222
                     {default} reduce 179

State 245:
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_eval_expr ::= * xx_literal_expr
          xx_eval_expr ::= * NOT xx_eval_expr
          xx_eval_expr ::= * TYPEOF xx_eval_expr
          xx_eval_expr ::= * ISSET xx_isset_expr
          xx_eval_expr ::= * xx_eval_expr TYPEOF xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr EQUALS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr NOTEQUALS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr IDENTICAL xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr NOTIDENTICAL xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr LESS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr LESS * xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr GREATER xx_eval_expr
          xx_eval_expr ::= * PARENTHESES_OPEN xx_eval_expr PARENTHESES_CLOSE
          xx_eval_expr ::= * IDENTIFIER
          xx_eval_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_eval_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                        TYPEOF shift  227
                           NOT shift  224
                    IDENTIFIER shift  252
              PARENTHESES_OPEN shift  249
                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
                         ISSET shift  230
               xx_literal_expr shift  223
                  xx_eval_expr shift  246

State 246:
          xx_eval_expr ::= xx_eval_expr * TYPEOF xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * EQUALS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * NOTEQUALS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * IDENTICAL xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * NOTIDENTICAL xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * LESS xx_eval_expr
    (180) xx_eval_expr ::= xx_eval_expr LESS xx_eval_expr *
          xx_eval_expr ::= xx_eval_expr * GREATER xx_eval_expr

                        TYPEOF shift  222
                     {default} reduce 180

State 247:
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_eval_expr ::= * xx_literal_expr
          xx_eval_expr ::= * NOT xx_eval_expr
          xx_eval_expr ::= * TYPEOF xx_eval_expr
          xx_eval_expr ::= * ISSET xx_isset_expr
          xx_eval_expr ::= * xx_eval_expr TYPEOF xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr EQUALS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr NOTEQUALS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr IDENTICAL xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr NOTIDENTICAL xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr LESS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr GREATER xx_eval_expr
          xx_eval_expr ::= xx_eval_expr GREATER * xx_eval_expr
          xx_eval_expr ::= * PARENTHESES_OPEN xx_eval_expr PARENTHESES_CLOSE
          xx_eval_expr ::= * IDENTIFIER
          xx_eval_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_eval_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                        TYPEOF shift  227
                           NOT shift  224
                    IDENTIFIER shift  252
              PARENTHESES_OPEN shift  249
                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
                         ISSET shift  230
               xx_literal_expr shift  223
                  xx_eval_expr shift  248

State 248:
          xx_eval_expr ::= xx_eval_expr * TYPEOF xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * EQUALS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * NOTEQUALS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * IDENTICAL xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * NOTIDENTICAL xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * LESS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * GREATER xx_eval_expr
    (181) xx_eval_expr ::= xx_eval_expr GREATER xx_eval_expr *

                        TYPEOF shift  222
                     {default} reduce 181

State 249:
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_eval_expr ::= * xx_literal_expr
          xx_eval_expr ::= * NOT xx_eval_expr
          xx_eval_expr ::= * TYPEOF xx_eval_expr
          xx_eval_expr ::= * ISSET xx_isset_expr
          xx_eval_expr ::= * xx_eval_expr TYPEOF xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr EQUALS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr NOTEQUALS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr IDENTICAL xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr NOTIDENTICAL xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr LESS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr GREATER xx_eval_expr
          xx_eval_expr ::= * PARENTHESES_OPEN xx_eval_expr PARENTHESES_CLOSE
          xx_eval_expr ::= PARENTHESES_OPEN * xx_eval_expr PARENTHESES_CLOSE
          xx_eval_expr ::= * IDENTIFIER
          xx_eval_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_eval_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                        TYPEOF shift  227
                           NOT shift  224
                    IDENTIFIER shift  252
              PARENTHESES_OPEN shift  249
                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
                         ISSET shift  230
               xx_literal_expr shift  223
                  xx_eval_expr shift  250

State 250:
          xx_eval_expr ::= xx_eval_expr * TYPEOF xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * EQUALS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * NOTEQUALS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * IDENTICAL xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * NOTIDENTICAL xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * LESS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * GREATER xx_eval_expr
          xx_eval_expr ::= PARENTHESES_OPEN xx_eval_expr * PARENTHESES_CLOSE

                        EQUALS shift  226
                     IDENTICAL shift  241
                          LESS shift  245
                       GREATER shift  247
                  NOTIDENTICAL shift  243
                     NOTEQUALS shift  229
                        TYPEOF shift  222
             PARENTHESES_CLOSE shift  251

State 251:
    (182) xx_eval_expr ::= PARENTHESES_OPEN xx_eval_expr PARENTHESES_CLOSE *

                     {default} reduce 182

State 252:
    (183) xx_eval_expr ::= IDENTIFIER *
          xx_eval_expr ::= IDENTIFIER * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_eval_expr ::= IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  253
                     {default} reduce 183

State 253:
          xx_call_parameters ::= * xx_call_parameters COMMA xx_call_parameter
          xx_call_parameters ::= * xx_call_parameter
          xx_call_parameter ::= * xx_literal_expr
          xx_call_parameter ::= * IDENTIFIER
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_eval_expr ::= IDENTIFIER PARENTHESES_OPEN * xx_call_parameters PARENTHESES_CLOSE
          xx_eval_expr ::= IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE

                    IDENTIFIER shift  89
             PARENTHESES_CLOSE shift  256
                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
               xx_literal_expr shift  88
            xx_call_parameters shift  254
             xx_call_parameter shift  97

State 254:
          xx_call_parameters ::= xx_call_parameters * COMMA xx_call_parameter
          xx_eval_expr ::= IDENTIFIER PARENTHESES_OPEN xx_call_parameters * PARENTHESES_CLOSE

                         COMMA shift  86
             PARENTHESES_CLOSE shift  255

State 255:
    (184) xx_eval_expr ::= IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE *

                     {default} reduce 184

State 256:
    (185) xx_eval_expr ::= IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE *

                     {default} reduce 185

State 257:
          xx_eval_expr ::= xx_eval_expr * TYPEOF xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * EQUALS xx_eval_expr
    (176) xx_eval_expr ::= xx_eval_expr EQUALS xx_eval_expr *
          xx_eval_expr ::= xx_eval_expr * NOTEQUALS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * IDENTICAL xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * NOTIDENTICAL xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * LESS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * GREATER xx_eval_expr

                        TYPEOF shift  222
                     {default} reduce 176

State 258:
          xx_eval_expr ::= xx_eval_expr * TYPEOF xx_eval_expr
    (175) xx_eval_expr ::= xx_eval_expr TYPEOF xx_eval_expr *
          xx_eval_expr ::= xx_eval_expr * EQUALS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * NOTEQUALS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * IDENTICAL xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * NOTIDENTICAL xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * LESS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * GREATER xx_eval_expr

                        TYPEOF shift  222
                     {default} reduce 175

State 259:
          xx_for_statement ::= FOR IDENTIFIER COMMA * IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                    IDENTIFIER shift  260

State 260:
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER * IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                            IN shift  261

State 261:
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN * xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_eval_expr ::= * xx_literal_expr
          xx_eval_expr ::= * NOT xx_eval_expr
          xx_eval_expr ::= * TYPEOF xx_eval_expr
          xx_eval_expr ::= * ISSET xx_isset_expr
          xx_eval_expr ::= * xx_eval_expr TYPEOF xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr EQUALS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr NOTEQUALS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr IDENTICAL xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr NOTIDENTICAL xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr LESS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr GREATER xx_eval_expr
          xx_eval_expr ::= * PARENTHESES_OPEN xx_eval_expr PARENTHESES_CLOSE
          xx_eval_expr ::= * IDENTIFIER
          xx_eval_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_eval_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                        TYPEOF shift  227
                           NOT shift  224
                    IDENTIFIER shift  252
              PARENTHESES_OPEN shift  249
                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
                         ISSET shift  230
               xx_literal_expr shift  223
                  xx_eval_expr shift  262

State 262:
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_eval_expr ::= xx_eval_expr * TYPEOF xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * EQUALS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * NOTEQUALS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * IDENTICAL xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * NOTIDENTICAL xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * LESS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * GREATER xx_eval_expr

                        EQUALS shift  226
                     IDENTICAL shift  241
                          LESS shift  245
                       GREATER shift  247
                  NOTIDENTICAL shift  243
                     NOTEQUALS shift  229
                        TYPEOF shift  222
                  BRACKET_OPEN shift  263

State 263:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_return_statement ::= * RETURN xx_literal_expr DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_comment ::= * COMMENT

                       COMMENT shift  220
                  TYPE_INTEGER shift  199
                   TYPE_DOUBLE shift  208
                     TYPE_BOOL shift  214
                   TYPE_STRING shift  211
                         BREAK shift  42
                      CONTINUE shift  44
                            IF shift  46
                          LOOP shift  55
                         WHILE shift  59
                           FOR shift  64
                           LET shift  71
                          ECHO shift  159
                        RETURN shift  167
                         UNSET shift  175
                         THROW shift  190
                      TYPE_VAR shift  217
                    xx_comment shift  41
             xx_statement_list shift  264
                  xx_statement shift  221
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_unset_statement shift  34
            xx_throw_statement shift  35
          xx_declare_statement shift  36
            xx_break_statement shift  37
         xx_continue_statement shift  38
            xx_while_statement shift  39
              xx_for_statement shift  40

State 264:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_return_statement ::= * RETURN xx_literal_expr DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_comment ::= * COMMENT

                 BRACKET_CLOSE shift  265
                       COMMENT shift  220
                  TYPE_INTEGER shift  199
                   TYPE_DOUBLE shift  208
                     TYPE_BOOL shift  214
                   TYPE_STRING shift  211
                         BREAK shift  42
                      CONTINUE shift  44
                            IF shift  46
                          LOOP shift  55
                         WHILE shift  59
                           FOR shift  64
                           LET shift  71
                          ECHO shift  159
                        RETURN shift  167
                         UNSET shift  175
                         THROW shift  190
                      TYPE_VAR shift  217
                    xx_comment shift  41
                  xx_statement shift  28
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_unset_statement shift  34
            xx_throw_statement shift  35
          xx_declare_statement shift  36
            xx_break_statement shift  37
         xx_continue_statement shift  38
            xx_while_statement shift  39
              xx_for_statement shift  40

State 265:
     (95) xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 95

State 266:
     (92) xx_while_statement ::= WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 92

State 267:
     (90) xx_loop_statement ::= LOOP BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 90

State 268:
     (88) xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 88

State 269:
     (84) xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE *
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE * ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE * ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                          ELSE shift  270
                     {default} reduce 84

State 270:
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE * BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE * BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  271

State 271:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN * BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_return_statement ::= * RETURN xx_literal_expr DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_comment ::= * COMMENT

                 BRACKET_CLOSE shift  274
                       COMMENT shift  220
                  TYPE_INTEGER shift  199
                   TYPE_DOUBLE shift  208
                     TYPE_BOOL shift  214
                   TYPE_STRING shift  211
                         BREAK shift  42
                      CONTINUE shift  44
                            IF shift  46
                          LOOP shift  55
                         WHILE shift  59
                           FOR shift  64
                           LET shift  71
                          ECHO shift  159
                        RETURN shift  167
                         UNSET shift  175
                         THROW shift  190
                      TYPE_VAR shift  217
                    xx_comment shift  41
             xx_statement_list shift  272
                  xx_statement shift  221
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_unset_statement shift  34
            xx_throw_statement shift  35
          xx_declare_statement shift  36
            xx_break_statement shift  37
         xx_continue_statement shift  38
            xx_while_statement shift  39
              xx_for_statement shift  40

State 272:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_return_statement ::= * RETURN xx_literal_expr DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_comment ::= * COMMENT

                 BRACKET_CLOSE shift  273
                       COMMENT shift  220
                  TYPE_INTEGER shift  199
                   TYPE_DOUBLE shift  208
                     TYPE_BOOL shift  214
                   TYPE_STRING shift  211
                         BREAK shift  42
                      CONTINUE shift  44
                            IF shift  46
                          LOOP shift  55
                         WHILE shift  59
                           FOR shift  64
                           LET shift  71
                          ECHO shift  159
                        RETURN shift  167
                         UNSET shift  175
                         THROW shift  190
                      TYPE_VAR shift  217
                    xx_comment shift  41
                  xx_statement shift  28
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_unset_statement shift  34
            xx_throw_statement shift  35
          xx_declare_statement shift  36
            xx_break_statement shift  37
         xx_continue_statement shift  38
            xx_while_statement shift  39
              xx_for_statement shift  40

State 273:
     (89) xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 89

State 274:
     (85) xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 85

State 275:
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_parameter_list ::= xx_parameter_list * COMMA xx_parameter

                         COMMA shift  279
                  BRACKET_OPEN shift  276

State 276:
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_return_statement ::= * RETURN xx_literal_expr DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_comment ::= * COMMENT

                       COMMENT shift  220
                  TYPE_INTEGER shift  199
                   TYPE_DOUBLE shift  208
                     TYPE_BOOL shift  214
                   TYPE_STRING shift  211
                         BREAK shift  42
                      CONTINUE shift  44
                            IF shift  46
                          LOOP shift  55
                         WHILE shift  59
                           FOR shift  64
                           LET shift  71
                          ECHO shift  159
                        RETURN shift  167
                         UNSET shift  175
                         THROW shift  190
                      TYPE_VAR shift  217
                    xx_comment shift  41
             xx_statement_list shift  277
                  xx_statement shift  221
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_unset_statement shift  34
            xx_throw_statement shift  35
          xx_declare_statement shift  36
            xx_break_statement shift  37
         xx_continue_statement shift  38
            xx_while_statement shift  39
              xx_for_statement shift  40

State 277:
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_return_statement ::= * RETURN xx_literal_expr DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_comment ::= * COMMENT

                 BRACKET_CLOSE shift  278
                       COMMENT shift  220
                  TYPE_INTEGER shift  199
                   TYPE_DOUBLE shift  208
                     TYPE_BOOL shift  214
                   TYPE_STRING shift  211
                         BREAK shift  42
                      CONTINUE shift  44
                            IF shift  46
                          LOOP shift  55
                         WHILE shift  59
                           FOR shift  64
                           LET shift  71
                          ECHO shift  159
                        RETURN shift  167
                         UNSET shift  175
                         THROW shift  190
                      TYPE_VAR shift  217
                    xx_comment shift  41
                  xx_statement shift  28
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_unset_statement shift  34
            xx_throw_statement shift  35
          xx_declare_statement shift  36
            xx_break_statement shift  37
         xx_continue_statement shift  38
            xx_while_statement shift  39
              xx_for_statement shift  40

State 278:
     (46) xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 46

State 279:
          xx_parameter_list ::= xx_parameter_list COMMA * xx_parameter
          xx_parameter ::= * IDENTIFIER
          xx_parameter ::= * xx_parameter_type IDENTIFIER
          xx_parameter ::= * xx_parameter_cast IDENTIFIER
          xx_parameter ::= * IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_type IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_cast IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY

                          LESS shift  292
                    IDENTIFIER shift  281
                  TYPE_INTEGER shift  295
                   TYPE_DOUBLE shift  296
                     TYPE_BOOL shift  297
                   TYPE_STRING shift  298
                    TYPE_ARRAY shift  299
                  xx_parameter shift  280
             xx_parameter_type shift  284
             xx_parameter_cast shift  288

State 280:
     (53) xx_parameter_list ::= xx_parameter_list COMMA xx_parameter *

                     {default} reduce 53

State 281:
     (55) xx_parameter ::= IDENTIFIER *
          xx_parameter ::= IDENTIFIER * ASSIGN xx_literal_expr

                        ASSIGN shift  282
                     {default} reduce 55

State 282:
          xx_parameter ::= IDENTIFIER ASSIGN * xx_literal_expr
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
               xx_literal_expr shift  283

State 283:
     (58) xx_parameter ::= IDENTIFIER ASSIGN xx_literal_expr *

                     {default} reduce 58

State 284:
          xx_parameter ::= xx_parameter_type * IDENTIFIER
          xx_parameter ::= xx_parameter_type * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  285

State 285:
     (56) xx_parameter ::= xx_parameter_type IDENTIFIER *
          xx_parameter ::= xx_parameter_type IDENTIFIER * ASSIGN xx_literal_expr

                        ASSIGN shift  286
                     {default} reduce 56

State 286:
          xx_parameter ::= xx_parameter_type IDENTIFIER ASSIGN * xx_literal_expr
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
               xx_literal_expr shift  287

State 287:
     (59) xx_parameter ::= xx_parameter_type IDENTIFIER ASSIGN xx_literal_expr *

                     {default} reduce 59

State 288:
          xx_parameter ::= xx_parameter_cast * IDENTIFIER
          xx_parameter ::= xx_parameter_cast * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  289

State 289:
     (57) xx_parameter ::= xx_parameter_cast IDENTIFIER *
          xx_parameter ::= xx_parameter_cast IDENTIFIER * ASSIGN xx_literal_expr

                        ASSIGN shift  290
                     {default} reduce 57

State 290:
          xx_parameter ::= xx_parameter_cast IDENTIFIER ASSIGN * xx_literal_expr
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
               xx_literal_expr shift  291

State 291:
     (60) xx_parameter ::= xx_parameter_cast IDENTIFIER ASSIGN xx_literal_expr *

                     {default} reduce 60

State 292:
          xx_parameter_cast ::= LESS * IDENTIFIER GREATER

                    IDENTIFIER shift  293

State 293:
          xx_parameter_cast ::= LESS IDENTIFIER * GREATER

                       GREATER shift  294

State 294:
     (61) xx_parameter_cast ::= LESS IDENTIFIER GREATER *

                    IDENTIFIER reduce 61

State 295:
     (62) xx_parameter_type ::= TYPE_INTEGER *

                    IDENTIFIER reduce 62

State 296:
     (63) xx_parameter_type ::= TYPE_DOUBLE *

                    IDENTIFIER reduce 63

State 297:
     (64) xx_parameter_type ::= TYPE_BOOL *

                    IDENTIFIER reduce 64

State 298:
     (65) xx_parameter_type ::= TYPE_STRING *

                    IDENTIFIER reduce 65

State 299:
     (66) xx_parameter_type ::= TYPE_ARRAY *

                    IDENTIFIER reduce 66

State 300:
     (54) xx_parameter_list ::= xx_parameter *

                     {default} reduce 54

State 301:
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_parameter_list ::= xx_parameter_list * COMMA xx_parameter

                         COMMA shift  279
             PARENTHESES_CLOSE shift  302

State 302:
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * BRACKET_OPEN BRACKET_CLOSE

                  BRACKET_OPEN shift  303

State 303:
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN * BRACKET_CLOSE

                 BRACKET_CLOSE shift  304

State 304:
     (42) xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 42

State 305:
          xx_class_method_definition ::= COMMENT * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                        PUBLIC shift  306
                     PROTECTED shift  321

State 306:
          xx_class_method_definition ::= COMMENT PUBLIC * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                      FUNCTION shift  307

State 307:
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                    IDENTIFIER shift  308

State 308:
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

              PARENTHESES_OPEN shift  309

State 309:
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_parameter_list ::= * xx_parameter_list COMMA xx_parameter
          xx_parameter_list ::= * xx_parameter
          xx_parameter ::= * IDENTIFIER
          xx_parameter ::= * xx_parameter_type IDENTIFIER
          xx_parameter ::= * xx_parameter_cast IDENTIFIER
          xx_parameter ::= * IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_type IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_cast IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY

                          LESS shift  292
                    IDENTIFIER shift  281
             PARENTHESES_CLOSE shift  310
                  TYPE_INTEGER shift  295
                   TYPE_DOUBLE shift  296
                     TYPE_BOOL shift  297
                   TYPE_STRING shift  298
                    TYPE_ARRAY shift  299
             xx_parameter_list shift  315
                  xx_parameter shift  300
             xx_parameter_type shift  284
             xx_parameter_cast shift  288

State 310:
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  311

State 311:
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN * BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_return_statement ::= * RETURN xx_literal_expr DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_comment ::= * COMMENT

                 BRACKET_CLOSE shift  312
                       COMMENT shift  220
                  TYPE_INTEGER shift  199
                   TYPE_DOUBLE shift  208
                     TYPE_BOOL shift  214
                   TYPE_STRING shift  211
                         BREAK shift  42
                      CONTINUE shift  44
                            IF shift  46
                          LOOP shift  55
                         WHILE shift  59
                           FOR shift  64
                           LET shift  71
                          ECHO shift  159
                        RETURN shift  167
                         UNSET shift  175
                         THROW shift  190
                      TYPE_VAR shift  217
                    xx_comment shift  41
             xx_statement_list shift  313
                  xx_statement shift  221
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_unset_statement shift  34
            xx_throw_statement shift  35
          xx_declare_statement shift  36
            xx_break_statement shift  37
         xx_continue_statement shift  38
            xx_while_statement shift  39
              xx_for_statement shift  40

State 312:
     (43) xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 43

State 313:
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_return_statement ::= * RETURN xx_literal_expr DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_comment ::= * COMMENT

                 BRACKET_CLOSE shift  314
                       COMMENT shift  220
                  TYPE_INTEGER shift  199
                   TYPE_DOUBLE shift  208
                     TYPE_BOOL shift  214
                   TYPE_STRING shift  211
                         BREAK shift  42
                      CONTINUE shift  44
                            IF shift  46
                          LOOP shift  55
                         WHILE shift  59
                           FOR shift  64
                           LET shift  71
                          ECHO shift  159
                        RETURN shift  167
                         UNSET shift  175
                         THROW shift  190
                      TYPE_VAR shift  217
                    xx_comment shift  41
                  xx_statement shift  28
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_unset_statement shift  34
            xx_throw_statement shift  35
          xx_declare_statement shift  36
            xx_break_statement shift  37
         xx_continue_statement shift  38
            xx_while_statement shift  39
              xx_for_statement shift  40

State 314:
     (47) xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 47

State 315:
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_parameter_list ::= xx_parameter_list * COMMA xx_parameter

                         COMMA shift  279
             PARENTHESES_CLOSE shift  316

State 316:
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  317

State 317:
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN * BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_return_statement ::= * RETURN xx_literal_expr DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_comment ::= * COMMENT

                 BRACKET_CLOSE shift  318
                       COMMENT shift  220
                  TYPE_INTEGER shift  199
                   TYPE_DOUBLE shift  208
                     TYPE_BOOL shift  214
                   TYPE_STRING shift  211
                         BREAK shift  42
                      CONTINUE shift  44
                            IF shift  46
                          LOOP shift  55
                         WHILE shift  59
                           FOR shift  64
                           LET shift  71
                          ECHO shift  159
                        RETURN shift  167
                         UNSET shift  175
                         THROW shift  190
                      TYPE_VAR shift  217
                    xx_comment shift  41
             xx_statement_list shift  319
                  xx_statement shift  221
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_unset_statement shift  34
            xx_throw_statement shift  35
          xx_declare_statement shift  36
            xx_break_statement shift  37
         xx_continue_statement shift  38
            xx_while_statement shift  39
              xx_for_statement shift  40

State 318:
     (44) xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 44

State 319:
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_return_statement ::= * RETURN xx_literal_expr DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_comment ::= * COMMENT

                 BRACKET_CLOSE shift  320
                       COMMENT shift  220
                  TYPE_INTEGER shift  199
                   TYPE_DOUBLE shift  208
                     TYPE_BOOL shift  214
                   TYPE_STRING shift  211
                         BREAK shift  42
                      CONTINUE shift  44
                            IF shift  46
                          LOOP shift  55
                         WHILE shift  59
                           FOR shift  64
                           LET shift  71
                          ECHO shift  159
                        RETURN shift  167
                         UNSET shift  175
                         THROW shift  190
                      TYPE_VAR shift  217
                    xx_comment shift  41
                  xx_statement shift  28
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_unset_statement shift  34
            xx_throw_statement shift  35
          xx_declare_statement shift  36
            xx_break_statement shift  37
         xx_continue_statement shift  38
            xx_while_statement shift  39
              xx_for_statement shift  40

State 320:
     (48) xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 48

State 321:
          xx_class_method_definition ::= COMMENT PROTECTED * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PROTECTED * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                      FUNCTION shift  322

State 322:
          xx_class_method_definition ::= COMMENT PROTECTED FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PROTECTED FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                    IDENTIFIER shift  323

State 323:
          xx_class_method_definition ::= COMMENT PROTECTED FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PROTECTED FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

              PARENTHESES_OPEN shift  324

State 324:
          xx_class_method_definition ::= COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

             PARENTHESES_CLOSE shift  325

State 325:
          xx_class_method_definition ::= COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  326

State 326:
          xx_class_method_definition ::= COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN * BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_return_statement ::= * RETURN xx_literal_expr DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_comment ::= * COMMENT

                 BRACKET_CLOSE shift  327
                       COMMENT shift  220
                  TYPE_INTEGER shift  199
                   TYPE_DOUBLE shift  208
                     TYPE_BOOL shift  214
                   TYPE_STRING shift  211
                         BREAK shift  42
                      CONTINUE shift  44
                            IF shift  46
                          LOOP shift  55
                         WHILE shift  59
                           FOR shift  64
                           LET shift  71
                          ECHO shift  159
                        RETURN shift  167
                         UNSET shift  175
                         THROW shift  190
                      TYPE_VAR shift  217
                    xx_comment shift  41
             xx_statement_list shift  328
                  xx_statement shift  221
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_unset_statement shift  34
            xx_throw_statement shift  35
          xx_declare_statement shift  36
            xx_break_statement shift  37
         xx_continue_statement shift  38
            xx_while_statement shift  39
              xx_for_statement shift  40

State 327:
     (50) xx_class_method_definition ::= COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 50

State 328:
          xx_class_method_definition ::= COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_return_statement ::= * RETURN xx_literal_expr DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_comment ::= * COMMENT

                 BRACKET_CLOSE shift  329
                       COMMENT shift  220
                  TYPE_INTEGER shift  199
                   TYPE_DOUBLE shift  208
                     TYPE_BOOL shift  214
                   TYPE_STRING shift  211
                         BREAK shift  42
                      CONTINUE shift  44
                            IF shift  46
                          LOOP shift  55
                         WHILE shift  59
                           FOR shift  64
                           LET shift  71
                          ECHO shift  159
                        RETURN shift  167
                         UNSET shift  175
                         THROW shift  190
                      TYPE_VAR shift  217
                    xx_comment shift  41
                  xx_statement shift  28
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_unset_statement shift  34
            xx_throw_statement shift  35
          xx_declare_statement shift  36
            xx_break_statement shift  37
         xx_continue_statement shift  38
            xx_while_statement shift  39
              xx_for_statement shift  40

State 329:
     (52) xx_class_method_definition ::= COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 52

State 330:
          xx_class_method_definition ::= PROTECTED * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= PROTECTED * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                      FUNCTION shift  331

State 331:
          xx_class_method_definition ::= PROTECTED FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= PROTECTED FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                    IDENTIFIER shift  332

State 332:
          xx_class_method_definition ::= PROTECTED FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= PROTECTED FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

              PARENTHESES_OPEN shift  333

State 333:
          xx_class_method_definition ::= PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

             PARENTHESES_CLOSE shift  334

State 334:
          xx_class_method_definition ::= PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  335

State 335:
          xx_class_method_definition ::= PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN * BRACKET_CLOSE
          xx_class_method_definition ::= PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_return_statement ::= * RETURN xx_literal_expr DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_comment ::= * COMMENT

                 BRACKET_CLOSE shift  336
                       COMMENT shift  220
                  TYPE_INTEGER shift  199
                   TYPE_DOUBLE shift  208
                     TYPE_BOOL shift  214
                   TYPE_STRING shift  211
                         BREAK shift  42
                      CONTINUE shift  44
                            IF shift  46
                          LOOP shift  55
                         WHILE shift  59
                           FOR shift  64
                           LET shift  71
                          ECHO shift  159
                        RETURN shift  167
                         UNSET shift  175
                         THROW shift  190
                      TYPE_VAR shift  217
                    xx_comment shift  41
             xx_statement_list shift  337
                  xx_statement shift  221
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_unset_statement shift  34
            xx_throw_statement shift  35
          xx_declare_statement shift  36
            xx_break_statement shift  37
         xx_continue_statement shift  38
            xx_while_statement shift  39
              xx_for_statement shift  40

State 336:
     (49) xx_class_method_definition ::= PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 49

State 337:
          xx_class_method_definition ::= PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_return_statement ::= * RETURN xx_literal_expr DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_comment ::= * COMMENT

                 BRACKET_CLOSE shift  338
                       COMMENT shift  220
                  TYPE_INTEGER shift  199
                   TYPE_DOUBLE shift  208
                     TYPE_BOOL shift  214
                   TYPE_STRING shift  211
                         BREAK shift  42
                      CONTINUE shift  44
                            IF shift  46
                          LOOP shift  55
                         WHILE shift  59
                           FOR shift  64
                           LET shift  71
                          ECHO shift  159
                        RETURN shift  167
                         UNSET shift  175
                         THROW shift  190
                      TYPE_VAR shift  217
                    xx_comment shift  41
                  xx_statement shift  28
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_unset_statement shift  34
            xx_throw_statement shift  35
          xx_declare_statement shift  36
            xx_break_statement shift  37
         xx_continue_statement shift  38
            xx_while_statement shift  39
              xx_for_statement shift  40

State 338:
     (51) xx_class_method_definition ::= PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 51

State 339:
     (20) xx_class_definition ::= xx_class_properties_definition xx_class_consts_definition *
          xx_class_definition ::= xx_class_properties_definition xx_class_consts_definition * xx_class_methods_definition
          xx_class_consts_definition ::= xx_class_consts_definition * xx_class_const_definition
          xx_class_methods_definition ::= * xx_class_methods_definition xx_class_method_definition
          xx_class_const_definition ::= * COMMENT CONST IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_const_definition ::= * CONST IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_methods_definition ::= * xx_class_method_definition
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                 BRACKET_CLOSE reduce 20
                       COMMENT shift  342
                        PUBLIC shift  19
                     PROTECTED shift  330
                         CONST shift  348
   xx_class_methods_definition shift  340
     xx_class_const_definition shift  341
    xx_class_method_definition shift  353

State 340:
     (23) xx_class_definition ::= xx_class_properties_definition xx_class_consts_definition xx_class_methods_definition *
          xx_class_methods_definition ::= xx_class_methods_definition * xx_class_method_definition
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                 BRACKET_CLOSE reduce 23
                       COMMENT shift  305
                        PUBLIC shift  19
                     PROTECTED shift  330
    xx_class_method_definition shift  18

State 341:
     (35) xx_class_consts_definition ::= xx_class_consts_definition xx_class_const_definition *

                     {default} reduce 35

State 342:
          xx_class_const_definition ::= COMMENT * CONST IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= COMMENT * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                        PUBLIC shift  306
                     PROTECTED shift  321
                         CONST shift  343

State 343:
          xx_class_const_definition ::= COMMENT CONST * IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA

                    IDENTIFIER shift  344

State 344:
          xx_class_const_definition ::= COMMENT CONST IDENTIFIER * ASSIGN xx_literal_expr DOTCOMMA

                        ASSIGN shift  345

State 345:
          xx_class_const_definition ::= COMMENT CONST IDENTIFIER ASSIGN * xx_literal_expr DOTCOMMA
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
               xx_literal_expr shift  346

State 346:
          xx_class_const_definition ::= COMMENT CONST IDENTIFIER ASSIGN xx_literal_expr * DOTCOMMA

                      DOTCOMMA shift  347

State 347:
     (38) xx_class_const_definition ::= COMMENT CONST IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA *

                     {default} reduce 38

State 348:
          xx_class_const_definition ::= CONST * IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA

                    IDENTIFIER shift  349

State 349:
          xx_class_const_definition ::= CONST IDENTIFIER * ASSIGN xx_literal_expr DOTCOMMA

                        ASSIGN shift  350

State 350:
          xx_class_const_definition ::= CONST IDENTIFIER ASSIGN * xx_literal_expr DOTCOMMA
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
               xx_literal_expr shift  351

State 351:
          xx_class_const_definition ::= CONST IDENTIFIER ASSIGN xx_literal_expr * DOTCOMMA

                      DOTCOMMA shift  352

State 352:
     (39) xx_class_const_definition ::= CONST IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA *

                     {default} reduce 39

State 353:
     (40) xx_class_methods_definition ::= xx_class_method_definition *

                     {default} reduce 40

State 354:
     (25) xx_class_properties_definition ::= xx_class_properties_definition xx_class_property_definition *

                     {default} reduce 25

State 355:
          xx_class_property_definition ::= COMMENT * PUBLIC IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= COMMENT * PUBLIC IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= COMMENT * PROTECTED IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= COMMENT * PROTECTED IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_const_definition ::= COMMENT * CONST IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= COMMENT * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                        PUBLIC shift  356
                     PROTECTED shift  362
                         CONST shift  343

State 356:
          xx_class_property_definition ::= COMMENT PUBLIC * IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= COMMENT PUBLIC * IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= COMMENT PUBLIC * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                    IDENTIFIER shift  357
                      FUNCTION shift  307

State 357:
          xx_class_property_definition ::= COMMENT PUBLIC IDENTIFIER * DOTCOMMA
          xx_class_property_definition ::= COMMENT PUBLIC IDENTIFIER * ASSIGN xx_literal_expr DOTCOMMA

                      DOTCOMMA shift  358
                        ASSIGN shift  359

State 358:
     (27) xx_class_property_definition ::= COMMENT PUBLIC IDENTIFIER DOTCOMMA *

                     {default} reduce 27

State 359:
          xx_class_property_definition ::= COMMENT PUBLIC IDENTIFIER ASSIGN * xx_literal_expr DOTCOMMA
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
               xx_literal_expr shift  360

State 360:
          xx_class_property_definition ::= COMMENT PUBLIC IDENTIFIER ASSIGN xx_literal_expr * DOTCOMMA

                      DOTCOMMA shift  361

State 361:
     (30) xx_class_property_definition ::= COMMENT PUBLIC IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA *

                     {default} reduce 30

State 362:
          xx_class_property_definition ::= COMMENT PROTECTED * IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= COMMENT PROTECTED * IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= COMMENT PROTECTED * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PROTECTED * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                    IDENTIFIER shift  363
                      FUNCTION shift  322

State 363:
          xx_class_property_definition ::= COMMENT PROTECTED IDENTIFIER * DOTCOMMA
          xx_class_property_definition ::= COMMENT PROTECTED IDENTIFIER * ASSIGN xx_literal_expr DOTCOMMA

                      DOTCOMMA shift  364
                        ASSIGN shift  365

State 364:
     (32) xx_class_property_definition ::= COMMENT PROTECTED IDENTIFIER DOTCOMMA *

                     {default} reduce 32

State 365:
          xx_class_property_definition ::= COMMENT PROTECTED IDENTIFIER ASSIGN * xx_literal_expr DOTCOMMA
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
               xx_literal_expr shift  366

State 366:
          xx_class_property_definition ::= COMMENT PROTECTED IDENTIFIER ASSIGN xx_literal_expr * DOTCOMMA

                      DOTCOMMA shift  367

State 367:
     (34) xx_class_property_definition ::= COMMENT PROTECTED IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA *

                     {default} reduce 34

State 368:
          xx_class_property_definition ::= PUBLIC * IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= PUBLIC * IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= PUBLIC * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                    IDENTIFIER shift  369
                      FUNCTION shift  20

State 369:
          xx_class_property_definition ::= PUBLIC IDENTIFIER * DOTCOMMA
          xx_class_property_definition ::= PUBLIC IDENTIFIER * ASSIGN xx_literal_expr DOTCOMMA

                      DOTCOMMA shift  370
                        ASSIGN shift  371

State 370:
     (28) xx_class_property_definition ::= PUBLIC IDENTIFIER DOTCOMMA *

                     {default} reduce 28

State 371:
          xx_class_property_definition ::= PUBLIC IDENTIFIER ASSIGN * xx_literal_expr DOTCOMMA
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
               xx_literal_expr shift  372

State 372:
          xx_class_property_definition ::= PUBLIC IDENTIFIER ASSIGN xx_literal_expr * DOTCOMMA

                      DOTCOMMA shift  373

State 373:
     (29) xx_class_property_definition ::= PUBLIC IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA *

                     {default} reduce 29

State 374:
          xx_class_property_definition ::= PROTECTED * IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= PROTECTED * IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= PROTECTED * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= PROTECTED * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                    IDENTIFIER shift  375
                      FUNCTION shift  331

State 375:
          xx_class_property_definition ::= PROTECTED IDENTIFIER * DOTCOMMA
          xx_class_property_definition ::= PROTECTED IDENTIFIER * ASSIGN xx_literal_expr DOTCOMMA

                      DOTCOMMA shift  376
                        ASSIGN shift  377

State 376:
     (31) xx_class_property_definition ::= PROTECTED IDENTIFIER DOTCOMMA *

                     {default} reduce 31

State 377:
          xx_class_property_definition ::= PROTECTED IDENTIFIER ASSIGN * xx_literal_expr DOTCOMMA
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
               xx_literal_expr shift  378

State 378:
          xx_class_property_definition ::= PROTECTED IDENTIFIER ASSIGN xx_literal_expr * DOTCOMMA

                      DOTCOMMA shift  379

State 379:
     (33) xx_class_property_definition ::= PROTECTED IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA *

                     {default} reduce 33

State 380:
     (36) xx_class_consts_definition ::= xx_class_const_definition *

                     {default} reduce 36

State 381:
     (17) xx_class_definition ::= xx_class_consts_definition *
          xx_class_definition ::= xx_class_consts_definition * xx_class_properties_definition
          xx_class_definition ::= xx_class_consts_definition * xx_class_methods_definition
          xx_class_definition ::= xx_class_consts_definition * xx_class_properties_definition xx_class_methods_definition
          xx_class_properties_definition ::= * xx_class_properties_definition xx_class_property_definition
          xx_class_properties_definition ::= * xx_class_property_definition
          xx_class_property_definition ::= * COMMENT PUBLIC IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PUBLIC IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PUBLIC IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * COMMENT PUBLIC IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * PROTECTED IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * COMMENT PROTECTED IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PROTECTED IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * COMMENT PROTECTED IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_consts_definition ::= xx_class_consts_definition * xx_class_const_definition
          xx_class_methods_definition ::= * xx_class_methods_definition xx_class_method_definition
          xx_class_const_definition ::= * COMMENT CONST IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_const_definition ::= * CONST IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_methods_definition ::= * xx_class_method_definition
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                 BRACKET_CLOSE reduce 17
                       COMMENT shift  355
                        PUBLIC shift  368
                     PROTECTED shift  374
                         CONST shift  348
xx_class_properties_definition shift  382
   xx_class_methods_definition shift  385
  xx_class_property_definition shift  386
     xx_class_const_definition shift  341
    xx_class_method_definition shift  353

State 382:
     (21) xx_class_definition ::= xx_class_consts_definition xx_class_properties_definition *
          xx_class_definition ::= xx_class_consts_definition xx_class_properties_definition * xx_class_methods_definition
          xx_class_properties_definition ::= xx_class_properties_definition * xx_class_property_definition
          xx_class_property_definition ::= * COMMENT PUBLIC IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PUBLIC IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PUBLIC IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * COMMENT PUBLIC IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * PROTECTED IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * COMMENT PROTECTED IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PROTECTED IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * COMMENT PROTECTED IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_methods_definition ::= * xx_class_methods_definition xx_class_method_definition
          xx_class_methods_definition ::= * xx_class_method_definition
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                 BRACKET_CLOSE reduce 21
                       COMMENT shift  384
                        PUBLIC shift  368
                     PROTECTED shift  374
   xx_class_methods_definition shift  383
  xx_class_property_definition shift  354
    xx_class_method_definition shift  353

State 383:
     (24) xx_class_definition ::= xx_class_consts_definition xx_class_properties_definition xx_class_methods_definition *
          xx_class_methods_definition ::= xx_class_methods_definition * xx_class_method_definition
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                 BRACKET_CLOSE reduce 24
                       COMMENT shift  305
                        PUBLIC shift  19
                     PROTECTED shift  330
    xx_class_method_definition shift  18

State 384:
          xx_class_property_definition ::= COMMENT * PUBLIC IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= COMMENT * PUBLIC IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= COMMENT * PROTECTED IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= COMMENT * PROTECTED IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= COMMENT * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                        PUBLIC shift  356
                     PROTECTED shift  362

State 385:
     (22) xx_class_definition ::= xx_class_consts_definition xx_class_methods_definition *
          xx_class_methods_definition ::= xx_class_methods_definition * xx_class_method_definition
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                 BRACKET_CLOSE reduce 22
                       COMMENT shift  305
                        PUBLIC shift  19
                     PROTECTED shift  330
    xx_class_method_definition shift  18

State 386:
     (26) xx_class_properties_definition ::= xx_class_property_definition *

                     {default} reduce 26

State 387:
     (18) xx_class_definition ::= xx_class_methods_definition *
          xx_class_methods_definition ::= xx_class_methods_definition * xx_class_method_definition
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                 BRACKET_CLOSE reduce 18
                       COMMENT shift  305
                        PUBLIC shift  19
                     PROTECTED shift  330
    xx_class_method_definition shift  18

State 388:
          xx_class_def ::= CLASS IDENTIFIER EXTENDS * IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= CLASS IDENTIFIER EXTENDS * IDENTIFIER BRACKET_OPEN BRACKET_CLOSE

                    IDENTIFIER shift  389

State 389:
          xx_class_def ::= CLASS IDENTIFIER EXTENDS IDENTIFIER * BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= CLASS IDENTIFIER EXTENDS IDENTIFIER * BRACKET_OPEN BRACKET_CLOSE

                  BRACKET_OPEN shift  390

State 390:
          xx_class_def ::= CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN * xx_class_definition BRACKET_CLOSE
          xx_class_def ::= CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN * BRACKET_CLOSE
          xx_class_definition ::= * xx_class_properties_definition
          xx_class_definition ::= * xx_class_consts_definition
          xx_class_definition ::= * xx_class_methods_definition
          xx_class_definition ::= * xx_class_properties_definition xx_class_methods_definition
          xx_class_definition ::= * xx_class_properties_definition xx_class_consts_definition
          xx_class_definition ::= * xx_class_consts_definition xx_class_properties_definition
          xx_class_definition ::= * xx_class_consts_definition xx_class_methods_definition
          xx_class_definition ::= * xx_class_properties_definition xx_class_consts_definition xx_class_methods_definition
          xx_class_definition ::= * xx_class_consts_definition xx_class_properties_definition xx_class_methods_definition
          xx_class_properties_definition ::= * xx_class_properties_definition xx_class_property_definition
          xx_class_properties_definition ::= * xx_class_property_definition
          xx_class_property_definition ::= * COMMENT PUBLIC IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PUBLIC IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PUBLIC IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * COMMENT PUBLIC IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * PROTECTED IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * COMMENT PROTECTED IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PROTECTED IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * COMMENT PROTECTED IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_consts_definition ::= * xx_class_consts_definition xx_class_const_definition
          xx_class_consts_definition ::= * xx_class_const_definition
          xx_class_methods_definition ::= * xx_class_methods_definition xx_class_method_definition
          xx_class_const_definition ::= * COMMENT CONST IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_const_definition ::= * CONST IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_methods_definition ::= * xx_class_method_definition
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                 BRACKET_CLOSE shift  393
                       COMMENT shift  355
                        PUBLIC shift  368
                     PROTECTED shift  374
                         CONST shift  348
           xx_class_definition shift  391
xx_class_properties_definition shift  16
    xx_class_consts_definition shift  381
   xx_class_methods_definition shift  387
  xx_class_property_definition shift  386
     xx_class_const_definition shift  380
    xx_class_method_definition shift  353

State 391:
          xx_class_def ::= CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN xx_class_definition * BRACKET_CLOSE

                 BRACKET_CLOSE shift  392

State 392:
      (9) xx_class_def ::= CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE *

                     {default} reduce 9

State 393:
     (13) xx_class_def ::= CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 13

State 394:
          xx_class_def ::= ABSTRACT * CLASS IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= ABSTRACT * CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= ABSTRACT * CLASS IDENTIFIER BRACKET_OPEN BRACKET_CLOSE
          xx_class_def ::= ABSTRACT * CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN BRACKET_CLOSE

                         CLASS shift  395

State 395:
          xx_class_def ::= ABSTRACT CLASS * IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= ABSTRACT CLASS * IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= ABSTRACT CLASS * IDENTIFIER BRACKET_OPEN BRACKET_CLOSE
          xx_class_def ::= ABSTRACT CLASS * IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN BRACKET_CLOSE

                    IDENTIFIER shift  396

State 396:
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER * BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER * EXTENDS IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER * BRACKET_OPEN BRACKET_CLOSE
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER * EXTENDS IDENTIFIER BRACKET_OPEN BRACKET_CLOSE

                  BRACKET_OPEN shift  397
                       EXTENDS shift  401

State 397:
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER BRACKET_OPEN * xx_class_definition BRACKET_CLOSE
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER BRACKET_OPEN * BRACKET_CLOSE
          xx_class_definition ::= * xx_class_properties_definition
          xx_class_definition ::= * xx_class_consts_definition
          xx_class_definition ::= * xx_class_methods_definition
          xx_class_definition ::= * xx_class_properties_definition xx_class_methods_definition
          xx_class_definition ::= * xx_class_properties_definition xx_class_consts_definition
          xx_class_definition ::= * xx_class_consts_definition xx_class_properties_definition
          xx_class_definition ::= * xx_class_consts_definition xx_class_methods_definition
          xx_class_definition ::= * xx_class_properties_definition xx_class_consts_definition xx_class_methods_definition
          xx_class_definition ::= * xx_class_consts_definition xx_class_properties_definition xx_class_methods_definition
          xx_class_properties_definition ::= * xx_class_properties_definition xx_class_property_definition
          xx_class_properties_definition ::= * xx_class_property_definition
          xx_class_property_definition ::= * COMMENT PUBLIC IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PUBLIC IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PUBLIC IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * COMMENT PUBLIC IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * PROTECTED IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * COMMENT PROTECTED IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PROTECTED IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * COMMENT PROTECTED IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_consts_definition ::= * xx_class_consts_definition xx_class_const_definition
          xx_class_consts_definition ::= * xx_class_const_definition
          xx_class_methods_definition ::= * xx_class_methods_definition xx_class_method_definition
          xx_class_const_definition ::= * COMMENT CONST IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_const_definition ::= * CONST IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_methods_definition ::= * xx_class_method_definition
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                 BRACKET_CLOSE shift  400
                       COMMENT shift  355
                        PUBLIC shift  368
                     PROTECTED shift  374
                         CONST shift  348
           xx_class_definition shift  398
xx_class_properties_definition shift  16
    xx_class_consts_definition shift  381
   xx_class_methods_definition shift  387
  xx_class_property_definition shift  386
     xx_class_const_definition shift  380
    xx_class_method_definition shift  353

State 398:
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER BRACKET_OPEN xx_class_definition * BRACKET_CLOSE

                 BRACKET_CLOSE shift  399

State 399:
     (10) xx_class_def ::= ABSTRACT CLASS IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE *

                     {default} reduce 10

State 400:
     (14) xx_class_def ::= ABSTRACT CLASS IDENTIFIER BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 14

State 401:
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER EXTENDS * IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER EXTENDS * IDENTIFIER BRACKET_OPEN BRACKET_CLOSE

                    IDENTIFIER shift  402

State 402:
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER EXTENDS IDENTIFIER * BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER EXTENDS IDENTIFIER * BRACKET_OPEN BRACKET_CLOSE

                  BRACKET_OPEN shift  403

State 403:
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN * xx_class_definition BRACKET_CLOSE
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN * BRACKET_CLOSE
          xx_class_definition ::= * xx_class_properties_definition
          xx_class_definition ::= * xx_class_consts_definition
          xx_class_definition ::= * xx_class_methods_definition
          xx_class_definition ::= * xx_class_properties_definition xx_class_methods_definition
          xx_class_definition ::= * xx_class_properties_definition xx_class_consts_definition
          xx_class_definition ::= * xx_class_consts_definition xx_class_properties_definition
          xx_class_definition ::= * xx_class_consts_definition xx_class_methods_definition
          xx_class_definition ::= * xx_class_properties_definition xx_class_consts_definition xx_class_methods_definition
          xx_class_definition ::= * xx_class_consts_definition xx_class_properties_definition xx_class_methods_definition
          xx_class_properties_definition ::= * xx_class_properties_definition xx_class_property_definition
          xx_class_properties_definition ::= * xx_class_property_definition
          xx_class_property_definition ::= * COMMENT PUBLIC IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PUBLIC IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PUBLIC IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * COMMENT PUBLIC IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * PROTECTED IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * COMMENT PROTECTED IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PROTECTED IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * COMMENT PROTECTED IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_consts_definition ::= * xx_class_consts_definition xx_class_const_definition
          xx_class_consts_definition ::= * xx_class_const_definition
          xx_class_methods_definition ::= * xx_class_methods_definition xx_class_method_definition
          xx_class_const_definition ::= * COMMENT CONST IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_const_definition ::= * CONST IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_methods_definition ::= * xx_class_method_definition
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                 BRACKET_CLOSE shift  406
                       COMMENT shift  355
                        PUBLIC shift  368
                     PROTECTED shift  374
                         CONST shift  348
           xx_class_definition shift  404
xx_class_properties_definition shift  16
    xx_class_consts_definition shift  381
   xx_class_methods_definition shift  387
  xx_class_property_definition shift  386
     xx_class_const_definition shift  380
    xx_class_method_definition shift  353

State 404:
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN xx_class_definition * BRACKET_CLOSE

                 BRACKET_CLOSE shift  405

State 405:
     (11) xx_class_def ::= ABSTRACT CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE *

                     {default} reduce 11

State 406:
     (15) xx_class_def ::= ABSTRACT CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 15

State 407:
      (3) xx_top_statement_list ::= xx_top_statement *

                     {default} reduce 3

