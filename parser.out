 State 0:
          program ::= * xx_language
          xx_language ::= * xx_top_statement_list
          xx_top_statement_list ::= * xx_top_statement_list xx_top_statement
          xx_top_statement_list ::= * xx_top_statement
          xx_top_statement ::= * xx_namespace_def
          xx_top_statement ::= * xx_class_def
          xx_top_statement ::= * xx_comment
          xx_namespace_def ::= * NAMESPACE IDENTIFIER DOTCOMMA
          xx_class_def ::= * CLASS IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= * CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= * ABSTRACT CLASS IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= * ABSTRACT CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= * CLASS IDENTIFIER BRACKET_OPEN BRACKET_CLOSE
          xx_class_def ::= * CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN BRACKET_CLOSE
          xx_class_def ::= * ABSTRACT CLASS IDENTIFIER BRACKET_OPEN BRACKET_CLOSE
          xx_class_def ::= * ABSTRACT CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN BRACKET_CLOSE
          xx_comment ::= * COMMENT

                     NAMESPACE shift  7
                         CLASS shift  10
                      ABSTRACT shift  440
                       COMMENT shift  285
                       program accept
                   xx_language shift  1
         xx_top_statement_list shift  2
              xx_top_statement shift  453
              xx_namespace_def shift  4
                  xx_class_def shift  5
                    xx_comment shift  6

State 1:
      (0) program ::= xx_language *

                             $ reduce 0

State 2:
      (1) xx_language ::= xx_top_statement_list *
          xx_top_statement_list ::= xx_top_statement_list * xx_top_statement
          xx_top_statement ::= * xx_namespace_def
          xx_top_statement ::= * xx_class_def
          xx_top_statement ::= * xx_comment
          xx_namespace_def ::= * NAMESPACE IDENTIFIER DOTCOMMA
          xx_class_def ::= * CLASS IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= * CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= * ABSTRACT CLASS IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= * ABSTRACT CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= * CLASS IDENTIFIER BRACKET_OPEN BRACKET_CLOSE
          xx_class_def ::= * CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN BRACKET_CLOSE
          xx_class_def ::= * ABSTRACT CLASS IDENTIFIER BRACKET_OPEN BRACKET_CLOSE
          xx_class_def ::= * ABSTRACT CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN BRACKET_CLOSE
          xx_comment ::= * COMMENT

                             $ reduce 1
                     NAMESPACE shift  7
                         CLASS shift  10
                      ABSTRACT shift  440
                       COMMENT shift  285
              xx_top_statement shift  3
              xx_namespace_def shift  4
                  xx_class_def shift  5
                    xx_comment shift  6

State 3:
      (2) xx_top_statement_list ::= xx_top_statement_list xx_top_statement *

                     {default} reduce 2

State 4:
      (4) xx_top_statement ::= xx_namespace_def *

                     {default} reduce 4

State 5:
      (5) xx_top_statement ::= xx_class_def *

                     {default} reduce 5

State 6:
      (6) xx_top_statement ::= xx_comment *

                     {default} reduce 6

State 7:
          xx_namespace_def ::= NAMESPACE * IDENTIFIER DOTCOMMA

                    IDENTIFIER shift  8

State 8:
          xx_namespace_def ::= NAMESPACE IDENTIFIER * DOTCOMMA

                      DOTCOMMA shift  9

State 9:
      (7) xx_namespace_def ::= NAMESPACE IDENTIFIER DOTCOMMA *

                     {default} reduce 7

State 10:
          xx_class_def ::= CLASS * IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= CLASS * IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= CLASS * IDENTIFIER BRACKET_OPEN BRACKET_CLOSE
          xx_class_def ::= CLASS * IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN BRACKET_CLOSE

                    IDENTIFIER shift  11

State 11:
          xx_class_def ::= CLASS IDENTIFIER * BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= CLASS IDENTIFIER * EXTENDS IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= CLASS IDENTIFIER * BRACKET_OPEN BRACKET_CLOSE
          xx_class_def ::= CLASS IDENTIFIER * EXTENDS IDENTIFIER BRACKET_OPEN BRACKET_CLOSE

                  BRACKET_OPEN shift  12
                       EXTENDS shift  434

State 12:
          xx_class_def ::= CLASS IDENTIFIER BRACKET_OPEN * xx_class_definition BRACKET_CLOSE
          xx_class_def ::= CLASS IDENTIFIER BRACKET_OPEN * BRACKET_CLOSE
          xx_class_definition ::= * xx_class_properties_definition
          xx_class_definition ::= * xx_class_consts_definition
          xx_class_definition ::= * xx_class_methods_definition
          xx_class_definition ::= * xx_class_properties_definition xx_class_methods_definition
          xx_class_definition ::= * xx_class_properties_definition xx_class_consts_definition
          xx_class_definition ::= * xx_class_consts_definition xx_class_properties_definition
          xx_class_definition ::= * xx_class_consts_definition xx_class_methods_definition
          xx_class_definition ::= * xx_class_properties_definition xx_class_consts_definition xx_class_methods_definition
          xx_class_definition ::= * xx_class_consts_definition xx_class_properties_definition xx_class_methods_definition
          xx_class_properties_definition ::= * xx_class_properties_definition xx_class_property_definition
          xx_class_properties_definition ::= * xx_class_property_definition
          xx_class_property_definition ::= * COMMENT PUBLIC IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PUBLIC IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PUBLIC IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * COMMENT PUBLIC IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * PROTECTED IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * COMMENT PROTECTED IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PROTECTED IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * COMMENT PROTECTED IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_consts_definition ::= * xx_class_consts_definition xx_class_const_definition
          xx_class_consts_definition ::= * xx_class_const_definition
          xx_class_methods_definition ::= * xx_class_methods_definition xx_class_method_definition
          xx_class_methods_definition ::= * xx_class_method_definition
          xx_class_const_definition ::= * COMMENT CONST IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_const_definition ::= * CONST IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                 BRACKET_CLOSE shift  15
                       COMMENT shift  401
                        PUBLIC shift  414
                     PROTECTED shift  420
                         CONST shift  395
           xx_class_definition shift  13
xx_class_properties_definition shift  16
    xx_class_consts_definition shift  427
   xx_class_methods_definition shift  433
  xx_class_property_definition shift  432
     xx_class_const_definition shift  426
    xx_class_method_definition shift  388

State 13:
          xx_class_def ::= CLASS IDENTIFIER BRACKET_OPEN xx_class_definition * BRACKET_CLOSE

                 BRACKET_CLOSE shift  14

State 14:
      (8) xx_class_def ::= CLASS IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE *

                     {default} reduce 8

State 15:
     (12) xx_class_def ::= CLASS IDENTIFIER BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 12

State 16:
     (16) xx_class_definition ::= xx_class_properties_definition *
          xx_class_definition ::= xx_class_properties_definition * xx_class_methods_definition
          xx_class_definition ::= xx_class_properties_definition * xx_class_consts_definition
          xx_class_definition ::= xx_class_properties_definition * xx_class_consts_definition xx_class_methods_definition
          xx_class_properties_definition ::= xx_class_properties_definition * xx_class_property_definition
          xx_class_property_definition ::= * COMMENT PUBLIC IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PUBLIC IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PUBLIC IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * COMMENT PUBLIC IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * PROTECTED IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * COMMENT PROTECTED IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PROTECTED IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * COMMENT PROTECTED IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_consts_definition ::= * xx_class_consts_definition xx_class_const_definition
          xx_class_consts_definition ::= * xx_class_const_definition
          xx_class_methods_definition ::= * xx_class_methods_definition xx_class_method_definition
          xx_class_methods_definition ::= * xx_class_method_definition
          xx_class_const_definition ::= * COMMENT CONST IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_const_definition ::= * CONST IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                 BRACKET_CLOSE reduce 16
                       COMMENT shift  401
                        PUBLIC shift  414
                     PROTECTED shift  420
                         CONST shift  395
    xx_class_consts_definition shift  385
   xx_class_methods_definition shift  17
  xx_class_property_definition shift  400
     xx_class_const_definition shift  426
    xx_class_method_definition shift  388

State 17:
     (19) xx_class_definition ::= xx_class_properties_definition xx_class_methods_definition *
          xx_class_methods_definition ::= xx_class_methods_definition * xx_class_method_definition
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                 BRACKET_CLOSE reduce 19
                       COMMENT shift  351
                        PUBLIC shift  19
                     PROTECTED shift  376
    xx_class_method_definition shift  18

State 18:
     (37) xx_class_methods_definition ::= xx_class_methods_definition xx_class_method_definition *

                     {default} reduce 37

State 19:
          xx_class_method_definition ::= PUBLIC * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                      FUNCTION shift  20

State 20:
          xx_class_method_definition ::= PUBLIC FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                    IDENTIFIER shift  21

State 21:
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

              PARENTHESES_OPEN shift  22

State 22:
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_parameter_list ::= * xx_parameter_list COMMA xx_parameter
          xx_parameter_list ::= * xx_parameter
          xx_parameter ::= * IDENTIFIER
          xx_parameter ::= * xx_parameter_type IDENTIFIER
          xx_parameter ::= * xx_parameter_cast IDENTIFIER
          xx_parameter ::= * IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_type IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_cast IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  335
                    IDENTIFIER shift  324
             PARENTHESES_CLOSE shift  23
                  TYPE_INTEGER shift  338
                   TYPE_DOUBLE shift  339
                     TYPE_BOOL shift  340
                   TYPE_STRING shift  341
                    TYPE_ARRAY shift  342
                      TYPE_VAR shift  343
             xx_parameter_list shift  345
                  xx_parameter shift  344
             xx_parameter_type shift  327
             xx_parameter_cast shift  331

State 23:
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_parameter_list ::= * xx_parameter_list COMMA xx_parameter
          xx_parameter_list ::= * xx_parameter
          xx_parameter ::= * IDENTIFIER
          xx_parameter ::= * xx_parameter_type IDENTIFIER
          xx_parameter ::= * xx_parameter_cast IDENTIFIER
          xx_parameter ::= * IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_type IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_cast IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  335
                    IDENTIFIER shift  324
                  BRACKET_OPEN shift  24
                  TYPE_INTEGER shift  338
                   TYPE_DOUBLE shift  339
                     TYPE_BOOL shift  340
                   TYPE_STRING shift  341
                    TYPE_ARRAY shift  342
                      TYPE_VAR shift  343
             xx_parameter_list shift  318
                  xx_parameter shift  344
             xx_parameter_type shift  327
             xx_parameter_cast shift  331

State 24:
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN * BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  282
                 BRACKET_CLOSE shift  25
                       COMMENT shift  285
                  TYPE_INTEGER shift  261
                   TYPE_DOUBLE shift  270
                     TYPE_BOOL shift  276
                   TYPE_STRING shift  273
                      TYPE_VAR shift  279
                         BREAK shift  44
                      CONTINUE shift  46
                            IF shift  48
                        SWITCH shift  57
                          LOOP shift  68
                         WHILE shift  72
                           FOR shift  77
                           LET shift  84
                          ECHO shift  225
                        RETURN shift  234
                         UNSET shift  237
                         THROW shift  252
                    xx_comment shift  43
             xx_statement_list shift  26
                  xx_statement shift  286
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_mcall_statement shift  34
            xx_unset_statement shift  35
            xx_throw_statement shift  36
          xx_declare_statement shift  37
            xx_break_statement shift  38
         xx_continue_statement shift  39
            xx_while_statement shift  40
           xx_switch_statement shift  41
              xx_for_statement shift  42
                 xx_mcall_expr shift  232

State 25:
     (41) xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 41

State 26:
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  282
                 BRACKET_CLOSE shift  27
                       COMMENT shift  285
                  TYPE_INTEGER shift  261
                   TYPE_DOUBLE shift  270
                     TYPE_BOOL shift  276
                   TYPE_STRING shift  273
                      TYPE_VAR shift  279
                         BREAK shift  44
                      CONTINUE shift  46
                            IF shift  48
                        SWITCH shift  57
                          LOOP shift  68
                         WHILE shift  72
                           FOR shift  77
                           LET shift  84
                          ECHO shift  225
                        RETURN shift  234
                         UNSET shift  237
                         THROW shift  252
                    xx_comment shift  43
                  xx_statement shift  28
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_mcall_statement shift  34
            xx_unset_statement shift  35
            xx_throw_statement shift  36
          xx_declare_statement shift  37
            xx_break_statement shift  38
         xx_continue_statement shift  39
            xx_while_statement shift  40
           xx_switch_statement shift  41
              xx_for_statement shift  42
                 xx_mcall_expr shift  232

State 27:
     (45) xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 45

State 28:
     (69) xx_statement_list ::= xx_statement_list xx_statement *

                     {default} reduce 69

State 29:
     (71) xx_statement ::= xx_let_statement *

                     {default} reduce 71

State 30:
     (72) xx_statement ::= xx_if_statement *

                     {default} reduce 72

State 31:
     (73) xx_statement ::= xx_loop_statement *

                     {default} reduce 73

State 32:
     (74) xx_statement ::= xx_echo_statement *

                     {default} reduce 74

State 33:
     (75) xx_statement ::= xx_return_statement *

                     {default} reduce 75

State 34:
     (76) xx_statement ::= xx_mcall_statement *

                     {default} reduce 76

State 35:
     (77) xx_statement ::= xx_unset_statement *

                     {default} reduce 77

State 36:
     (78) xx_statement ::= xx_throw_statement *

                     {default} reduce 78

State 37:
     (79) xx_statement ::= xx_declare_statement *

                     {default} reduce 79

State 38:
     (80) xx_statement ::= xx_break_statement *

                     {default} reduce 80

State 39:
     (81) xx_statement ::= xx_continue_statement *

                     {default} reduce 81

State 40:
     (82) xx_statement ::= xx_while_statement *

                     {default} reduce 82

State 41:
     (83) xx_statement ::= xx_switch_statement *

                     {default} reduce 83

State 42:
     (84) xx_statement ::= xx_for_statement *

                     {default} reduce 84

State 43:
     (85) xx_statement ::= xx_comment *

                     {default} reduce 85

State 44:
          xx_break_statement ::= BREAK * DOTCOMMA

                      DOTCOMMA shift  45

State 45:
     (86) xx_break_statement ::= BREAK DOTCOMMA *

                     {default} reduce 86

State 46:
          xx_continue_statement ::= CONTINUE * DOTCOMMA

                      DOTCOMMA shift  47

State 47:
     (87) xx_continue_statement ::= CONTINUE DOTCOMMA *

                     {default} reduce 87

State 48:
          xx_if_statement ::= IF * xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF * xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF * xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF * xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF * xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF * xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_eval_expr ::= * xx_common_expr

                         ISSET shift  103
                         FETCH shift  142
                        TYPEOF shift  146
                    INSTANCEOF shift  140
                           NEW shift  176
                           NOT shift  100
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  132
                 SBRACKET_OPEN shift  154
                       INTEGER shift  148
                        STRING shift  149
                        DOUBLE shift  150
                          NULL shift  151
                          TRUE shift  152
                         FALSE shift  153
                  xx_eval_expr shift  49
                xx_common_expr shift  305
                 xx_mcall_expr shift  183

State 49:
          xx_if_statement ::= IF xx_eval_expr * BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr * BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr * BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  50

State 50:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN * BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN * BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN * BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  282
                 BRACKET_CLOSE shift  312
                       COMMENT shift  285
                  TYPE_INTEGER shift  261
                   TYPE_DOUBLE shift  270
                     TYPE_BOOL shift  276
                   TYPE_STRING shift  273
                      TYPE_VAR shift  279
                         BREAK shift  44
                      CONTINUE shift  46
                            IF shift  48
                        SWITCH shift  57
                          LOOP shift  68
                         WHILE shift  72
                           FOR shift  77
                           LET shift  84
                          ECHO shift  225
                        RETURN shift  234
                         UNSET shift  237
                         THROW shift  252
                    xx_comment shift  43
             xx_statement_list shift  51
                  xx_statement shift  286
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_mcall_statement shift  34
            xx_unset_statement shift  35
            xx_throw_statement shift  36
          xx_declare_statement shift  37
            xx_break_statement shift  38
         xx_continue_statement shift  39
            xx_while_statement shift  40
           xx_switch_statement shift  41
              xx_for_statement shift  42
                 xx_mcall_expr shift  232

State 51:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  282
                 BRACKET_CLOSE shift  52
                       COMMENT shift  285
                  TYPE_INTEGER shift  261
                   TYPE_DOUBLE shift  270
                     TYPE_BOOL shift  276
                   TYPE_STRING shift  273
                      TYPE_VAR shift  279
                         BREAK shift  44
                      CONTINUE shift  46
                            IF shift  48
                        SWITCH shift  57
                          LOOP shift  68
                         WHILE shift  72
                           FOR shift  77
                           LET shift  84
                          ECHO shift  225
                        RETURN shift  234
                         UNSET shift  237
                         THROW shift  252
                    xx_comment shift  43
                  xx_statement shift  28
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_mcall_statement shift  34
            xx_unset_statement shift  35
            xx_throw_statement shift  36
          xx_declare_statement shift  37
            xx_break_statement shift  38
         xx_continue_statement shift  39
            xx_while_statement shift  40
           xx_switch_statement shift  41
              xx_for_statement shift  42
                 xx_mcall_expr shift  232

State 52:
     (90) xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE *
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE * ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE * ELSE BRACKET_OPEN BRACKET_CLOSE

                          ELSE shift  53
                     {default} reduce 90

State 53:
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE * BRACKET_OPEN BRACKET_CLOSE

                  BRACKET_OPEN shift  54

State 54:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN * BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  282
                 BRACKET_CLOSE shift  311
                       COMMENT shift  285
                  TYPE_INTEGER shift  261
                   TYPE_DOUBLE shift  270
                     TYPE_BOOL shift  276
                   TYPE_STRING shift  273
                      TYPE_VAR shift  279
                         BREAK shift  44
                      CONTINUE shift  46
                            IF shift  48
                        SWITCH shift  57
                          LOOP shift  68
                         WHILE shift  72
                           FOR shift  77
                           LET shift  84
                          ECHO shift  225
                        RETURN shift  234
                         UNSET shift  237
                         THROW shift  252
                    xx_comment shift  43
             xx_statement_list shift  55
                  xx_statement shift  286
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_mcall_statement shift  34
            xx_unset_statement shift  35
            xx_throw_statement shift  36
          xx_declare_statement shift  37
            xx_break_statement shift  38
         xx_continue_statement shift  39
            xx_while_statement shift  40
           xx_switch_statement shift  41
              xx_for_statement shift  42
                 xx_mcall_expr shift  232

State 55:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  282
                 BRACKET_CLOSE shift  56
                       COMMENT shift  285
                  TYPE_INTEGER shift  261
                   TYPE_DOUBLE shift  270
                     TYPE_BOOL shift  276
                   TYPE_STRING shift  273
                      TYPE_VAR shift  279
                         BREAK shift  44
                      CONTINUE shift  46
                            IF shift  48
                        SWITCH shift  57
                          LOOP shift  68
                         WHILE shift  72
                           FOR shift  77
                           LET shift  84
                          ECHO shift  225
                        RETURN shift  234
                         UNSET shift  237
                         THROW shift  252
                    xx_comment shift  43
                  xx_statement shift  28
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_mcall_statement shift  34
            xx_unset_statement shift  35
            xx_throw_statement shift  36
          xx_declare_statement shift  37
            xx_break_statement shift  38
         xx_continue_statement shift  39
            xx_while_statement shift  40
           xx_switch_statement shift  41
              xx_for_statement shift  42
                 xx_mcall_expr shift  232

State 56:
     (91) xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 91

State 57:
          xx_switch_statement ::= SWITCH * xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= SWITCH * xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_eval_expr ::= * xx_common_expr

                         ISSET shift  103
                         FETCH shift  142
                        TYPEOF shift  146
                    INSTANCEOF shift  140
                           NEW shift  176
                           NOT shift  100
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  132
                 SBRACKET_OPEN shift  154
                       INTEGER shift  148
                        STRING shift  149
                        DOUBLE shift  150
                          NULL shift  151
                          TRUE shift  152
                         FALSE shift  153
                  xx_eval_expr shift  58
                xx_common_expr shift  305
                 xx_mcall_expr shift  183

State 58:
          xx_switch_statement ::= SWITCH xx_eval_expr * BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= SWITCH xx_eval_expr * BRACKET_OPEN xx_case_clauses BRACKET_CLOSE

                  BRACKET_OPEN shift  59

State 59:
          xx_switch_statement ::= SWITCH xx_eval_expr BRACKET_OPEN * BRACKET_CLOSE
          xx_switch_statement ::= SWITCH xx_eval_expr BRACKET_OPEN * xx_case_clauses BRACKET_CLOSE
          xx_case_clauses ::= * xx_case_clauses xx_case_clause
          xx_case_clauses ::= * xx_case_clause
          xx_case_clause ::= * CASE xx_literal_expr COLON xx_statement_list
          xx_case_clause ::= * DEFAULT COLON xx_statement_list

                 BRACKET_CLOSE shift  60
                          CASE shift  64
                       DEFAULT shift  307
               xx_case_clauses shift  61
                xx_case_clause shift  310

State 60:
     (94) xx_switch_statement ::= SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 94

State 61:
          xx_switch_statement ::= SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses * BRACKET_CLOSE
          xx_case_clauses ::= xx_case_clauses * xx_case_clause
          xx_case_clause ::= * CASE xx_literal_expr COLON xx_statement_list
          xx_case_clause ::= * DEFAULT COLON xx_statement_list

                 BRACKET_CLOSE shift  62
                          CASE shift  64
                       DEFAULT shift  307
                xx_case_clause shift  63

State 62:
     (95) xx_switch_statement ::= SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE *

                     {default} reduce 95

State 63:
     (96) xx_case_clauses ::= xx_case_clauses xx_case_clause *

                     {default} reduce 96

State 64:
          xx_case_clause ::= CASE * xx_literal_expr COLON xx_statement_list
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                       INTEGER shift  165
                        STRING shift  166
                        DOUBLE shift  167
                          NULL shift  168
                          TRUE shift  170
                         FALSE shift  169
               xx_literal_expr shift  65

State 65:
          xx_case_clause ::= CASE xx_literal_expr * COLON xx_statement_list

                         COLON shift  66

State 66:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_case_clause ::= CASE xx_literal_expr COLON * xx_statement_list
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  282
                       COMMENT shift  285
                  TYPE_INTEGER shift  261
                   TYPE_DOUBLE shift  270
                     TYPE_BOOL shift  276
                   TYPE_STRING shift  273
                      TYPE_VAR shift  279
                         BREAK shift  44
                      CONTINUE shift  46
                            IF shift  48
                        SWITCH shift  57
                          LOOP shift  68
                         WHILE shift  72
                           FOR shift  77
                           LET shift  84
                          ECHO shift  225
                        RETURN shift  234
                         UNSET shift  237
                         THROW shift  252
                    xx_comment shift  43
             xx_statement_list shift  67
                  xx_statement shift  286
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_mcall_statement shift  34
            xx_unset_statement shift  35
            xx_throw_statement shift  36
          xx_declare_statement shift  37
            xx_break_statement shift  38
         xx_continue_statement shift  39
            xx_while_statement shift  40
           xx_switch_statement shift  41
              xx_for_statement shift  42
                 xx_mcall_expr shift  232

State 67:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
     (98) xx_case_clause ::= CASE xx_literal_expr COLON xx_statement_list *
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  282
                       COMMENT shift  285
                  TYPE_INTEGER shift  261
                   TYPE_DOUBLE shift  270
                     TYPE_BOOL shift  276
                   TYPE_STRING shift  273
                      TYPE_VAR shift  279
                         BREAK shift  44
                      CONTINUE shift  46
                            IF shift  48
                        SWITCH shift  57
                          LOOP shift  68
                         WHILE shift  72
                           FOR shift  77
                           LET shift  84
                          ECHO shift  225
                        RETURN shift  234
                         UNSET shift  237
                         THROW shift  252
                    xx_comment shift  43
                  xx_statement shift  28
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_mcall_statement shift  34
            xx_unset_statement shift  35
            xx_throw_statement shift  36
          xx_declare_statement shift  37
            xx_break_statement shift  38
         xx_continue_statement shift  39
            xx_while_statement shift  40
           xx_switch_statement shift  41
              xx_for_statement shift  42
                 xx_mcall_expr shift  232
                     {default} reduce 98

State 68:
          xx_loop_statement ::= LOOP * BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= LOOP * BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  69

State 69:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= LOOP BRACKET_OPEN * BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= LOOP BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  282
                 BRACKET_CLOSE shift  306
                       COMMENT shift  285
                  TYPE_INTEGER shift  261
                   TYPE_DOUBLE shift  270
                     TYPE_BOOL shift  276
                   TYPE_STRING shift  273
                      TYPE_VAR shift  279
                         BREAK shift  44
                      CONTINUE shift  46
                            IF shift  48
                        SWITCH shift  57
                          LOOP shift  68
                         WHILE shift  72
                           FOR shift  77
                           LET shift  84
                          ECHO shift  225
                        RETURN shift  234
                         UNSET shift  237
                         THROW shift  252
                    xx_comment shift  43
             xx_statement_list shift  70
                  xx_statement shift  286
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_mcall_statement shift  34
            xx_unset_statement shift  35
            xx_throw_statement shift  36
          xx_declare_statement shift  37
            xx_break_statement shift  38
         xx_continue_statement shift  39
            xx_while_statement shift  40
           xx_switch_statement shift  41
              xx_for_statement shift  42
                 xx_mcall_expr shift  232

State 70:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= LOOP BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  282
                 BRACKET_CLOSE shift  71
                       COMMENT shift  285
                  TYPE_INTEGER shift  261
                   TYPE_DOUBLE shift  270
                     TYPE_BOOL shift  276
                   TYPE_STRING shift  273
                      TYPE_VAR shift  279
                         BREAK shift  44
                      CONTINUE shift  46
                            IF shift  48
                        SWITCH shift  57
                          LOOP shift  68
                         WHILE shift  72
                           FOR shift  77
                           LET shift  84
                          ECHO shift  225
                        RETURN shift  234
                         UNSET shift  237
                         THROW shift  252
                    xx_comment shift  43
                  xx_statement shift  28
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_mcall_statement shift  34
            xx_unset_statement shift  35
            xx_throw_statement shift  36
          xx_declare_statement shift  37
            xx_break_statement shift  38
         xx_continue_statement shift  39
            xx_while_statement shift  40
           xx_switch_statement shift  41
              xx_for_statement shift  42
                 xx_mcall_expr shift  232

State 71:
    (101) xx_loop_statement ::= LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 101

State 72:
          xx_while_statement ::= WHILE * xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= WHILE * xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_eval_expr ::= * xx_common_expr

                         ISSET shift  103
                         FETCH shift  142
                        TYPEOF shift  146
                    INSTANCEOF shift  140
                           NEW shift  176
                           NOT shift  100
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  132
                 SBRACKET_OPEN shift  154
                       INTEGER shift  148
                        STRING shift  149
                        DOUBLE shift  150
                          NULL shift  151
                          TRUE shift  152
                         FALSE shift  153
                  xx_eval_expr shift  73
                xx_common_expr shift  305
                 xx_mcall_expr shift  183

State 73:
          xx_while_statement ::= WHILE xx_eval_expr * BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= WHILE xx_eval_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  74

State 74:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= WHILE xx_eval_expr BRACKET_OPEN * BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= WHILE xx_eval_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  282
                 BRACKET_CLOSE shift  304
                       COMMENT shift  285
                  TYPE_INTEGER shift  261
                   TYPE_DOUBLE shift  270
                     TYPE_BOOL shift  276
                   TYPE_STRING shift  273
                      TYPE_VAR shift  279
                         BREAK shift  44
                      CONTINUE shift  46
                            IF shift  48
                        SWITCH shift  57
                          LOOP shift  68
                         WHILE shift  72
                           FOR shift  77
                           LET shift  84
                          ECHO shift  225
                        RETURN shift  234
                         UNSET shift  237
                         THROW shift  252
                    xx_comment shift  43
             xx_statement_list shift  75
                  xx_statement shift  286
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_mcall_statement shift  34
            xx_unset_statement shift  35
            xx_throw_statement shift  36
          xx_declare_statement shift  37
            xx_break_statement shift  38
         xx_continue_statement shift  39
            xx_while_statement shift  40
           xx_switch_statement shift  41
              xx_for_statement shift  42
                 xx_mcall_expr shift  232

State 75:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= WHILE xx_eval_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  282
                 BRACKET_CLOSE shift  76
                       COMMENT shift  285
                  TYPE_INTEGER shift  261
                   TYPE_DOUBLE shift  270
                     TYPE_BOOL shift  276
                   TYPE_STRING shift  273
                      TYPE_VAR shift  279
                         BREAK shift  44
                      CONTINUE shift  46
                            IF shift  48
                        SWITCH shift  57
                          LOOP shift  68
                         WHILE shift  72
                           FOR shift  77
                           LET shift  84
                          ECHO shift  225
                        RETURN shift  234
                         UNSET shift  237
                         THROW shift  252
                    xx_comment shift  43
                  xx_statement shift  28
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_mcall_statement shift  34
            xx_unset_statement shift  35
            xx_throw_statement shift  36
          xx_declare_statement shift  37
            xx_break_statement shift  38
         xx_continue_statement shift  39
            xx_while_statement shift  40
           xx_switch_statement shift  41
              xx_for_statement shift  42
                 xx_mcall_expr shift  232

State 76:
    (103) xx_while_statement ::= WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 103

State 77:
          xx_for_statement ::= FOR * IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR * IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR * IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR * IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                    IDENTIFIER shift  78

State 78:
          xx_for_statement ::= FOR IDENTIFIER * IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER * IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER * COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER * COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                         COMMA shift  292
                            IN shift  79

State 79:
          xx_for_statement ::= FOR IDENTIFIER IN * xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER IN * REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  103
                         FETCH shift  142
                        TYPEOF shift  146
                    INSTANCEOF shift  140
                           NEW shift  176
                           NOT shift  100
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  132
                       REVERSE shift  287
                 SBRACKET_OPEN shift  154
                       INTEGER shift  148
                        STRING shift  149
                        DOUBLE shift  150
                          NULL shift  151
                          TRUE shift  152
                         FALSE shift  153
                xx_common_expr shift  80
                 xx_mcall_expr shift  183

State 80:
          xx_for_statement ::= FOR IDENTIFIER IN xx_common_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr

                        EQUALS shift  99
                     IDENTICAL shift  114
                          LESS shift  118
                       GREATER shift  120
                     LESSEQUAL shift  122
                  GREATEREQUAL shift  124
                  NOTIDENTICAL shift  116
                     NOTEQUALS shift  102
                           ADD shift  126
                           SUB shift  128
                        CONCAT shift  130
                  BRACKET_OPEN shift  81

State 81:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  282
                       COMMENT shift  285
                  TYPE_INTEGER shift  261
                   TYPE_DOUBLE shift  270
                     TYPE_BOOL shift  276
                   TYPE_STRING shift  273
                      TYPE_VAR shift  279
                         BREAK shift  44
                      CONTINUE shift  46
                            IF shift  48
                        SWITCH shift  57
                          LOOP shift  68
                         WHILE shift  72
                           FOR shift  77
                           LET shift  84
                          ECHO shift  225
                        RETURN shift  234
                         UNSET shift  237
                         THROW shift  252
                    xx_comment shift  43
             xx_statement_list shift  82
                  xx_statement shift  286
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_mcall_statement shift  34
            xx_unset_statement shift  35
            xx_throw_statement shift  36
          xx_declare_statement shift  37
            xx_break_statement shift  38
         xx_continue_statement shift  39
            xx_while_statement shift  40
           xx_switch_statement shift  41
              xx_for_statement shift  42
                 xx_mcall_expr shift  232

State 82:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  282
                 BRACKET_CLOSE shift  83
                       COMMENT shift  285
                  TYPE_INTEGER shift  261
                   TYPE_DOUBLE shift  270
                     TYPE_BOOL shift  276
                   TYPE_STRING shift  273
                      TYPE_VAR shift  279
                         BREAK shift  44
                      CONTINUE shift  46
                            IF shift  48
                        SWITCH shift  57
                          LOOP shift  68
                         WHILE shift  72
                           FOR shift  77
                           LET shift  84
                          ECHO shift  225
                        RETURN shift  234
                         UNSET shift  237
                         THROW shift  252
                    xx_comment shift  43
                  xx_statement shift  28
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_mcall_statement shift  34
            xx_unset_statement shift  35
            xx_throw_statement shift  36
          xx_declare_statement shift  37
            xx_break_statement shift  38
         xx_continue_statement shift  39
            xx_while_statement shift  40
           xx_switch_statement shift  41
              xx_for_statement shift  42
                 xx_mcall_expr shift  232

State 83:
    (104) xx_for_statement ::= FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 104

State 84:
          xx_let_statement ::= LET * xx_let_assignments DOTCOMMA
          xx_let_assignments ::= * xx_let_assignments COMMA xx_let_assignment
          xx_let_assignments ::= * xx_let_assignment
          xx_let_assignment ::= * IDENTIFIER xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW IDENTIFIER xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER INCR
          xx_let_assignment ::= * IDENTIFIER DECR

                    IDENTIFIER shift  89
            xx_let_assignments shift  85
             xx_let_assignment shift  224

State 85:
          xx_let_statement ::= LET xx_let_assignments * DOTCOMMA
          xx_let_assignments ::= xx_let_assignments * COMMA xx_let_assignment

                         COMMA shift  87
                      DOTCOMMA shift  86

State 86:
    (108) xx_let_statement ::= LET xx_let_assignments DOTCOMMA *

                     {default} reduce 108

State 87:
          xx_let_assignments ::= xx_let_assignments COMMA * xx_let_assignment
          xx_let_assignment ::= * IDENTIFIER xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW IDENTIFIER xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER INCR
          xx_let_assignment ::= * IDENTIFIER DECR

                    IDENTIFIER shift  89
             xx_let_assignment shift  88

State 88:
    (109) xx_let_assignments ::= xx_let_assignments COMMA xx_let_assignment *

                     {default} reduce 109

State 89:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_let_assignment ::= IDENTIFIER * xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * ARROW IDENTIFIER xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * ARROW IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * ARROW IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * INCR
          xx_let_assignment ::= IDENTIFIER * DECR

                        ASSIGN shift  90
                     ADDASSIGN shift  91
                     SUBASSIGN shift  92
                     MULASSIGN shift  93
                     DIVASSIGN shift  94
                  CONCATASSIGN shift  95
                         ARROW shift  201
                 SBRACKET_OPEN shift  214
                          INCR shift  222
                          DECR shift  223
        xx_assignment_operator shift  96

State 90:
    (111) xx_assignment_operator ::= ASSIGN *

                     {default} reduce 111

State 91:
    (112) xx_assignment_operator ::= ADDASSIGN *

                     {default} reduce 112

State 92:
    (113) xx_assignment_operator ::= SUBASSIGN *

                     {default} reduce 113

State 93:
    (114) xx_assignment_operator ::= MULASSIGN *

                     {default} reduce 114

State 94:
    (115) xx_assignment_operator ::= DIVASSIGN *

                     {default} reduce 115

State 95:
    (116) xx_assignment_operator ::= CONCATASSIGN *

                     {default} reduce 116

State 96:
          xx_let_assignment ::= IDENTIFIER xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  103
                         FETCH shift  142
                        TYPEOF shift  146
                    INSTANCEOF shift  140
                           NEW shift  176
                           NOT shift  100
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  132
                 SBRACKET_OPEN shift  154
                       INTEGER shift  148
                        STRING shift  149
                        DOUBLE shift  150
                          NULL shift  151
                          TRUE shift  152
                         FALSE shift  153
                xx_common_expr shift  98
                xx_assign_expr shift  97
                 xx_mcall_expr shift  183

State 97:
    (117) xx_let_assignment ::= IDENTIFIER xx_assignment_operator xx_assign_expr *

                     {default} reduce 117

State 98:
    (147) xx_assign_expr ::= xx_common_expr *
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr

                        EQUALS shift  99
                     IDENTICAL shift  114
                          LESS shift  118
                       GREATER shift  120
                     LESSEQUAL shift  122
                  GREATEREQUAL shift  124
                  NOTIDENTICAL shift  116
                     NOTEQUALS shift  102
                           ADD shift  126
                           SUB shift  128
                        CONCAT shift  130
                     {default} reduce 147

State 99:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr EQUALS * xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  103
                         FETCH shift  142
                        TYPEOF shift  146
                    INSTANCEOF shift  140
                           NEW shift  176
                           NOT shift  100
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  132
                 SBRACKET_OPEN shift  154
                       INTEGER shift  148
                        STRING shift  149
                        DOUBLE shift  150
                          NULL shift  151
                          TRUE shift  152
                         FALSE shift  153
                xx_common_expr shift  200
                 xx_mcall_expr shift  183

State 100:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= NOT * xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  103
                         FETCH shift  142
                        TYPEOF shift  146
                    INSTANCEOF shift  140
                           NEW shift  176
                           NOT shift  100
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  132
                 SBRACKET_OPEN shift  154
                       INTEGER shift  148
                        STRING shift  149
                        DOUBLE shift  150
                          NULL shift  151
                          TRUE shift  152
                         FALSE shift  153
                xx_common_expr shift  101
                 xx_mcall_expr shift  183

State 101:
    (148) xx_common_expr ::= NOT xx_common_expr *
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr

                     {default} reduce 148

State 102:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr NOTEQUALS * xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  103
                         FETCH shift  142
                        TYPEOF shift  146
                    INSTANCEOF shift  140
                           NEW shift  176
                           NOT shift  100
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  132
                 SBRACKET_OPEN shift  154
                       INTEGER shift  148
                        STRING shift  149
                        DOUBLE shift  150
                          NULL shift  151
                          TRUE shift  152
                         FALSE shift  153
                xx_common_expr shift  113
                 xx_mcall_expr shift  183

State 103:
          xx_common_expr ::= ISSET * xx_isset_expr
          xx_isset_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_isset_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_isset_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE

                    IDENTIFIER shift  105
                 xx_isset_expr shift  104

State 104:
    (149) xx_common_expr ::= ISSET xx_isset_expr *

                     {default} reduce 149

State 105:
          xx_isset_expr ::= IDENTIFIER * SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_isset_expr ::= IDENTIFIER * SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_isset_expr ::= IDENTIFIER * SBRACKET_OPEN STRING SBRACKET_CLOSE

                 SBRACKET_OPEN shift  106

State 106:
          xx_isset_expr ::= IDENTIFIER SBRACKET_OPEN * IDENTIFIER SBRACKET_CLOSE
          xx_isset_expr ::= IDENTIFIER SBRACKET_OPEN * INTEGER SBRACKET_CLOSE
          xx_isset_expr ::= IDENTIFIER SBRACKET_OPEN * STRING SBRACKET_CLOSE

                    IDENTIFIER shift  107
                       INTEGER shift  109
                        STRING shift  111

State 107:
          xx_isset_expr ::= IDENTIFIER SBRACKET_OPEN IDENTIFIER * SBRACKET_CLOSE

                SBRACKET_CLOSE shift  108

State 108:
    (204) xx_isset_expr ::= IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE *

                     {default} reduce 204

State 109:
          xx_isset_expr ::= IDENTIFIER SBRACKET_OPEN INTEGER * SBRACKET_CLOSE

                SBRACKET_CLOSE shift  110

State 110:
    (205) xx_isset_expr ::= IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE *

                     {default} reduce 205

State 111:
          xx_isset_expr ::= IDENTIFIER SBRACKET_OPEN STRING * SBRACKET_CLOSE

                SBRACKET_CLOSE shift  112

State 112:
    (206) xx_isset_expr ::= IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE *

                     {default} reduce 206

State 113:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
    (151) xx_common_expr ::= xx_common_expr NOTEQUALS xx_common_expr *
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr

                           ADD shift  126
                           SUB shift  128
                        CONCAT shift  130
                     {default} reduce 151

State 114:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr IDENTICAL * xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  103
                         FETCH shift  142
                        TYPEOF shift  146
                    INSTANCEOF shift  140
                           NEW shift  176
                           NOT shift  100
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  132
                 SBRACKET_OPEN shift  154
                       INTEGER shift  148
                        STRING shift  149
                        DOUBLE shift  150
                          NULL shift  151
                          TRUE shift  152
                         FALSE shift  153
                xx_common_expr shift  115
                 xx_mcall_expr shift  183

State 115:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
    (152) xx_common_expr ::= xx_common_expr IDENTICAL xx_common_expr *
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr

                           ADD shift  126
                           SUB shift  128
                        CONCAT shift  130
                     {default} reduce 152

State 116:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr NOTIDENTICAL * xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  103
                         FETCH shift  142
                        TYPEOF shift  146
                    INSTANCEOF shift  140
                           NEW shift  176
                           NOT shift  100
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  132
                 SBRACKET_OPEN shift  154
                       INTEGER shift  148
                        STRING shift  149
                        DOUBLE shift  150
                          NULL shift  151
                          TRUE shift  152
                         FALSE shift  153
                xx_common_expr shift  117
                 xx_mcall_expr shift  183

State 117:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
    (153) xx_common_expr ::= xx_common_expr NOTIDENTICAL xx_common_expr *
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr

                           ADD shift  126
                           SUB shift  128
                        CONCAT shift  130
                     {default} reduce 153

State 118:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= xx_common_expr LESS * xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  103
                         FETCH shift  142
                        TYPEOF shift  146
                    INSTANCEOF shift  140
                           NEW shift  176
                           NOT shift  100
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  132
                 SBRACKET_OPEN shift  154
                       INTEGER shift  148
                        STRING shift  149
                        DOUBLE shift  150
                          NULL shift  151
                          TRUE shift  152
                         FALSE shift  153
                xx_common_expr shift  119
                 xx_mcall_expr shift  183

State 119:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
    (154) xx_common_expr ::= xx_common_expr LESS xx_common_expr *
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr

                           ADD shift  126
                           SUB shift  128
                        CONCAT shift  130
                     {default} reduce 154

State 120:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr GREATER * xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  103
                         FETCH shift  142
                        TYPEOF shift  146
                    INSTANCEOF shift  140
                           NEW shift  176
                           NOT shift  100
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  132
                 SBRACKET_OPEN shift  154
                       INTEGER shift  148
                        STRING shift  149
                        DOUBLE shift  150
                          NULL shift  151
                          TRUE shift  152
                         FALSE shift  153
                xx_common_expr shift  121
                 xx_mcall_expr shift  183

State 121:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
    (155) xx_common_expr ::= xx_common_expr GREATER xx_common_expr *
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr

                           ADD shift  126
                           SUB shift  128
                        CONCAT shift  130
                     {default} reduce 155

State 122:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr LESSEQUAL * xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  103
                         FETCH shift  142
                        TYPEOF shift  146
                    INSTANCEOF shift  140
                           NEW shift  176
                           NOT shift  100
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  132
                 SBRACKET_OPEN shift  154
                       INTEGER shift  148
                        STRING shift  149
                        DOUBLE shift  150
                          NULL shift  151
                          TRUE shift  152
                         FALSE shift  153
                xx_common_expr shift  123
                 xx_mcall_expr shift  183

State 123:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
    (156) xx_common_expr ::= xx_common_expr LESSEQUAL xx_common_expr *
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr

                           ADD shift  126
                           SUB shift  128
                        CONCAT shift  130
                     {default} reduce 156

State 124:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr GREATEREQUAL * xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  103
                         FETCH shift  142
                        TYPEOF shift  146
                    INSTANCEOF shift  140
                           NEW shift  176
                           NOT shift  100
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  132
                 SBRACKET_OPEN shift  154
                       INTEGER shift  148
                        STRING shift  149
                        DOUBLE shift  150
                          NULL shift  151
                          TRUE shift  152
                         FALSE shift  153
                xx_common_expr shift  125
                 xx_mcall_expr shift  183

State 125:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
    (157) xx_common_expr ::= xx_common_expr GREATEREQUAL xx_common_expr *
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr

                           ADD shift  126
                           SUB shift  128
                        CONCAT shift  130
                     {default} reduce 157

State 126:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= xx_common_expr ADD * xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  103
                         FETCH shift  142
                        TYPEOF shift  146
                    INSTANCEOF shift  140
                           NEW shift  176
                           NOT shift  100
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  132
                 SBRACKET_OPEN shift  154
                       INTEGER shift  148
                        STRING shift  149
                        DOUBLE shift  150
                          NULL shift  151
                          TRUE shift  152
                         FALSE shift  153
                xx_common_expr shift  127
                 xx_mcall_expr shift  183

State 127:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
    (163) xx_common_expr ::= xx_common_expr ADD xx_common_expr *
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr

                     {default} reduce 163

State 128:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= xx_common_expr SUB * xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  103
                         FETCH shift  142
                        TYPEOF shift  146
                    INSTANCEOF shift  140
                           NEW shift  176
                           NOT shift  100
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  132
                 SBRACKET_OPEN shift  154
                       INTEGER shift  148
                        STRING shift  149
                        DOUBLE shift  150
                          NULL shift  151
                          TRUE shift  152
                         FALSE shift  153
                xx_common_expr shift  129
                 xx_mcall_expr shift  183

State 129:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
    (164) xx_common_expr ::= xx_common_expr SUB xx_common_expr *
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr

                     {default} reduce 164

State 130:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= xx_common_expr CONCAT * xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  103
                         FETCH shift  142
                        TYPEOF shift  146
                    INSTANCEOF shift  140
                           NEW shift  176
                           NOT shift  100
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  132
                 SBRACKET_OPEN shift  154
                       INTEGER shift  148
                        STRING shift  149
                        DOUBLE shift  150
                          NULL shift  151
                          TRUE shift  152
                         FALSE shift  153
                xx_common_expr shift  131
                 xx_mcall_expr shift  183

State 131:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
    (165) xx_common_expr ::= xx_common_expr CONCAT xx_common_expr *

                     {default} reduce 165

State 132:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= PARENTHESES_OPEN * xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  103
                         FETCH shift  142
                        TYPEOF shift  146
                    INSTANCEOF shift  140
                           NEW shift  176
                           NOT shift  100
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  132
                 SBRACKET_OPEN shift  154
                       INTEGER shift  148
                        STRING shift  149
                        DOUBLE shift  150
                          NULL shift  151
                          TRUE shift  152
                         FALSE shift  153
                xx_common_expr shift  133
                 xx_mcall_expr shift  183

State 133:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= PARENTHESES_OPEN xx_common_expr * PARENTHESES_CLOSE
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr

                        EQUALS shift  99
                     IDENTICAL shift  114
                          LESS shift  118
                       GREATER shift  120
                     LESSEQUAL shift  122
                  GREATEREQUAL shift  124
                  NOTIDENTICAL shift  116
                     NOTEQUALS shift  102
                           ADD shift  126
                           SUB shift  128
                        CONCAT shift  130
             PARENTHESES_CLOSE shift  134

State 134:
    (158) xx_common_expr ::= PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE *

                     {default} reduce 158

State 135:
          xx_common_expr ::= IDENTIFIER * ARROW IDENTIFIER
          xx_common_expr ::= IDENTIFIER * SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_common_expr ::= IDENTIFIER * SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_common_expr ::= IDENTIFIER * SBRACKET_OPEN STRING SBRACKET_CLOSE
    (169) xx_common_expr ::= IDENTIFIER *
          xx_common_expr ::= IDENTIFIER * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  196
                         ARROW shift  136
                 SBRACKET_OPEN shift  189
                     {default} reduce 169

State 136:
          xx_common_expr ::= IDENTIFIER ARROW * IDENTIFIER
          xx_mcall_expr ::= IDENTIFIER ARROW * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                    IDENTIFIER shift  137

State 137:
    (159) xx_common_expr ::= IDENTIFIER ARROW IDENTIFIER *
          xx_mcall_expr ::= IDENTIFIER ARROW IDENTIFIER * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  138
                     {default} reduce 159

State 138:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN * xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE
          xx_call_parameters ::= * xx_call_parameters COMMA xx_call_parameter
          xx_call_parameters ::= * xx_call_parameter
          xx_call_parameter ::= * xx_common_expr

                         ISSET shift  103
                         FETCH shift  142
                        TYPEOF shift  146
                    INSTANCEOF shift  140
                           NEW shift  176
                           NOT shift  100
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  132
             PARENTHESES_CLOSE shift  188
                 SBRACKET_OPEN shift  154
                       INTEGER shift  148
                        STRING shift  149
                        DOUBLE shift  150
                          NULL shift  151
                          TRUE shift  152
                         FALSE shift  153
                xx_common_expr shift  139
                 xx_mcall_expr shift  183
            xx_call_parameters shift  186
             xx_call_parameter shift  185

State 139:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
    (188) xx_call_parameter ::= xx_common_expr *

                        EQUALS shift  99
                     IDENTICAL shift  114
                          LESS shift  118
                       GREATER shift  120
                     LESSEQUAL shift  122
                  GREATEREQUAL shift  124
                  NOTIDENTICAL shift  116
                     NOTEQUALS shift  102
                           ADD shift  126
                           SUB shift  128
                        CONCAT shift  130
                     {default} reduce 188

State 140:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= INSTANCEOF * xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  103
                         FETCH shift  142
                        TYPEOF shift  146
                    INSTANCEOF shift  140
                           NEW shift  176
                           NOT shift  100
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  132
                 SBRACKET_OPEN shift  154
                       INTEGER shift  148
                        STRING shift  149
                        DOUBLE shift  150
                          NULL shift  151
                          TRUE shift  152
                         FALSE shift  153
                xx_common_expr shift  141
                 xx_mcall_expr shift  183

State 141:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
    (166) xx_common_expr ::= INSTANCEOF xx_common_expr *

                     {default} reduce 166

State 142:
          xx_common_expr ::= FETCH * IDENTIFIER COMMA xx_isset_expr

                    IDENTIFIER shift  143

State 143:
          xx_common_expr ::= FETCH IDENTIFIER * COMMA xx_isset_expr

                         COMMA shift  144

State 144:
          xx_common_expr ::= FETCH IDENTIFIER COMMA * xx_isset_expr
          xx_isset_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_isset_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_isset_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE

                    IDENTIFIER shift  105
                 xx_isset_expr shift  145

State 145:
    (167) xx_common_expr ::= FETCH IDENTIFIER COMMA xx_isset_expr *

                     {default} reduce 167

State 146:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= TYPEOF * xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  103
                         FETCH shift  142
                        TYPEOF shift  146
                    INSTANCEOF shift  140
                           NEW shift  176
                           NOT shift  100
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  132
                 SBRACKET_OPEN shift  154
                       INTEGER shift  148
                        STRING shift  149
                        DOUBLE shift  150
                          NULL shift  151
                          TRUE shift  152
                         FALSE shift  153
                xx_common_expr shift  147
                 xx_mcall_expr shift  183

State 147:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
    (168) xx_common_expr ::= TYPEOF xx_common_expr *

                     {default} reduce 168

State 148:
    (170) xx_common_expr ::= INTEGER *

                     {default} reduce 170

State 149:
    (171) xx_common_expr ::= STRING *

                     {default} reduce 171

State 150:
    (172) xx_common_expr ::= DOUBLE *

                     {default} reduce 172

State 151:
    (173) xx_common_expr ::= NULL *

                     {default} reduce 173

State 152:
    (174) xx_common_expr ::= TRUE *

                     {default} reduce 174

State 153:
    (175) xx_common_expr ::= FALSE *

                     {default} reduce 175

State 154:
          xx_common_expr ::= SBRACKET_OPEN * SBRACKET_CLOSE
          xx_common_expr ::= SBRACKET_OPEN * xx_array_list SBRACKET_CLOSE
          xx_array_list ::= * xx_array_list COMMA xx_array_item
          xx_array_list ::= * xx_array_item
          xx_array_item ::= * xx_array_key COLON xx_array_value
          xx_array_item ::= * xx_array_value
          xx_array_key ::= * IDENTIFIER
          xx_array_key ::= * STRING
          xx_array_key ::= * INTEGER
          xx_array_value ::= * xx_literal_expr
          xx_array_value ::= * IDENTIFIER
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                    IDENTIFIER shift  172
                SBRACKET_CLOSE shift  155
                       INTEGER shift  174
                        STRING shift  173
                        DOUBLE shift  167
                          NULL shift  168
                          TRUE shift  170
                         FALSE shift  169
               xx_literal_expr shift  163
                 xx_array_list shift  156
                 xx_array_item shift  175
                  xx_array_key shift  160
                xx_array_value shift  171

State 155:
    (176) xx_common_expr ::= SBRACKET_OPEN SBRACKET_CLOSE *

                     {default} reduce 176

State 156:
          xx_common_expr ::= SBRACKET_OPEN xx_array_list * SBRACKET_CLOSE
          xx_array_list ::= xx_array_list * COMMA xx_array_item

                         COMMA shift  158
                SBRACKET_CLOSE shift  157

State 157:
    (177) xx_common_expr ::= SBRACKET_OPEN xx_array_list SBRACKET_CLOSE *

                     {default} reduce 177

State 158:
          xx_array_list ::= xx_array_list COMMA * xx_array_item
          xx_array_item ::= * xx_array_key COLON xx_array_value
          xx_array_item ::= * xx_array_value
          xx_array_key ::= * IDENTIFIER
          xx_array_key ::= * STRING
          xx_array_key ::= * INTEGER
          xx_array_value ::= * xx_literal_expr
          xx_array_value ::= * IDENTIFIER
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                    IDENTIFIER shift  172
                       INTEGER shift  174
                        STRING shift  173
                        DOUBLE shift  167
                          NULL shift  168
                          TRUE shift  170
                         FALSE shift  169
               xx_literal_expr shift  163
                 xx_array_item shift  159
                  xx_array_key shift  160
                xx_array_value shift  171

State 159:
    (189) xx_array_list ::= xx_array_list COMMA xx_array_item *

                     {default} reduce 189

State 160:
          xx_array_item ::= xx_array_key * COLON xx_array_value

                         COLON shift  161

State 161:
          xx_array_item ::= xx_array_key COLON * xx_array_value
          xx_array_value ::= * xx_literal_expr
          xx_array_value ::= * IDENTIFIER
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                    IDENTIFIER shift  164
                       INTEGER shift  165
                        STRING shift  166
                        DOUBLE shift  167
                          NULL shift  168
                          TRUE shift  170
                         FALSE shift  169
               xx_literal_expr shift  163
                xx_array_value shift  162

State 162:
    (191) xx_array_item ::= xx_array_key COLON xx_array_value *

                     {default} reduce 191

State 163:
    (196) xx_array_value ::= xx_literal_expr *

                     {default} reduce 196

State 164:
    (197) xx_array_value ::= IDENTIFIER *

                     {default} reduce 197

State 165:
    (198) xx_literal_expr ::= INTEGER *

                     {default} reduce 198

State 166:
    (199) xx_literal_expr ::= STRING *

                     {default} reduce 199

State 167:
    (200) xx_literal_expr ::= DOUBLE *

                     {default} reduce 200

State 168:
    (201) xx_literal_expr ::= NULL *

                     {default} reduce 201

State 169:
    (202) xx_literal_expr ::= FALSE *

                     {default} reduce 202

State 170:
    (203) xx_literal_expr ::= TRUE *

                     {default} reduce 203

State 171:
    (192) xx_array_item ::= xx_array_value *

                     {default} reduce 192

State 172:
    (193) xx_array_key ::= IDENTIFIER *
    (197) xx_array_value ::= IDENTIFIER *

                         COLON reduce 193
                     {default} reduce 197

State 173:
    (194) xx_array_key ::= STRING *
    (199) xx_literal_expr ::= STRING *

                         COLON reduce 194
                     {default} reduce 199

State 174:
    (195) xx_array_key ::= INTEGER *
    (198) xx_literal_expr ::= INTEGER *

                         COLON reduce 195
                     {default} reduce 198

State 175:
    (190) xx_array_list ::= xx_array_item *

                     {default} reduce 190

State 176:
          xx_common_expr ::= NEW * IDENTIFIER
          xx_common_expr ::= NEW * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= NEW * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE

                    IDENTIFIER shift  177

State 177:
    (178) xx_common_expr ::= NEW IDENTIFIER *
          xx_common_expr ::= NEW IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= NEW IDENTIFIER * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  178
                     {default} reduce 178

State 178:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= NEW IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= NEW IDENTIFIER PARENTHESES_OPEN * xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_call_parameters ::= * xx_call_parameters COMMA xx_call_parameter
          xx_call_parameters ::= * xx_call_parameter
          xx_call_parameter ::= * xx_common_expr

                         ISSET shift  103
                         FETCH shift  142
                        TYPEOF shift  146
                    INSTANCEOF shift  140
                           NEW shift  176
                           NOT shift  100
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  132
             PARENTHESES_CLOSE shift  179
                 SBRACKET_OPEN shift  154
                       INTEGER shift  148
                        STRING shift  149
                        DOUBLE shift  150
                          NULL shift  151
                          TRUE shift  152
                         FALSE shift  153
                xx_common_expr shift  139
                 xx_mcall_expr shift  183
            xx_call_parameters shift  180
             xx_call_parameter shift  185

State 179:
    (179) xx_common_expr ::= NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE *

                     {default} reduce 179

State 180:
          xx_common_expr ::= NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters * PARENTHESES_CLOSE
          xx_call_parameters ::= xx_call_parameters * COMMA xx_call_parameter

                         COMMA shift  182
             PARENTHESES_CLOSE shift  181

State 181:
    (180) xx_common_expr ::= NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE *

                     {default} reduce 180

State 182:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_call_parameters ::= xx_call_parameters COMMA * xx_call_parameter
          xx_call_parameter ::= * xx_common_expr

                         ISSET shift  103
                         FETCH shift  142
                        TYPEOF shift  146
                    INSTANCEOF shift  140
                           NEW shift  176
                           NOT shift  100
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  132
                 SBRACKET_OPEN shift  154
                       INTEGER shift  148
                        STRING shift  149
                        DOUBLE shift  150
                          NULL shift  151
                          TRUE shift  152
                         FALSE shift  153
                xx_common_expr shift  139
                 xx_mcall_expr shift  183
             xx_call_parameter shift  184

State 183:
    (183) xx_common_expr ::= xx_mcall_expr *

                     {default} reduce 183

State 184:
    (186) xx_call_parameters ::= xx_call_parameters COMMA xx_call_parameter *

                     {default} reduce 186

State 185:
    (187) xx_call_parameters ::= xx_call_parameter *

                     {default} reduce 187

State 186:
          xx_mcall_expr ::= IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters * PARENTHESES_CLOSE
          xx_call_parameters ::= xx_call_parameters * COMMA xx_call_parameter

                         COMMA shift  182
             PARENTHESES_CLOSE shift  187

State 187:
    (184) xx_mcall_expr ::= IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE *

                     {default} reduce 184

State 188:
    (185) xx_mcall_expr ::= IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE *

                     {default} reduce 185

State 189:
          xx_common_expr ::= IDENTIFIER SBRACKET_OPEN * IDENTIFIER SBRACKET_CLOSE
          xx_common_expr ::= IDENTIFIER SBRACKET_OPEN * INTEGER SBRACKET_CLOSE
          xx_common_expr ::= IDENTIFIER SBRACKET_OPEN * STRING SBRACKET_CLOSE

                    IDENTIFIER shift  190
                       INTEGER shift  192
                        STRING shift  194

State 190:
          xx_common_expr ::= IDENTIFIER SBRACKET_OPEN IDENTIFIER * SBRACKET_CLOSE

                SBRACKET_CLOSE shift  191

State 191:
    (160) xx_common_expr ::= IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE *

                     {default} reduce 160

State 192:
          xx_common_expr ::= IDENTIFIER SBRACKET_OPEN INTEGER * SBRACKET_CLOSE

                SBRACKET_CLOSE shift  193

State 193:
    (161) xx_common_expr ::= IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE *

                     {default} reduce 161

State 194:
          xx_common_expr ::= IDENTIFIER SBRACKET_OPEN STRING * SBRACKET_CLOSE

                SBRACKET_CLOSE shift  195

State 195:
    (162) xx_common_expr ::= IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE *

                     {default} reduce 162

State 196:
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= IDENTIFIER PARENTHESES_OPEN * xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_call_parameters ::= * xx_call_parameters COMMA xx_call_parameter
          xx_call_parameters ::= * xx_call_parameter
          xx_call_parameter ::= * xx_common_expr

                         ISSET shift  103
                         FETCH shift  142
                        TYPEOF shift  146
                    INSTANCEOF shift  140
                           NEW shift  176
                           NOT shift  100
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  132
             PARENTHESES_CLOSE shift  199
                 SBRACKET_OPEN shift  154
                       INTEGER shift  148
                        STRING shift  149
                        DOUBLE shift  150
                          NULL shift  151
                          TRUE shift  152
                         FALSE shift  153
                xx_common_expr shift  139
                 xx_mcall_expr shift  183
            xx_call_parameters shift  197
             xx_call_parameter shift  185

State 197:
          xx_common_expr ::= IDENTIFIER PARENTHESES_OPEN xx_call_parameters * PARENTHESES_CLOSE
          xx_call_parameters ::= xx_call_parameters * COMMA xx_call_parameter

                         COMMA shift  182
             PARENTHESES_CLOSE shift  198

State 198:
    (181) xx_common_expr ::= IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE *

                     {default} reduce 181

State 199:
    (182) xx_common_expr ::= IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE *

                     {default} reduce 182

State 200:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
    (150) xx_common_expr ::= xx_common_expr EQUALS xx_common_expr *
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr

                           ADD shift  126
                           SUB shift  128
                        CONCAT shift  130
                     {default} reduce 150

State 201:
          xx_let_assignment ::= IDENTIFIER ARROW * IDENTIFIER xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER ARROW * IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER ARROW * IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr

                    IDENTIFIER shift  202

State 202:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER * xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER * SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER * SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr

                        ASSIGN shift  90
                     ADDASSIGN shift  91
                     SUBASSIGN shift  92
                     MULASSIGN shift  93
                     DIVASSIGN shift  94
                  CONCATASSIGN shift  95
                 SBRACKET_OPEN shift  205
        xx_assignment_operator shift  203

State 203:
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  103
                         FETCH shift  142
                        TYPEOF shift  146
                    INSTANCEOF shift  140
                           NEW shift  176
                           NOT shift  100
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  132
                 SBRACKET_OPEN shift  154
                       INTEGER shift  148
                        STRING shift  149
                        DOUBLE shift  150
                          NULL shift  151
                          TRUE shift  152
                         FALSE shift  153
                xx_common_expr shift  98
                xx_assign_expr shift  204
                 xx_mcall_expr shift  183

State 204:
    (118) xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER xx_assignment_operator xx_assign_expr *

                     {default} reduce 118

State 205:
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN * SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN * xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_index_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  103
                         FETCH shift  142
                        TYPEOF shift  146
                    INSTANCEOF shift  140
                           NEW shift  176
                           NOT shift  100
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  132
                 SBRACKET_OPEN shift  154
                SBRACKET_CLOSE shift  206
                       INTEGER shift  148
                        STRING shift  149
                        DOUBLE shift  150
                          NULL shift  151
                          TRUE shift  152
                         FALSE shift  153
                xx_common_expr shift  213
                 xx_index_expr shift  209
                 xx_mcall_expr shift  183

State 206:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE * xx_assignment_operator xx_assign_expr

                        ASSIGN shift  90
                     ADDASSIGN shift  91
                     SUBASSIGN shift  92
                     MULASSIGN shift  93
                     DIVASSIGN shift  94
                  CONCATASSIGN shift  95
        xx_assignment_operator shift  207

State 207:
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  103
                         FETCH shift  142
                        TYPEOF shift  146
                    INSTANCEOF shift  140
                           NEW shift  176
                           NOT shift  100
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  132
                 SBRACKET_OPEN shift  154
                       INTEGER shift  148
                        STRING shift  149
                        DOUBLE shift  150
                          NULL shift  151
                          TRUE shift  152
                         FALSE shift  153
                xx_common_expr shift  98
                xx_assign_expr shift  208
                 xx_mcall_expr shift  183

State 208:
    (119) xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr *

                     {default} reduce 119

State 209:
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN xx_index_expr * SBRACKET_CLOSE xx_assignment_operator xx_assign_expr

                SBRACKET_CLOSE shift  210

State 210:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE * xx_assignment_operator xx_assign_expr

                        ASSIGN shift  90
                     ADDASSIGN shift  91
                     SUBASSIGN shift  92
                     MULASSIGN shift  93
                     DIVASSIGN shift  94
                  CONCATASSIGN shift  95
        xx_assignment_operator shift  211

State 211:
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  103
                         FETCH shift  142
                        TYPEOF shift  146
                    INSTANCEOF shift  140
                           NEW shift  176
                           NOT shift  100
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  132
                 SBRACKET_OPEN shift  154
                       INTEGER shift  148
                        STRING shift  149
                        DOUBLE shift  150
                          NULL shift  151
                          TRUE shift  152
                         FALSE shift  153
                xx_common_expr shift  98
                xx_assign_expr shift  212
                 xx_mcall_expr shift  183

State 212:
    (120) xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr *

                     {default} reduce 120

State 213:
    (125) xx_index_expr ::= xx_common_expr *
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr

                        EQUALS shift  99
                     IDENTICAL shift  114
                          LESS shift  118
                       GREATER shift  120
                     LESSEQUAL shift  122
                  GREATEREQUAL shift  124
                  NOTIDENTICAL shift  116
                     NOTEQUALS shift  102
                           ADD shift  126
                           SUB shift  128
                        CONCAT shift  130
                SBRACKET_CLOSE reduce 125

State 214:
          xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN * SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN * xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr
          xx_index_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  103
                         FETCH shift  142
                        TYPEOF shift  146
                    INSTANCEOF shift  140
                           NEW shift  176
                           NOT shift  100
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  132
                 SBRACKET_OPEN shift  154
                SBRACKET_CLOSE shift  215
                       INTEGER shift  148
                        STRING shift  149
                        DOUBLE shift  150
                          NULL shift  151
                          TRUE shift  152
                         FALSE shift  153
                xx_common_expr shift  213
                 xx_index_expr shift  218
                 xx_mcall_expr shift  183

State 215:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE * xx_assignment_operator xx_assign_expr

                        ASSIGN shift  90
                     ADDASSIGN shift  91
                     SUBASSIGN shift  92
                     MULASSIGN shift  93
                     DIVASSIGN shift  94
                  CONCATASSIGN shift  95
        xx_assignment_operator shift  216

State 216:
          xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  103
                         FETCH shift  142
                        TYPEOF shift  146
                    INSTANCEOF shift  140
                           NEW shift  176
                           NOT shift  100
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  132
                 SBRACKET_OPEN shift  154
                       INTEGER shift  148
                        STRING shift  149
                        DOUBLE shift  150
                          NULL shift  151
                          TRUE shift  152
                         FALSE shift  153
                xx_common_expr shift  98
                xx_assign_expr shift  217
                 xx_mcall_expr shift  183

State 217:
    (121) xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE xx_assignment_operator xx_assign_expr *

                     {default} reduce 121

State 218:
          xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN xx_index_expr * SBRACKET_CLOSE xx_assignment_operator xx_assign_expr

                SBRACKET_CLOSE shift  219

State 219:
          xx_assignment_operator ::= * ASSIGN
          xx_assignment_operator ::= * ADDASSIGN
          xx_assignment_operator ::= * SUBASSIGN
          xx_assignment_operator ::= * MULASSIGN
          xx_assignment_operator ::= * DIVASSIGN
          xx_assignment_operator ::= * CONCATASSIGN
          xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE * xx_assignment_operator xx_assign_expr

                        ASSIGN shift  90
                     ADDASSIGN shift  91
                     SUBASSIGN shift  92
                     MULASSIGN shift  93
                     DIVASSIGN shift  94
                  CONCATASSIGN shift  95
        xx_assignment_operator shift  220

State 220:
          xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator * xx_assign_expr
          xx_assign_expr ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  103
                         FETCH shift  142
                        TYPEOF shift  146
                    INSTANCEOF shift  140
                           NEW shift  176
                           NOT shift  100
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  132
                 SBRACKET_OPEN shift  154
                       INTEGER shift  148
                        STRING shift  149
                        DOUBLE shift  150
                          NULL shift  151
                          TRUE shift  152
                         FALSE shift  153
                xx_common_expr shift  98
                xx_assign_expr shift  221
                 xx_mcall_expr shift  183

State 221:
    (122) xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN xx_index_expr SBRACKET_CLOSE xx_assignment_operator xx_assign_expr *

                     {default} reduce 122

State 222:
    (123) xx_let_assignment ::= IDENTIFIER INCR *

                     {default} reduce 123

State 223:
    (124) xx_let_assignment ::= IDENTIFIER DECR *

                     {default} reduce 124

State 224:
    (110) xx_let_assignments ::= xx_let_assignment *

                     {default} reduce 110

State 225:
          xx_echo_statement ::= ECHO * xx_echo_expressions DOTCOMMA
          xx_echo_expressions ::= * xx_echo_expressions COMMA xx_echo_expression
          xx_echo_expressions ::= * xx_echo_expression
          xx_echo_expression ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  103
                         FETCH shift  142
                        TYPEOF shift  146
                    INSTANCEOF shift  140
                           NEW shift  176
                           NOT shift  100
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  132
                 SBRACKET_OPEN shift  154
                       INTEGER shift  148
                        STRING shift  149
                        DOUBLE shift  150
                          NULL shift  151
                          TRUE shift  152
                         FALSE shift  153
                xx_common_expr shift  230
           xx_echo_expressions shift  226
            xx_echo_expression shift  231
                 xx_mcall_expr shift  183

State 226:
          xx_echo_statement ::= ECHO xx_echo_expressions * DOTCOMMA
          xx_echo_expressions ::= xx_echo_expressions * COMMA xx_echo_expression

                         COMMA shift  228
                      DOTCOMMA shift  227

State 227:
    (126) xx_echo_statement ::= ECHO xx_echo_expressions DOTCOMMA *

                     {default} reduce 126

State 228:
          xx_echo_expressions ::= xx_echo_expressions COMMA * xx_echo_expression
          xx_echo_expression ::= * xx_common_expr
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  103
                         FETCH shift  142
                        TYPEOF shift  146
                    INSTANCEOF shift  140
                           NEW shift  176
                           NOT shift  100
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  132
                 SBRACKET_OPEN shift  154
                       INTEGER shift  148
                        STRING shift  149
                        DOUBLE shift  150
                          NULL shift  151
                          TRUE shift  152
                         FALSE shift  153
                xx_common_expr shift  230
            xx_echo_expression shift  229
                 xx_mcall_expr shift  183

State 229:
    (127) xx_echo_expressions ::= xx_echo_expressions COMMA xx_echo_expression *

                     {default} reduce 127

State 230:
    (129) xx_echo_expression ::= xx_common_expr *
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr

                        EQUALS shift  99
                     IDENTICAL shift  114
                          LESS shift  118
                       GREATER shift  120
                     LESSEQUAL shift  122
                  GREATEREQUAL shift  124
                  NOTIDENTICAL shift  116
                     NOTEQUALS shift  102
                           ADD shift  126
                           SUB shift  128
                        CONCAT shift  130
                     {default} reduce 129

State 231:
    (128) xx_echo_expressions ::= xx_echo_expression *

                     {default} reduce 128

State 232:
          xx_mcall_statement ::= xx_mcall_expr * DOTCOMMA

                      DOTCOMMA shift  233

State 233:
    (130) xx_mcall_statement ::= xx_mcall_expr DOTCOMMA *

                     {default} reduce 130

State 234:
          xx_return_statement ::= RETURN * xx_common_expr DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  103
                         FETCH shift  142
                        TYPEOF shift  146
                    INSTANCEOF shift  140
                           NEW shift  176
                           NOT shift  100
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  132
                 SBRACKET_OPEN shift  154
                       INTEGER shift  148
                        STRING shift  149
                        DOUBLE shift  150
                          NULL shift  151
                          TRUE shift  152
                         FALSE shift  153
                xx_common_expr shift  235
                 xx_mcall_expr shift  183

State 235:
          xx_return_statement ::= RETURN xx_common_expr * DOTCOMMA
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr

                        EQUALS shift  99
                     IDENTICAL shift  114
                          LESS shift  118
                       GREATER shift  120
                     LESSEQUAL shift  122
                  GREATEREQUAL shift  124
                  NOTIDENTICAL shift  116
                     NOTEQUALS shift  102
                           ADD shift  126
                           SUB shift  128
                        CONCAT shift  130
                      DOTCOMMA shift  236

State 236:
    (131) xx_return_statement ::= RETURN xx_common_expr DOTCOMMA *

                     {default} reduce 131

State 237:
          xx_unset_statement ::= UNSET * IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= UNSET * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= UNSET * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= UNSET * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA

                    IDENTIFIER shift  238

State 238:
          xx_unset_statement ::= UNSET IDENTIFIER * ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= UNSET IDENTIFIER * SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= UNSET IDENTIFIER * SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= UNSET IDENTIFIER * SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA

                         ARROW shift  239
                 SBRACKET_OPEN shift  242

State 239:
          xx_unset_statement ::= UNSET IDENTIFIER ARROW * IDENTIFIER DOTCOMMA

                    IDENTIFIER shift  240

State 240:
          xx_unset_statement ::= UNSET IDENTIFIER ARROW IDENTIFIER * DOTCOMMA

                      DOTCOMMA shift  241

State 241:
    (132) xx_unset_statement ::= UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA *

                     {default} reduce 132

State 242:
          xx_unset_statement ::= UNSET IDENTIFIER SBRACKET_OPEN * IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= UNSET IDENTIFIER SBRACKET_OPEN * INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= UNSET IDENTIFIER SBRACKET_OPEN * STRING SBRACKET_CLOSE DOTCOMMA

                    IDENTIFIER shift  243
                       INTEGER shift  246
                        STRING shift  249

State 243:
          xx_unset_statement ::= UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER * SBRACKET_CLOSE DOTCOMMA

                SBRACKET_CLOSE shift  244

State 244:
          xx_unset_statement ::= UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE * DOTCOMMA

                      DOTCOMMA shift  245

State 245:
    (133) xx_unset_statement ::= UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA *

                     {default} reduce 133

State 246:
          xx_unset_statement ::= UNSET IDENTIFIER SBRACKET_OPEN INTEGER * SBRACKET_CLOSE DOTCOMMA

                SBRACKET_CLOSE shift  247

State 247:
          xx_unset_statement ::= UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE * DOTCOMMA

                      DOTCOMMA shift  248

State 248:
    (134) xx_unset_statement ::= UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA *

                     {default} reduce 134

State 249:
          xx_unset_statement ::= UNSET IDENTIFIER SBRACKET_OPEN STRING * SBRACKET_CLOSE DOTCOMMA

                SBRACKET_CLOSE shift  250

State 250:
          xx_unset_statement ::= UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE * DOTCOMMA

                      DOTCOMMA shift  251

State 251:
    (135) xx_unset_statement ::= UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA *

                     {default} reduce 135

State 252:
          xx_throw_statement ::= THROW * IDENTIFIER DOTCOMMA
          xx_throw_statement ::= THROW * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA

                           NEW shift  255
                    IDENTIFIER shift  253

State 253:
          xx_throw_statement ::= THROW IDENTIFIER * DOTCOMMA

                      DOTCOMMA shift  254

State 254:
    (136) xx_throw_statement ::= THROW IDENTIFIER DOTCOMMA *

                     {default} reduce 136

State 255:
          xx_throw_statement ::= THROW NEW * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA

                    IDENTIFIER shift  256

State 256:
          xx_throw_statement ::= THROW NEW IDENTIFIER * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA

              PARENTHESES_OPEN shift  257

State 257:
          xx_throw_statement ::= THROW NEW IDENTIFIER PARENTHESES_OPEN * xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_call_parameters ::= * xx_call_parameters COMMA xx_call_parameter
          xx_call_parameters ::= * xx_call_parameter
          xx_call_parameter ::= * xx_common_expr

                         ISSET shift  103
                         FETCH shift  142
                        TYPEOF shift  146
                    INSTANCEOF shift  140
                           NEW shift  176
                           NOT shift  100
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  132
                 SBRACKET_OPEN shift  154
                       INTEGER shift  148
                        STRING shift  149
                        DOUBLE shift  150
                          NULL shift  151
                          TRUE shift  152
                         FALSE shift  153
                xx_common_expr shift  139
                 xx_mcall_expr shift  183
            xx_call_parameters shift  258
             xx_call_parameter shift  185

State 258:
          xx_throw_statement ::= THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters * PARENTHESES_CLOSE DOTCOMMA
          xx_call_parameters ::= xx_call_parameters * COMMA xx_call_parameter

                         COMMA shift  182
             PARENTHESES_CLOSE shift  259

State 259:
          xx_throw_statement ::= THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE * DOTCOMMA

                      DOTCOMMA shift  260

State 260:
    (137) xx_throw_statement ::= THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA *

                     {default} reduce 137

State 261:
          xx_declare_statement ::= TYPE_INTEGER * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  266
      xx_declare_variable_list shift  262
           xx_declare_variable shift  269

State 262:
          xx_declare_statement ::= TYPE_INTEGER xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  264
                      DOTCOMMA shift  263

State 263:
    (138) xx_declare_statement ::= TYPE_INTEGER xx_declare_variable_list DOTCOMMA *

                     {default} reduce 138

State 264:
          xx_declare_variable_list ::= xx_declare_variable_list COMMA * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  266
           xx_declare_variable shift  265

State 265:
    (143) xx_declare_variable_list ::= xx_declare_variable_list COMMA xx_declare_variable *

                     {default} reduce 143

State 266:
    (145) xx_declare_variable ::= IDENTIFIER *
          xx_declare_variable ::= IDENTIFIER * ASSIGN xx_literal_expr

                        ASSIGN shift  267
                     {default} reduce 145

State 267:
          xx_declare_variable ::= IDENTIFIER ASSIGN * xx_literal_expr
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                       INTEGER shift  165
                        STRING shift  166
                        DOUBLE shift  167
                          NULL shift  168
                          TRUE shift  170
                         FALSE shift  169
               xx_literal_expr shift  268

State 268:
    (146) xx_declare_variable ::= IDENTIFIER ASSIGN xx_literal_expr *

                     {default} reduce 146

State 269:
    (144) xx_declare_variable_list ::= xx_declare_variable *

                     {default} reduce 144

State 270:
          xx_declare_statement ::= TYPE_DOUBLE * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  266
      xx_declare_variable_list shift  271
           xx_declare_variable shift  269

State 271:
          xx_declare_statement ::= TYPE_DOUBLE xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  264
                      DOTCOMMA shift  272

State 272:
    (139) xx_declare_statement ::= TYPE_DOUBLE xx_declare_variable_list DOTCOMMA *

                     {default} reduce 139

State 273:
          xx_declare_statement ::= TYPE_STRING * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  266
      xx_declare_variable_list shift  274
           xx_declare_variable shift  269

State 274:
          xx_declare_statement ::= TYPE_STRING xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  264
                      DOTCOMMA shift  275

State 275:
    (140) xx_declare_statement ::= TYPE_STRING xx_declare_variable_list DOTCOMMA *

                     {default} reduce 140

State 276:
          xx_declare_statement ::= TYPE_BOOL * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  266
      xx_declare_variable_list shift  277
           xx_declare_variable shift  269

State 277:
          xx_declare_statement ::= TYPE_BOOL xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  264
                      DOTCOMMA shift  278

State 278:
    (141) xx_declare_statement ::= TYPE_BOOL xx_declare_variable_list DOTCOMMA *

                     {default} reduce 141

State 279:
          xx_declare_statement ::= TYPE_VAR * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  266
      xx_declare_variable_list shift  280
           xx_declare_variable shift  269

State 280:
          xx_declare_statement ::= TYPE_VAR xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  264
                      DOTCOMMA shift  281

State 281:
    (142) xx_declare_statement ::= TYPE_VAR xx_declare_variable_list DOTCOMMA *

                     {default} reduce 142

State 282:
          xx_mcall_expr ::= IDENTIFIER * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ARROW shift  283

State 283:
          xx_mcall_expr ::= IDENTIFIER ARROW * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                    IDENTIFIER shift  284

State 284:
          xx_mcall_expr ::= IDENTIFIER ARROW IDENTIFIER * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= IDENTIFIER ARROW IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  138

State 285:
    (208) xx_comment ::= COMMENT *

                     {default} reduce 208

State 286:
     (70) xx_statement_list ::= xx_statement *

                     {default} reduce 70

State 287:
          xx_for_statement ::= FOR IDENTIFIER IN REVERSE * xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  103
                         FETCH shift  142
                        TYPEOF shift  146
                    INSTANCEOF shift  140
                           NEW shift  176
                           NOT shift  100
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  132
                 SBRACKET_OPEN shift  154
                       INTEGER shift  148
                        STRING shift  149
                        DOUBLE shift  150
                          NULL shift  151
                          TRUE shift  152
                         FALSE shift  153
                xx_common_expr shift  288
                 xx_mcall_expr shift  183

State 288:
          xx_for_statement ::= FOR IDENTIFIER IN REVERSE xx_common_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr

                        EQUALS shift  99
                     IDENTICAL shift  114
                          LESS shift  118
                       GREATER shift  120
                     LESSEQUAL shift  122
                  GREATEREQUAL shift  124
                  NOTIDENTICAL shift  116
                     NOTEQUALS shift  102
                           ADD shift  126
                           SUB shift  128
                        CONCAT shift  130
                  BRACKET_OPEN shift  289

State 289:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  282
                       COMMENT shift  285
                  TYPE_INTEGER shift  261
                   TYPE_DOUBLE shift  270
                     TYPE_BOOL shift  276
                   TYPE_STRING shift  273
                      TYPE_VAR shift  279
                         BREAK shift  44
                      CONTINUE shift  46
                            IF shift  48
                        SWITCH shift  57
                          LOOP shift  68
                         WHILE shift  72
                           FOR shift  77
                           LET shift  84
                          ECHO shift  225
                        RETURN shift  234
                         UNSET shift  237
                         THROW shift  252
                    xx_comment shift  43
             xx_statement_list shift  290
                  xx_statement shift  286
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_mcall_statement shift  34
            xx_unset_statement shift  35
            xx_throw_statement shift  36
          xx_declare_statement shift  37
            xx_break_statement shift  38
         xx_continue_statement shift  39
            xx_while_statement shift  40
           xx_switch_statement shift  41
              xx_for_statement shift  42
                 xx_mcall_expr shift  232

State 290:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  282
                 BRACKET_CLOSE shift  291
                       COMMENT shift  285
                  TYPE_INTEGER shift  261
                   TYPE_DOUBLE shift  270
                     TYPE_BOOL shift  276
                   TYPE_STRING shift  273
                      TYPE_VAR shift  279
                         BREAK shift  44
                      CONTINUE shift  46
                            IF shift  48
                        SWITCH shift  57
                          LOOP shift  68
                         WHILE shift  72
                           FOR shift  77
                           LET shift  84
                          ECHO shift  225
                        RETURN shift  234
                         UNSET shift  237
                         THROW shift  252
                    xx_comment shift  43
                  xx_statement shift  28
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_mcall_statement shift  34
            xx_unset_statement shift  35
            xx_throw_statement shift  36
          xx_declare_statement shift  37
            xx_break_statement shift  38
         xx_continue_statement shift  39
            xx_while_statement shift  40
           xx_switch_statement shift  41
              xx_for_statement shift  42
                 xx_mcall_expr shift  232

State 291:
    (105) xx_for_statement ::= FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 105

State 292:
          xx_for_statement ::= FOR IDENTIFIER COMMA * IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER COMMA * IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                    IDENTIFIER shift  293

State 293:
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER * IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER * IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                            IN shift  294

State 294:
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN * xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN * REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  103
                         FETCH shift  142
                        TYPEOF shift  146
                    INSTANCEOF shift  140
                           NEW shift  176
                           NOT shift  100
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  132
                       REVERSE shift  299
                 SBRACKET_OPEN shift  154
                       INTEGER shift  148
                        STRING shift  149
                        DOUBLE shift  150
                          NULL shift  151
                          TRUE shift  152
                         FALSE shift  153
                xx_common_expr shift  295
                 xx_mcall_expr shift  183

State 295:
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr

                        EQUALS shift  99
                     IDENTICAL shift  114
                          LESS shift  118
                       GREATER shift  120
                     LESSEQUAL shift  122
                  GREATEREQUAL shift  124
                  NOTIDENTICAL shift  116
                     NOTEQUALS shift  102
                           ADD shift  126
                           SUB shift  128
                        CONCAT shift  130
                  BRACKET_OPEN shift  296

State 296:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  282
                       COMMENT shift  285
                  TYPE_INTEGER shift  261
                   TYPE_DOUBLE shift  270
                     TYPE_BOOL shift  276
                   TYPE_STRING shift  273
                      TYPE_VAR shift  279
                         BREAK shift  44
                      CONTINUE shift  46
                            IF shift  48
                        SWITCH shift  57
                          LOOP shift  68
                         WHILE shift  72
                           FOR shift  77
                           LET shift  84
                          ECHO shift  225
                        RETURN shift  234
                         UNSET shift  237
                         THROW shift  252
                    xx_comment shift  43
             xx_statement_list shift  297
                  xx_statement shift  286
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_mcall_statement shift  34
            xx_unset_statement shift  35
            xx_throw_statement shift  36
          xx_declare_statement shift  37
            xx_break_statement shift  38
         xx_continue_statement shift  39
            xx_while_statement shift  40
           xx_switch_statement shift  41
              xx_for_statement shift  42
                 xx_mcall_expr shift  232

State 297:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  282
                 BRACKET_CLOSE shift  298
                       COMMENT shift  285
                  TYPE_INTEGER shift  261
                   TYPE_DOUBLE shift  270
                     TYPE_BOOL shift  276
                   TYPE_STRING shift  273
                      TYPE_VAR shift  279
                         BREAK shift  44
                      CONTINUE shift  46
                            IF shift  48
                        SWITCH shift  57
                          LOOP shift  68
                         WHILE shift  72
                           FOR shift  77
                           LET shift  84
                          ECHO shift  225
                        RETURN shift  234
                         UNSET shift  237
                         THROW shift  252
                    xx_comment shift  43
                  xx_statement shift  28
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_mcall_statement shift  34
            xx_unset_statement shift  35
            xx_throw_statement shift  36
          xx_declare_statement shift  37
            xx_break_statement shift  38
         xx_continue_statement shift  39
            xx_while_statement shift  40
           xx_switch_statement shift  41
              xx_for_statement shift  42
                 xx_mcall_expr shift  232

State 298:
    (106) xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 106

State 299:
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE * xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= * NOT xx_common_expr
          xx_common_expr ::= * ISSET xx_isset_expr
          xx_common_expr ::= * xx_common_expr EQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTEQUALS xx_common_expr
          xx_common_expr ::= * xx_common_expr IDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr NOTIDENTICAL xx_common_expr
          xx_common_expr ::= * xx_common_expr LESS xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATER xx_common_expr
          xx_common_expr ::= * xx_common_expr LESSEQUAL xx_common_expr
          xx_common_expr ::= * xx_common_expr GREATEREQUAL xx_common_expr
          xx_common_expr ::= * PARENTHESES_OPEN xx_common_expr PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_common_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE
          xx_common_expr ::= * xx_common_expr ADD xx_common_expr
          xx_common_expr ::= * xx_common_expr SUB xx_common_expr
          xx_common_expr ::= * xx_common_expr CONCAT xx_common_expr
          xx_common_expr ::= * INSTANCEOF xx_common_expr
          xx_common_expr ::= * FETCH IDENTIFIER COMMA xx_isset_expr
          xx_common_expr ::= * TYPEOF xx_common_expr
          xx_common_expr ::= * IDENTIFIER
          xx_common_expr ::= * INTEGER
          xx_common_expr ::= * STRING
          xx_common_expr ::= * DOUBLE
          xx_common_expr ::= * NULL
          xx_common_expr ::= * TRUE
          xx_common_expr ::= * FALSE
          xx_common_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_common_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_common_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_common_expr ::= * xx_mcall_expr
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                         ISSET shift  103
                         FETCH shift  142
                        TYPEOF shift  146
                    INSTANCEOF shift  140
                           NEW shift  176
                           NOT shift  100
                    IDENTIFIER shift  135
              PARENTHESES_OPEN shift  132
                 SBRACKET_OPEN shift  154
                       INTEGER shift  148
                        STRING shift  149
                        DOUBLE shift  150
                          NULL shift  151
                          TRUE shift  152
                         FALSE shift  153
                xx_common_expr shift  300
                 xx_mcall_expr shift  183

State 300:
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr

                        EQUALS shift  99
                     IDENTICAL shift  114
                          LESS shift  118
                       GREATER shift  120
                     LESSEQUAL shift  122
                  GREATEREQUAL shift  124
                  NOTIDENTICAL shift  116
                     NOTEQUALS shift  102
                           ADD shift  126
                           SUB shift  128
                        CONCAT shift  130
                  BRACKET_OPEN shift  301

State 301:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  282
                       COMMENT shift  285
                  TYPE_INTEGER shift  261
                   TYPE_DOUBLE shift  270
                     TYPE_BOOL shift  276
                   TYPE_STRING shift  273
                      TYPE_VAR shift  279
                         BREAK shift  44
                      CONTINUE shift  46
                            IF shift  48
                        SWITCH shift  57
                          LOOP shift  68
                         WHILE shift  72
                           FOR shift  77
                           LET shift  84
                          ECHO shift  225
                        RETURN shift  234
                         UNSET shift  237
                         THROW shift  252
                    xx_comment shift  43
             xx_statement_list shift  302
                  xx_statement shift  286
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_mcall_statement shift  34
            xx_unset_statement shift  35
            xx_throw_statement shift  36
          xx_declare_statement shift  37
            xx_break_statement shift  38
         xx_continue_statement shift  39
            xx_while_statement shift  40
           xx_switch_statement shift  41
              xx_for_statement shift  42
                 xx_mcall_expr shift  232

State 302:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  282
                 BRACKET_CLOSE shift  303
                       COMMENT shift  285
                  TYPE_INTEGER shift  261
                   TYPE_DOUBLE shift  270
                     TYPE_BOOL shift  276
                   TYPE_STRING shift  273
                      TYPE_VAR shift  279
                         BREAK shift  44
                      CONTINUE shift  46
                            IF shift  48
                        SWITCH shift  57
                          LOOP shift  68
                         WHILE shift  72
                           FOR shift  77
                           LET shift  84
                          ECHO shift  225
                        RETURN shift  234
                         UNSET shift  237
                         THROW shift  252
                    xx_comment shift  43
                  xx_statement shift  28
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_mcall_statement shift  34
            xx_unset_statement shift  35
            xx_throw_statement shift  36
          xx_declare_statement shift  37
            xx_break_statement shift  38
         xx_continue_statement shift  39
            xx_while_statement shift  40
           xx_switch_statement shift  41
              xx_for_statement shift  42
                 xx_mcall_expr shift  232

State 303:
    (107) xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 107

State 304:
    (102) xx_while_statement ::= WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 102

State 305:
          xx_common_expr ::= xx_common_expr * EQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTEQUALS xx_common_expr
          xx_common_expr ::= xx_common_expr * IDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * NOTIDENTICAL xx_common_expr
          xx_common_expr ::= xx_common_expr * LESS xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATER xx_common_expr
          xx_common_expr ::= xx_common_expr * LESSEQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * GREATEREQUAL xx_common_expr
          xx_common_expr ::= xx_common_expr * ADD xx_common_expr
          xx_common_expr ::= xx_common_expr * SUB xx_common_expr
          xx_common_expr ::= xx_common_expr * CONCAT xx_common_expr
    (207) xx_eval_expr ::= xx_common_expr *

                        EQUALS shift  99
                     IDENTICAL shift  114
                          LESS shift  118
                       GREATER shift  120
                     LESSEQUAL shift  122
                  GREATEREQUAL shift  124
                  NOTIDENTICAL shift  116
                     NOTEQUALS shift  102
                           ADD shift  126
                           SUB shift  128
                        CONCAT shift  130
                  BRACKET_OPEN reduce 207

State 306:
    (100) xx_loop_statement ::= LOOP BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 100

State 307:
          xx_case_clause ::= DEFAULT * COLON xx_statement_list

                         COLON shift  308

State 308:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_case_clause ::= DEFAULT COLON * xx_statement_list
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  282
                       COMMENT shift  285
                  TYPE_INTEGER shift  261
                   TYPE_DOUBLE shift  270
                     TYPE_BOOL shift  276
                   TYPE_STRING shift  273
                      TYPE_VAR shift  279
                         BREAK shift  44
                      CONTINUE shift  46
                            IF shift  48
                        SWITCH shift  57
                          LOOP shift  68
                         WHILE shift  72
                           FOR shift  77
                           LET shift  84
                          ECHO shift  225
                        RETURN shift  234
                         UNSET shift  237
                         THROW shift  252
                    xx_comment shift  43
             xx_statement_list shift  309
                  xx_statement shift  286
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_mcall_statement shift  34
            xx_unset_statement shift  35
            xx_throw_statement shift  36
          xx_declare_statement shift  37
            xx_break_statement shift  38
         xx_continue_statement shift  39
            xx_while_statement shift  40
           xx_switch_statement shift  41
              xx_for_statement shift  42
                 xx_mcall_expr shift  232

State 309:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
     (99) xx_case_clause ::= DEFAULT COLON xx_statement_list *
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  282
                       COMMENT shift  285
                  TYPE_INTEGER shift  261
                   TYPE_DOUBLE shift  270
                     TYPE_BOOL shift  276
                   TYPE_STRING shift  273
                      TYPE_VAR shift  279
                         BREAK shift  44
                      CONTINUE shift  46
                            IF shift  48
                        SWITCH shift  57
                          LOOP shift  68
                         WHILE shift  72
                           FOR shift  77
                           LET shift  84
                          ECHO shift  225
                        RETURN shift  234
                         UNSET shift  237
                         THROW shift  252
                    xx_comment shift  43
                  xx_statement shift  28
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_mcall_statement shift  34
            xx_unset_statement shift  35
            xx_throw_statement shift  36
          xx_declare_statement shift  37
            xx_break_statement shift  38
         xx_continue_statement shift  39
            xx_while_statement shift  40
           xx_switch_statement shift  41
              xx_for_statement shift  42
                 xx_mcall_expr shift  232
                     {default} reduce 99

State 310:
     (97) xx_case_clauses ::= xx_case_clause *

                     {default} reduce 97

State 311:
     (92) xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 92

State 312:
     (88) xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE *
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE * ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE * ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                          ELSE shift  313
                     {default} reduce 88

State 313:
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE * BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE * BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  314

State 314:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN * BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  282
                 BRACKET_CLOSE shift  317
                       COMMENT shift  285
                  TYPE_INTEGER shift  261
                   TYPE_DOUBLE shift  270
                     TYPE_BOOL shift  276
                   TYPE_STRING shift  273
                      TYPE_VAR shift  279
                         BREAK shift  44
                      CONTINUE shift  46
                            IF shift  48
                        SWITCH shift  57
                          LOOP shift  68
                         WHILE shift  72
                           FOR shift  77
                           LET shift  84
                          ECHO shift  225
                        RETURN shift  234
                         UNSET shift  237
                         THROW shift  252
                    xx_comment shift  43
             xx_statement_list shift  315
                  xx_statement shift  286
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_mcall_statement shift  34
            xx_unset_statement shift  35
            xx_throw_statement shift  36
          xx_declare_statement shift  37
            xx_break_statement shift  38
         xx_continue_statement shift  39
            xx_while_statement shift  40
           xx_switch_statement shift  41
              xx_for_statement shift  42
                 xx_mcall_expr shift  232

State 315:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  282
                 BRACKET_CLOSE shift  316
                       COMMENT shift  285
                  TYPE_INTEGER shift  261
                   TYPE_DOUBLE shift  270
                     TYPE_BOOL shift  276
                   TYPE_STRING shift  273
                      TYPE_VAR shift  279
                         BREAK shift  44
                      CONTINUE shift  46
                            IF shift  48
                        SWITCH shift  57
                          LOOP shift  68
                         WHILE shift  72
                           FOR shift  77
                           LET shift  84
                          ECHO shift  225
                        RETURN shift  234
                         UNSET shift  237
                         THROW shift  252
                    xx_comment shift  43
                  xx_statement shift  28
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_mcall_statement shift  34
            xx_unset_statement shift  35
            xx_throw_statement shift  36
          xx_declare_statement shift  37
            xx_break_statement shift  38
         xx_continue_statement shift  39
            xx_while_statement shift  40
           xx_switch_statement shift  41
              xx_for_statement shift  42
                 xx_mcall_expr shift  232

State 316:
     (93) xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 93

State 317:
     (89) xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 89

State 318:
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_parameter_list ::= xx_parameter_list * COMMA xx_parameter

                         COMMA shift  322
                  BRACKET_OPEN shift  319

State 319:
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  282
                       COMMENT shift  285
                  TYPE_INTEGER shift  261
                   TYPE_DOUBLE shift  270
                     TYPE_BOOL shift  276
                   TYPE_STRING shift  273
                      TYPE_VAR shift  279
                         BREAK shift  44
                      CONTINUE shift  46
                            IF shift  48
                        SWITCH shift  57
                          LOOP shift  68
                         WHILE shift  72
                           FOR shift  77
                           LET shift  84
                          ECHO shift  225
                        RETURN shift  234
                         UNSET shift  237
                         THROW shift  252
                    xx_comment shift  43
             xx_statement_list shift  320
                  xx_statement shift  286
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_mcall_statement shift  34
            xx_unset_statement shift  35
            xx_throw_statement shift  36
          xx_declare_statement shift  37
            xx_break_statement shift  38
         xx_continue_statement shift  39
            xx_while_statement shift  40
           xx_switch_statement shift  41
              xx_for_statement shift  42
                 xx_mcall_expr shift  232

State 320:
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  282
                 BRACKET_CLOSE shift  321
                       COMMENT shift  285
                  TYPE_INTEGER shift  261
                   TYPE_DOUBLE shift  270
                     TYPE_BOOL shift  276
                   TYPE_STRING shift  273
                      TYPE_VAR shift  279
                         BREAK shift  44
                      CONTINUE shift  46
                            IF shift  48
                        SWITCH shift  57
                          LOOP shift  68
                         WHILE shift  72
                           FOR shift  77
                           LET shift  84
                          ECHO shift  225
                        RETURN shift  234
                         UNSET shift  237
                         THROW shift  252
                    xx_comment shift  43
                  xx_statement shift  28
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_mcall_statement shift  34
            xx_unset_statement shift  35
            xx_throw_statement shift  36
          xx_declare_statement shift  37
            xx_break_statement shift  38
         xx_continue_statement shift  39
            xx_while_statement shift  40
           xx_switch_statement shift  41
              xx_for_statement shift  42
                 xx_mcall_expr shift  232

State 321:
     (46) xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 46

State 322:
          xx_parameter_list ::= xx_parameter_list COMMA * xx_parameter
          xx_parameter ::= * IDENTIFIER
          xx_parameter ::= * xx_parameter_type IDENTIFIER
          xx_parameter ::= * xx_parameter_cast IDENTIFIER
          xx_parameter ::= * IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_type IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_cast IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  335
                    IDENTIFIER shift  324
                  TYPE_INTEGER shift  338
                   TYPE_DOUBLE shift  339
                     TYPE_BOOL shift  340
                   TYPE_STRING shift  341
                    TYPE_ARRAY shift  342
                      TYPE_VAR shift  343
                  xx_parameter shift  323
             xx_parameter_type shift  327
             xx_parameter_cast shift  331

State 323:
     (54) xx_parameter_list ::= xx_parameter_list COMMA xx_parameter *

                     {default} reduce 54

State 324:
     (56) xx_parameter ::= IDENTIFIER *
          xx_parameter ::= IDENTIFIER * ASSIGN xx_literal_expr

                        ASSIGN shift  325
                     {default} reduce 56

State 325:
          xx_parameter ::= IDENTIFIER ASSIGN * xx_literal_expr
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                       INTEGER shift  165
                        STRING shift  166
                        DOUBLE shift  167
                          NULL shift  168
                          TRUE shift  170
                         FALSE shift  169
               xx_literal_expr shift  326

State 326:
     (59) xx_parameter ::= IDENTIFIER ASSIGN xx_literal_expr *

                     {default} reduce 59

State 327:
          xx_parameter ::= xx_parameter_type * IDENTIFIER
          xx_parameter ::= xx_parameter_type * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  328

State 328:
     (57) xx_parameter ::= xx_parameter_type IDENTIFIER *
          xx_parameter ::= xx_parameter_type IDENTIFIER * ASSIGN xx_literal_expr

                        ASSIGN shift  329
                     {default} reduce 57

State 329:
          xx_parameter ::= xx_parameter_type IDENTIFIER ASSIGN * xx_literal_expr
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                       INTEGER shift  165
                        STRING shift  166
                        DOUBLE shift  167
                          NULL shift  168
                          TRUE shift  170
                         FALSE shift  169
               xx_literal_expr shift  330

State 330:
     (60) xx_parameter ::= xx_parameter_type IDENTIFIER ASSIGN xx_literal_expr *

                     {default} reduce 60

State 331:
          xx_parameter ::= xx_parameter_cast * IDENTIFIER
          xx_parameter ::= xx_parameter_cast * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  332

State 332:
     (58) xx_parameter ::= xx_parameter_cast IDENTIFIER *
          xx_parameter ::= xx_parameter_cast IDENTIFIER * ASSIGN xx_literal_expr

                        ASSIGN shift  333
                     {default} reduce 58

State 333:
          xx_parameter ::= xx_parameter_cast IDENTIFIER ASSIGN * xx_literal_expr
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                       INTEGER shift  165
                        STRING shift  166
                        DOUBLE shift  167
                          NULL shift  168
                          TRUE shift  170
                         FALSE shift  169
               xx_literal_expr shift  334

State 334:
     (61) xx_parameter ::= xx_parameter_cast IDENTIFIER ASSIGN xx_literal_expr *

                     {default} reduce 61

State 335:
          xx_parameter_cast ::= LESS * IDENTIFIER GREATER

                    IDENTIFIER shift  336

State 336:
          xx_parameter_cast ::= LESS IDENTIFIER * GREATER

                       GREATER shift  337

State 337:
     (62) xx_parameter_cast ::= LESS IDENTIFIER GREATER *

                    IDENTIFIER reduce 62

State 338:
     (63) xx_parameter_type ::= TYPE_INTEGER *

                    IDENTIFIER reduce 63

State 339:
     (64) xx_parameter_type ::= TYPE_DOUBLE *

                    IDENTIFIER reduce 64

State 340:
     (65) xx_parameter_type ::= TYPE_BOOL *

                    IDENTIFIER reduce 65

State 341:
     (66) xx_parameter_type ::= TYPE_STRING *

                    IDENTIFIER reduce 66

State 342:
     (67) xx_parameter_type ::= TYPE_ARRAY *

                    IDENTIFIER reduce 67

State 343:
     (68) xx_parameter_type ::= TYPE_VAR *

                    IDENTIFIER reduce 68

State 344:
     (55) xx_parameter_list ::= xx_parameter *

                     {default} reduce 55

State 345:
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_parameter_list ::= xx_parameter_list * COMMA xx_parameter

                         COMMA shift  322
             PARENTHESES_CLOSE shift  346

State 346:
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  347

State 347:
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN * BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  282
                 BRACKET_CLOSE shift  348
                       COMMENT shift  285
                  TYPE_INTEGER shift  261
                   TYPE_DOUBLE shift  270
                     TYPE_BOOL shift  276
                   TYPE_STRING shift  273
                      TYPE_VAR shift  279
                         BREAK shift  44
                      CONTINUE shift  46
                            IF shift  48
                        SWITCH shift  57
                          LOOP shift  68
                         WHILE shift  72
                           FOR shift  77
                           LET shift  84
                          ECHO shift  225
                        RETURN shift  234
                         UNSET shift  237
                         THROW shift  252
                    xx_comment shift  43
             xx_statement_list shift  349
                  xx_statement shift  286
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_mcall_statement shift  34
            xx_unset_statement shift  35
            xx_throw_statement shift  36
          xx_declare_statement shift  37
            xx_break_statement shift  38
         xx_continue_statement shift  39
            xx_while_statement shift  40
           xx_switch_statement shift  41
              xx_for_statement shift  42
                 xx_mcall_expr shift  232

State 348:
     (42) xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 42

State 349:
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  282
                 BRACKET_CLOSE shift  350
                       COMMENT shift  285
                  TYPE_INTEGER shift  261
                   TYPE_DOUBLE shift  270
                     TYPE_BOOL shift  276
                   TYPE_STRING shift  273
                      TYPE_VAR shift  279
                         BREAK shift  44
                      CONTINUE shift  46
                            IF shift  48
                        SWITCH shift  57
                          LOOP shift  68
                         WHILE shift  72
                           FOR shift  77
                           LET shift  84
                          ECHO shift  225
                        RETURN shift  234
                         UNSET shift  237
                         THROW shift  252
                    xx_comment shift  43
                  xx_statement shift  28
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_mcall_statement shift  34
            xx_unset_statement shift  35
            xx_throw_statement shift  36
          xx_declare_statement shift  37
            xx_break_statement shift  38
         xx_continue_statement shift  39
            xx_while_statement shift  40
           xx_switch_statement shift  41
              xx_for_statement shift  42
                 xx_mcall_expr shift  232

State 350:
     (49) xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 49

State 351:
          xx_class_method_definition ::= COMMENT * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                        PUBLIC shift  352
                     PROTECTED shift  367

State 352:
          xx_class_method_definition ::= COMMENT PUBLIC * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                      FUNCTION shift  353

State 353:
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                    IDENTIFIER shift  354

State 354:
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

              PARENTHESES_OPEN shift  355

State 355:
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_parameter_list ::= * xx_parameter_list COMMA xx_parameter
          xx_parameter_list ::= * xx_parameter
          xx_parameter ::= * IDENTIFIER
          xx_parameter ::= * xx_parameter_type IDENTIFIER
          xx_parameter ::= * xx_parameter_cast IDENTIFIER
          xx_parameter ::= * IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_type IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_cast IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY
          xx_parameter_type ::= * TYPE_VAR

                          LESS shift  335
                    IDENTIFIER shift  324
             PARENTHESES_CLOSE shift  356
                  TYPE_INTEGER shift  338
                   TYPE_DOUBLE shift  339
                     TYPE_BOOL shift  340
                   TYPE_STRING shift  341
                    TYPE_ARRAY shift  342
                      TYPE_VAR shift  343
             xx_parameter_list shift  361
                  xx_parameter shift  344
             xx_parameter_type shift  327
             xx_parameter_cast shift  331

State 356:
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  357

State 357:
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN * BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  282
                 BRACKET_CLOSE shift  358
                       COMMENT shift  285
                  TYPE_INTEGER shift  261
                   TYPE_DOUBLE shift  270
                     TYPE_BOOL shift  276
                   TYPE_STRING shift  273
                      TYPE_VAR shift  279
                         BREAK shift  44
                      CONTINUE shift  46
                            IF shift  48
                        SWITCH shift  57
                          LOOP shift  68
                         WHILE shift  72
                           FOR shift  77
                           LET shift  84
                          ECHO shift  225
                        RETURN shift  234
                         UNSET shift  237
                         THROW shift  252
                    xx_comment shift  43
             xx_statement_list shift  359
                  xx_statement shift  286
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_mcall_statement shift  34
            xx_unset_statement shift  35
            xx_throw_statement shift  36
          xx_declare_statement shift  37
            xx_break_statement shift  38
         xx_continue_statement shift  39
            xx_while_statement shift  40
           xx_switch_statement shift  41
              xx_for_statement shift  42
                 xx_mcall_expr shift  232

State 358:
     (43) xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 43

State 359:
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  282
                 BRACKET_CLOSE shift  360
                       COMMENT shift  285
                  TYPE_INTEGER shift  261
                   TYPE_DOUBLE shift  270
                     TYPE_BOOL shift  276
                   TYPE_STRING shift  273
                      TYPE_VAR shift  279
                         BREAK shift  44
                      CONTINUE shift  46
                            IF shift  48
                        SWITCH shift  57
                          LOOP shift  68
                         WHILE shift  72
                           FOR shift  77
                           LET shift  84
                          ECHO shift  225
                        RETURN shift  234
                         UNSET shift  237
                         THROW shift  252
                    xx_comment shift  43
                  xx_statement shift  28
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_mcall_statement shift  34
            xx_unset_statement shift  35
            xx_throw_statement shift  36
          xx_declare_statement shift  37
            xx_break_statement shift  38
         xx_continue_statement shift  39
            xx_while_statement shift  40
           xx_switch_statement shift  41
              xx_for_statement shift  42
                 xx_mcall_expr shift  232

State 360:
     (47) xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 47

State 361:
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_parameter_list ::= xx_parameter_list * COMMA xx_parameter

                         COMMA shift  322
             PARENTHESES_CLOSE shift  362

State 362:
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  363

State 363:
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN * BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  282
                 BRACKET_CLOSE shift  364
                       COMMENT shift  285
                  TYPE_INTEGER shift  261
                   TYPE_DOUBLE shift  270
                     TYPE_BOOL shift  276
                   TYPE_STRING shift  273
                      TYPE_VAR shift  279
                         BREAK shift  44
                      CONTINUE shift  46
                            IF shift  48
                        SWITCH shift  57
                          LOOP shift  68
                         WHILE shift  72
                           FOR shift  77
                           LET shift  84
                          ECHO shift  225
                        RETURN shift  234
                         UNSET shift  237
                         THROW shift  252
                    xx_comment shift  43
             xx_statement_list shift  365
                  xx_statement shift  286
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_mcall_statement shift  34
            xx_unset_statement shift  35
            xx_throw_statement shift  36
          xx_declare_statement shift  37
            xx_break_statement shift  38
         xx_continue_statement shift  39
            xx_while_statement shift  40
           xx_switch_statement shift  41
              xx_for_statement shift  42
                 xx_mcall_expr shift  232

State 364:
     (44) xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 44

State 365:
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  282
                 BRACKET_CLOSE shift  366
                       COMMENT shift  285
                  TYPE_INTEGER shift  261
                   TYPE_DOUBLE shift  270
                     TYPE_BOOL shift  276
                   TYPE_STRING shift  273
                      TYPE_VAR shift  279
                         BREAK shift  44
                      CONTINUE shift  46
                            IF shift  48
                        SWITCH shift  57
                          LOOP shift  68
                         WHILE shift  72
                           FOR shift  77
                           LET shift  84
                          ECHO shift  225
                        RETURN shift  234
                         UNSET shift  237
                         THROW shift  252
                    xx_comment shift  43
                  xx_statement shift  28
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_mcall_statement shift  34
            xx_unset_statement shift  35
            xx_throw_statement shift  36
          xx_declare_statement shift  37
            xx_break_statement shift  38
         xx_continue_statement shift  39
            xx_while_statement shift  40
           xx_switch_statement shift  41
              xx_for_statement shift  42
                 xx_mcall_expr shift  232

State 366:
     (48) xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 48

State 367:
          xx_class_method_definition ::= COMMENT PROTECTED * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PROTECTED * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                      FUNCTION shift  368

State 368:
          xx_class_method_definition ::= COMMENT PROTECTED FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PROTECTED FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                    IDENTIFIER shift  369

State 369:
          xx_class_method_definition ::= COMMENT PROTECTED FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PROTECTED FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

              PARENTHESES_OPEN shift  370

State 370:
          xx_class_method_definition ::= COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

             PARENTHESES_CLOSE shift  371

State 371:
          xx_class_method_definition ::= COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  372

State 372:
          xx_class_method_definition ::= COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN * BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  282
                 BRACKET_CLOSE shift  373
                       COMMENT shift  285
                  TYPE_INTEGER shift  261
                   TYPE_DOUBLE shift  270
                     TYPE_BOOL shift  276
                   TYPE_STRING shift  273
                      TYPE_VAR shift  279
                         BREAK shift  44
                      CONTINUE shift  46
                            IF shift  48
                        SWITCH shift  57
                          LOOP shift  68
                         WHILE shift  72
                           FOR shift  77
                           LET shift  84
                          ECHO shift  225
                        RETURN shift  234
                         UNSET shift  237
                         THROW shift  252
                    xx_comment shift  43
             xx_statement_list shift  374
                  xx_statement shift  286
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_mcall_statement shift  34
            xx_unset_statement shift  35
            xx_throw_statement shift  36
          xx_declare_statement shift  37
            xx_break_statement shift  38
         xx_continue_statement shift  39
            xx_while_statement shift  40
           xx_switch_statement shift  41
              xx_for_statement shift  42
                 xx_mcall_expr shift  232

State 373:
     (51) xx_class_method_definition ::= COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 51

State 374:
          xx_class_method_definition ::= COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  282
                 BRACKET_CLOSE shift  375
                       COMMENT shift  285
                  TYPE_INTEGER shift  261
                   TYPE_DOUBLE shift  270
                     TYPE_BOOL shift  276
                   TYPE_STRING shift  273
                      TYPE_VAR shift  279
                         BREAK shift  44
                      CONTINUE shift  46
                            IF shift  48
                        SWITCH shift  57
                          LOOP shift  68
                         WHILE shift  72
                           FOR shift  77
                           LET shift  84
                          ECHO shift  225
                        RETURN shift  234
                         UNSET shift  237
                         THROW shift  252
                    xx_comment shift  43
                  xx_statement shift  28
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_mcall_statement shift  34
            xx_unset_statement shift  35
            xx_throw_statement shift  36
          xx_declare_statement shift  37
            xx_break_statement shift  38
         xx_continue_statement shift  39
            xx_while_statement shift  40
           xx_switch_statement shift  41
              xx_for_statement shift  42
                 xx_mcall_expr shift  232

State 375:
     (53) xx_class_method_definition ::= COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 53

State 376:
          xx_class_method_definition ::= PROTECTED * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= PROTECTED * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                      FUNCTION shift  377

State 377:
          xx_class_method_definition ::= PROTECTED FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= PROTECTED FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                    IDENTIFIER shift  378

State 378:
          xx_class_method_definition ::= PROTECTED FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= PROTECTED FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

              PARENTHESES_OPEN shift  379

State 379:
          xx_class_method_definition ::= PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

             PARENTHESES_CLOSE shift  380

State 380:
          xx_class_method_definition ::= PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  381

State 381:
          xx_class_method_definition ::= PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN * BRACKET_CLOSE
          xx_class_method_definition ::= PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  282
                 BRACKET_CLOSE shift  382
                       COMMENT shift  285
                  TYPE_INTEGER shift  261
                   TYPE_DOUBLE shift  270
                     TYPE_BOOL shift  276
                   TYPE_STRING shift  273
                      TYPE_VAR shift  279
                         BREAK shift  44
                      CONTINUE shift  46
                            IF shift  48
                        SWITCH shift  57
                          LOOP shift  68
                         WHILE shift  72
                           FOR shift  77
                           LET shift  84
                          ECHO shift  225
                        RETURN shift  234
                         UNSET shift  237
                         THROW shift  252
                    xx_comment shift  43
             xx_statement_list shift  383
                  xx_statement shift  286
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_mcall_statement shift  34
            xx_unset_statement shift  35
            xx_throw_statement shift  36
          xx_declare_statement shift  37
            xx_break_statement shift  38
         xx_continue_statement shift  39
            xx_while_statement shift  40
           xx_switch_statement shift  41
              xx_for_statement shift  42
                 xx_mcall_expr shift  232

State 382:
     (50) xx_class_method_definition ::= PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 50

State 383:
          xx_class_method_definition ::= PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_mcall_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_switch_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_switch_statement ::= * SWITCH xx_eval_expr BRACKET_OPEN xx_case_clauses BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN REVERSE xx_common_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_mcall_statement ::= * xx_mcall_expr DOTCOMMA
          xx_return_statement ::= * RETURN xx_common_expr DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_mcall_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_comment ::= * COMMENT

                    IDENTIFIER shift  282
                 BRACKET_CLOSE shift  384
                       COMMENT shift  285
                  TYPE_INTEGER shift  261
                   TYPE_DOUBLE shift  270
                     TYPE_BOOL shift  276
                   TYPE_STRING shift  273
                      TYPE_VAR shift  279
                         BREAK shift  44
                      CONTINUE shift  46
                            IF shift  48
                        SWITCH shift  57
                          LOOP shift  68
                         WHILE shift  72
                           FOR shift  77
                           LET shift  84
                          ECHO shift  225
                        RETURN shift  234
                         UNSET shift  237
                         THROW shift  252
                    xx_comment shift  43
                  xx_statement shift  28
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_mcall_statement shift  34
            xx_unset_statement shift  35
            xx_throw_statement shift  36
          xx_declare_statement shift  37
            xx_break_statement shift  38
         xx_continue_statement shift  39
            xx_while_statement shift  40
           xx_switch_statement shift  41
              xx_for_statement shift  42
                 xx_mcall_expr shift  232

State 384:
     (52) xx_class_method_definition ::= PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 52

State 385:
     (20) xx_class_definition ::= xx_class_properties_definition xx_class_consts_definition *
          xx_class_definition ::= xx_class_properties_definition xx_class_consts_definition * xx_class_methods_definition
          xx_class_consts_definition ::= xx_class_consts_definition * xx_class_const_definition
          xx_class_methods_definition ::= * xx_class_methods_definition xx_class_method_definition
          xx_class_methods_definition ::= * xx_class_method_definition
          xx_class_const_definition ::= * COMMENT CONST IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_const_definition ::= * CONST IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                 BRACKET_CLOSE reduce 20
                       COMMENT shift  389
                        PUBLIC shift  19
                     PROTECTED shift  376
                         CONST shift  395
   xx_class_methods_definition shift  386
     xx_class_const_definition shift  387
    xx_class_method_definition shift  388

State 386:
     (23) xx_class_definition ::= xx_class_properties_definition xx_class_consts_definition xx_class_methods_definition *
          xx_class_methods_definition ::= xx_class_methods_definition * xx_class_method_definition
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                 BRACKET_CLOSE reduce 23
                       COMMENT shift  351
                        PUBLIC shift  19
                     PROTECTED shift  376
    xx_class_method_definition shift  18

State 387:
     (35) xx_class_consts_definition ::= xx_class_consts_definition xx_class_const_definition *

                     {default} reduce 35

State 388:
     (38) xx_class_methods_definition ::= xx_class_method_definition *

                     {default} reduce 38

State 389:
          xx_class_const_definition ::= COMMENT * CONST IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= COMMENT * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                        PUBLIC shift  352
                     PROTECTED shift  367
                         CONST shift  390

State 390:
          xx_class_const_definition ::= COMMENT CONST * IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA

                    IDENTIFIER shift  391

State 391:
          xx_class_const_definition ::= COMMENT CONST IDENTIFIER * ASSIGN xx_literal_expr DOTCOMMA

                        ASSIGN shift  392

State 392:
          xx_class_const_definition ::= COMMENT CONST IDENTIFIER ASSIGN * xx_literal_expr DOTCOMMA
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                       INTEGER shift  165
                        STRING shift  166
                        DOUBLE shift  167
                          NULL shift  168
                          TRUE shift  170
                         FALSE shift  169
               xx_literal_expr shift  393

State 393:
          xx_class_const_definition ::= COMMENT CONST IDENTIFIER ASSIGN xx_literal_expr * DOTCOMMA

                      DOTCOMMA shift  394

State 394:
     (39) xx_class_const_definition ::= COMMENT CONST IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA *

                     {default} reduce 39

State 395:
          xx_class_const_definition ::= CONST * IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA

                    IDENTIFIER shift  396

State 396:
          xx_class_const_definition ::= CONST IDENTIFIER * ASSIGN xx_literal_expr DOTCOMMA

                        ASSIGN shift  397

State 397:
          xx_class_const_definition ::= CONST IDENTIFIER ASSIGN * xx_literal_expr DOTCOMMA
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                       INTEGER shift  165
                        STRING shift  166
                        DOUBLE shift  167
                          NULL shift  168
                          TRUE shift  170
                         FALSE shift  169
               xx_literal_expr shift  398

State 398:
          xx_class_const_definition ::= CONST IDENTIFIER ASSIGN xx_literal_expr * DOTCOMMA

                      DOTCOMMA shift  399

State 399:
     (40) xx_class_const_definition ::= CONST IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA *

                     {default} reduce 40

State 400:
     (25) xx_class_properties_definition ::= xx_class_properties_definition xx_class_property_definition *

                     {default} reduce 25

State 401:
          xx_class_property_definition ::= COMMENT * PUBLIC IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= COMMENT * PUBLIC IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= COMMENT * PROTECTED IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= COMMENT * PROTECTED IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_const_definition ::= COMMENT * CONST IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= COMMENT * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                        PUBLIC shift  402
                     PROTECTED shift  408
                         CONST shift  390

State 402:
          xx_class_property_definition ::= COMMENT PUBLIC * IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= COMMENT PUBLIC * IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= COMMENT PUBLIC * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                    IDENTIFIER shift  403
                      FUNCTION shift  353

State 403:
          xx_class_property_definition ::= COMMENT PUBLIC IDENTIFIER * DOTCOMMA
          xx_class_property_definition ::= COMMENT PUBLIC IDENTIFIER * ASSIGN xx_literal_expr DOTCOMMA

                      DOTCOMMA shift  404
                        ASSIGN shift  405

State 404:
     (27) xx_class_property_definition ::= COMMENT PUBLIC IDENTIFIER DOTCOMMA *

                     {default} reduce 27

State 405:
          xx_class_property_definition ::= COMMENT PUBLIC IDENTIFIER ASSIGN * xx_literal_expr DOTCOMMA
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                       INTEGER shift  165
                        STRING shift  166
                        DOUBLE shift  167
                          NULL shift  168
                          TRUE shift  170
                         FALSE shift  169
               xx_literal_expr shift  406

State 406:
          xx_class_property_definition ::= COMMENT PUBLIC IDENTIFIER ASSIGN xx_literal_expr * DOTCOMMA

                      DOTCOMMA shift  407

State 407:
     (30) xx_class_property_definition ::= COMMENT PUBLIC IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA *

                     {default} reduce 30

State 408:
          xx_class_property_definition ::= COMMENT PROTECTED * IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= COMMENT PROTECTED * IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= COMMENT PROTECTED * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PROTECTED * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                    IDENTIFIER shift  409
                      FUNCTION shift  368

State 409:
          xx_class_property_definition ::= COMMENT PROTECTED IDENTIFIER * DOTCOMMA
          xx_class_property_definition ::= COMMENT PROTECTED IDENTIFIER * ASSIGN xx_literal_expr DOTCOMMA

                      DOTCOMMA shift  410
                        ASSIGN shift  411

State 410:
     (32) xx_class_property_definition ::= COMMENT PROTECTED IDENTIFIER DOTCOMMA *

                     {default} reduce 32

State 411:
          xx_class_property_definition ::= COMMENT PROTECTED IDENTIFIER ASSIGN * xx_literal_expr DOTCOMMA
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                       INTEGER shift  165
                        STRING shift  166
                        DOUBLE shift  167
                          NULL shift  168
                          TRUE shift  170
                         FALSE shift  169
               xx_literal_expr shift  412

State 412:
          xx_class_property_definition ::= COMMENT PROTECTED IDENTIFIER ASSIGN xx_literal_expr * DOTCOMMA

                      DOTCOMMA shift  413

State 413:
     (34) xx_class_property_definition ::= COMMENT PROTECTED IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA *

                     {default} reduce 34

State 414:
          xx_class_property_definition ::= PUBLIC * IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= PUBLIC * IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= PUBLIC * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                    IDENTIFIER shift  415
                      FUNCTION shift  20

State 415:
          xx_class_property_definition ::= PUBLIC IDENTIFIER * DOTCOMMA
          xx_class_property_definition ::= PUBLIC IDENTIFIER * ASSIGN xx_literal_expr DOTCOMMA

                      DOTCOMMA shift  416
                        ASSIGN shift  417

State 416:
     (28) xx_class_property_definition ::= PUBLIC IDENTIFIER DOTCOMMA *

                     {default} reduce 28

State 417:
          xx_class_property_definition ::= PUBLIC IDENTIFIER ASSIGN * xx_literal_expr DOTCOMMA
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                       INTEGER shift  165
                        STRING shift  166
                        DOUBLE shift  167
                          NULL shift  168
                          TRUE shift  170
                         FALSE shift  169
               xx_literal_expr shift  418

State 418:
          xx_class_property_definition ::= PUBLIC IDENTIFIER ASSIGN xx_literal_expr * DOTCOMMA

                      DOTCOMMA shift  419

State 419:
     (29) xx_class_property_definition ::= PUBLIC IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA *

                     {default} reduce 29

State 420:
          xx_class_property_definition ::= PROTECTED * IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= PROTECTED * IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= PROTECTED * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= PROTECTED * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                    IDENTIFIER shift  421
                      FUNCTION shift  377

State 421:
          xx_class_property_definition ::= PROTECTED IDENTIFIER * DOTCOMMA
          xx_class_property_definition ::= PROTECTED IDENTIFIER * ASSIGN xx_literal_expr DOTCOMMA

                      DOTCOMMA shift  422
                        ASSIGN shift  423

State 422:
     (31) xx_class_property_definition ::= PROTECTED IDENTIFIER DOTCOMMA *

                     {default} reduce 31

State 423:
          xx_class_property_definition ::= PROTECTED IDENTIFIER ASSIGN * xx_literal_expr DOTCOMMA
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                       INTEGER shift  165
                        STRING shift  166
                        DOUBLE shift  167
                          NULL shift  168
                          TRUE shift  170
                         FALSE shift  169
               xx_literal_expr shift  424

State 424:
          xx_class_property_definition ::= PROTECTED IDENTIFIER ASSIGN xx_literal_expr * DOTCOMMA

                      DOTCOMMA shift  425

State 425:
     (33) xx_class_property_definition ::= PROTECTED IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA *

                     {default} reduce 33

State 426:
     (36) xx_class_consts_definition ::= xx_class_const_definition *

                     {default} reduce 36

State 427:
     (17) xx_class_definition ::= xx_class_consts_definition *
          xx_class_definition ::= xx_class_consts_definition * xx_class_properties_definition
          xx_class_definition ::= xx_class_consts_definition * xx_class_methods_definition
          xx_class_definition ::= xx_class_consts_definition * xx_class_properties_definition xx_class_methods_definition
          xx_class_properties_definition ::= * xx_class_properties_definition xx_class_property_definition
          xx_class_properties_definition ::= * xx_class_property_definition
          xx_class_property_definition ::= * COMMENT PUBLIC IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PUBLIC IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PUBLIC IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * COMMENT PUBLIC IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * PROTECTED IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * COMMENT PROTECTED IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PROTECTED IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * COMMENT PROTECTED IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_consts_definition ::= xx_class_consts_definition * xx_class_const_definition
          xx_class_methods_definition ::= * xx_class_methods_definition xx_class_method_definition
          xx_class_methods_definition ::= * xx_class_method_definition
          xx_class_const_definition ::= * COMMENT CONST IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_const_definition ::= * CONST IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                 BRACKET_CLOSE reduce 17
                       COMMENT shift  401
                        PUBLIC shift  414
                     PROTECTED shift  420
                         CONST shift  395
xx_class_properties_definition shift  428
   xx_class_methods_definition shift  431
  xx_class_property_definition shift  432
     xx_class_const_definition shift  387
    xx_class_method_definition shift  388

State 428:
     (21) xx_class_definition ::= xx_class_consts_definition xx_class_properties_definition *
          xx_class_definition ::= xx_class_consts_definition xx_class_properties_definition * xx_class_methods_definition
          xx_class_properties_definition ::= xx_class_properties_definition * xx_class_property_definition
          xx_class_property_definition ::= * COMMENT PUBLIC IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PUBLIC IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PUBLIC IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * COMMENT PUBLIC IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * PROTECTED IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * COMMENT PROTECTED IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PROTECTED IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * COMMENT PROTECTED IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_methods_definition ::= * xx_class_methods_definition xx_class_method_definition
          xx_class_methods_definition ::= * xx_class_method_definition
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                 BRACKET_CLOSE reduce 21
                       COMMENT shift  430
                        PUBLIC shift  414
                     PROTECTED shift  420
   xx_class_methods_definition shift  429
  xx_class_property_definition shift  400
    xx_class_method_definition shift  388

State 429:
     (24) xx_class_definition ::= xx_class_consts_definition xx_class_properties_definition xx_class_methods_definition *
          xx_class_methods_definition ::= xx_class_methods_definition * xx_class_method_definition
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                 BRACKET_CLOSE reduce 24
                       COMMENT shift  351
                        PUBLIC shift  19
                     PROTECTED shift  376
    xx_class_method_definition shift  18

State 430:
          xx_class_property_definition ::= COMMENT * PUBLIC IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= COMMENT * PUBLIC IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= COMMENT * PROTECTED IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= COMMENT * PROTECTED IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= COMMENT * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                        PUBLIC shift  402
                     PROTECTED shift  408

State 431:
     (22) xx_class_definition ::= xx_class_consts_definition xx_class_methods_definition *
          xx_class_methods_definition ::= xx_class_methods_definition * xx_class_method_definition
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                 BRACKET_CLOSE reduce 22
                       COMMENT shift  351
                        PUBLIC shift  19
                     PROTECTED shift  376
    xx_class_method_definition shift  18

State 432:
     (26) xx_class_properties_definition ::= xx_class_property_definition *

                     {default} reduce 26

State 433:
     (18) xx_class_definition ::= xx_class_methods_definition *
          xx_class_methods_definition ::= xx_class_methods_definition * xx_class_method_definition
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                 BRACKET_CLOSE reduce 18
                       COMMENT shift  351
                        PUBLIC shift  19
                     PROTECTED shift  376
    xx_class_method_definition shift  18

State 434:
          xx_class_def ::= CLASS IDENTIFIER EXTENDS * IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= CLASS IDENTIFIER EXTENDS * IDENTIFIER BRACKET_OPEN BRACKET_CLOSE

                    IDENTIFIER shift  435

State 435:
          xx_class_def ::= CLASS IDENTIFIER EXTENDS IDENTIFIER * BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= CLASS IDENTIFIER EXTENDS IDENTIFIER * BRACKET_OPEN BRACKET_CLOSE

                  BRACKET_OPEN shift  436

State 436:
          xx_class_def ::= CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN * xx_class_definition BRACKET_CLOSE
          xx_class_def ::= CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN * BRACKET_CLOSE
          xx_class_definition ::= * xx_class_properties_definition
          xx_class_definition ::= * xx_class_consts_definition
          xx_class_definition ::= * xx_class_methods_definition
          xx_class_definition ::= * xx_class_properties_definition xx_class_methods_definition
          xx_class_definition ::= * xx_class_properties_definition xx_class_consts_definition
          xx_class_definition ::= * xx_class_consts_definition xx_class_properties_definition
          xx_class_definition ::= * xx_class_consts_definition xx_class_methods_definition
          xx_class_definition ::= * xx_class_properties_definition xx_class_consts_definition xx_class_methods_definition
          xx_class_definition ::= * xx_class_consts_definition xx_class_properties_definition xx_class_methods_definition
          xx_class_properties_definition ::= * xx_class_properties_definition xx_class_property_definition
          xx_class_properties_definition ::= * xx_class_property_definition
          xx_class_property_definition ::= * COMMENT PUBLIC IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PUBLIC IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PUBLIC IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * COMMENT PUBLIC IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * PROTECTED IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * COMMENT PROTECTED IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PROTECTED IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * COMMENT PROTECTED IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_consts_definition ::= * xx_class_consts_definition xx_class_const_definition
          xx_class_consts_definition ::= * xx_class_const_definition
          xx_class_methods_definition ::= * xx_class_methods_definition xx_class_method_definition
          xx_class_methods_definition ::= * xx_class_method_definition
          xx_class_const_definition ::= * COMMENT CONST IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_const_definition ::= * CONST IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                 BRACKET_CLOSE shift  439
                       COMMENT shift  401
                        PUBLIC shift  414
                     PROTECTED shift  420
                         CONST shift  395
           xx_class_definition shift  437
xx_class_properties_definition shift  16
    xx_class_consts_definition shift  427
   xx_class_methods_definition shift  433
  xx_class_property_definition shift  432
     xx_class_const_definition shift  426
    xx_class_method_definition shift  388

State 437:
          xx_class_def ::= CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN xx_class_definition * BRACKET_CLOSE

                 BRACKET_CLOSE shift  438

State 438:
      (9) xx_class_def ::= CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE *

                     {default} reduce 9

State 439:
     (13) xx_class_def ::= CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 13

State 440:
          xx_class_def ::= ABSTRACT * CLASS IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= ABSTRACT * CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= ABSTRACT * CLASS IDENTIFIER BRACKET_OPEN BRACKET_CLOSE
          xx_class_def ::= ABSTRACT * CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN BRACKET_CLOSE

                         CLASS shift  441

State 441:
          xx_class_def ::= ABSTRACT CLASS * IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= ABSTRACT CLASS * IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= ABSTRACT CLASS * IDENTIFIER BRACKET_OPEN BRACKET_CLOSE
          xx_class_def ::= ABSTRACT CLASS * IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN BRACKET_CLOSE

                    IDENTIFIER shift  442

State 442:
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER * BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER * EXTENDS IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER * BRACKET_OPEN BRACKET_CLOSE
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER * EXTENDS IDENTIFIER BRACKET_OPEN BRACKET_CLOSE

                  BRACKET_OPEN shift  443
                       EXTENDS shift  447

State 443:
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER BRACKET_OPEN * xx_class_definition BRACKET_CLOSE
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER BRACKET_OPEN * BRACKET_CLOSE
          xx_class_definition ::= * xx_class_properties_definition
          xx_class_definition ::= * xx_class_consts_definition
          xx_class_definition ::= * xx_class_methods_definition
          xx_class_definition ::= * xx_class_properties_definition xx_class_methods_definition
          xx_class_definition ::= * xx_class_properties_definition xx_class_consts_definition
          xx_class_definition ::= * xx_class_consts_definition xx_class_properties_definition
          xx_class_definition ::= * xx_class_consts_definition xx_class_methods_definition
          xx_class_definition ::= * xx_class_properties_definition xx_class_consts_definition xx_class_methods_definition
          xx_class_definition ::= * xx_class_consts_definition xx_class_properties_definition xx_class_methods_definition
          xx_class_properties_definition ::= * xx_class_properties_definition xx_class_property_definition
          xx_class_properties_definition ::= * xx_class_property_definition
          xx_class_property_definition ::= * COMMENT PUBLIC IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PUBLIC IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PUBLIC IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * COMMENT PUBLIC IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * PROTECTED IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * COMMENT PROTECTED IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PROTECTED IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * COMMENT PROTECTED IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_consts_definition ::= * xx_class_consts_definition xx_class_const_definition
          xx_class_consts_definition ::= * xx_class_const_definition
          xx_class_methods_definition ::= * xx_class_methods_definition xx_class_method_definition
          xx_class_methods_definition ::= * xx_class_method_definition
          xx_class_const_definition ::= * COMMENT CONST IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_const_definition ::= * CONST IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                 BRACKET_CLOSE shift  446
                       COMMENT shift  401
                        PUBLIC shift  414
                     PROTECTED shift  420
                         CONST shift  395
           xx_class_definition shift  444
xx_class_properties_definition shift  16
    xx_class_consts_definition shift  427
   xx_class_methods_definition shift  433
  xx_class_property_definition shift  432
     xx_class_const_definition shift  426
    xx_class_method_definition shift  388

State 444:
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER BRACKET_OPEN xx_class_definition * BRACKET_CLOSE

                 BRACKET_CLOSE shift  445

State 445:
     (10) xx_class_def ::= ABSTRACT CLASS IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE *

                     {default} reduce 10

State 446:
     (14) xx_class_def ::= ABSTRACT CLASS IDENTIFIER BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 14

State 447:
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER EXTENDS * IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER EXTENDS * IDENTIFIER BRACKET_OPEN BRACKET_CLOSE

                    IDENTIFIER shift  448

State 448:
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER EXTENDS IDENTIFIER * BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER EXTENDS IDENTIFIER * BRACKET_OPEN BRACKET_CLOSE

                  BRACKET_OPEN shift  449

State 449:
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN * xx_class_definition BRACKET_CLOSE
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN * BRACKET_CLOSE
          xx_class_definition ::= * xx_class_properties_definition
          xx_class_definition ::= * xx_class_consts_definition
          xx_class_definition ::= * xx_class_methods_definition
          xx_class_definition ::= * xx_class_properties_definition xx_class_methods_definition
          xx_class_definition ::= * xx_class_properties_definition xx_class_consts_definition
          xx_class_definition ::= * xx_class_consts_definition xx_class_properties_definition
          xx_class_definition ::= * xx_class_consts_definition xx_class_methods_definition
          xx_class_definition ::= * xx_class_properties_definition xx_class_consts_definition xx_class_methods_definition
          xx_class_definition ::= * xx_class_consts_definition xx_class_properties_definition xx_class_methods_definition
          xx_class_properties_definition ::= * xx_class_properties_definition xx_class_property_definition
          xx_class_properties_definition ::= * xx_class_property_definition
          xx_class_property_definition ::= * COMMENT PUBLIC IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PUBLIC IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PUBLIC IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * COMMENT PUBLIC IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * PROTECTED IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * COMMENT PROTECTED IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PROTECTED IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * COMMENT PROTECTED IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_consts_definition ::= * xx_class_consts_definition xx_class_const_definition
          xx_class_consts_definition ::= * xx_class_const_definition
          xx_class_methods_definition ::= * xx_class_methods_definition xx_class_method_definition
          xx_class_methods_definition ::= * xx_class_method_definition
          xx_class_const_definition ::= * COMMENT CONST IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_const_definition ::= * CONST IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                 BRACKET_CLOSE shift  452
                       COMMENT shift  401
                        PUBLIC shift  414
                     PROTECTED shift  420
                         CONST shift  395
           xx_class_definition shift  450
xx_class_properties_definition shift  16
    xx_class_consts_definition shift  427
   xx_class_methods_definition shift  433
  xx_class_property_definition shift  432
     xx_class_const_definition shift  426
    xx_class_method_definition shift  388

State 450:
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN xx_class_definition * BRACKET_CLOSE

                 BRACKET_CLOSE shift  451

State 451:
     (11) xx_class_def ::= ABSTRACT CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE *

                     {default} reduce 11

State 452:
     (15) xx_class_def ::= ABSTRACT CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 15

State 453:
      (3) xx_top_statement_list ::= xx_top_statement *

                     {default} reduce 3

