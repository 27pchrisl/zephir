 State 0:
          program ::= * xx_language
          xx_language ::= * xx_top_statement_list
          xx_top_statement_list ::= * xx_top_statement_list xx_top_statement
          xx_top_statement_list ::= * xx_top_statement
          xx_top_statement ::= * xx_namespace_def
          xx_top_statement ::= * xx_class_def
          xx_top_statement ::= * xx_comment
          xx_namespace_def ::= * NAMESPACE IDENTIFIER DOTCOMMA
          xx_class_def ::= * CLASS IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= * CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= * ABSTRACT CLASS IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= * ABSTRACT CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= * CLASS IDENTIFIER BRACKET_OPEN BRACKET_CLOSE
          xx_class_def ::= * CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN BRACKET_CLOSE
          xx_class_def ::= * ABSTRACT CLASS IDENTIFIER BRACKET_OPEN BRACKET_CLOSE
          xx_class_def ::= * ABSTRACT CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN BRACKET_CLOSE
          xx_comment ::= * COMMENT

                     NAMESPACE shift  7
                         CLASS shift  10
                      ABSTRACT shift  408
                       COMMENT shift  234
                       program accept
                   xx_language shift  1
         xx_top_statement_list shift  2
              xx_top_statement shift  421
              xx_namespace_def shift  4
                  xx_class_def shift  5
                    xx_comment shift  6

State 1:
      (0) program ::= xx_language *

                             $ reduce 0

State 2:
      (1) xx_language ::= xx_top_statement_list *
          xx_top_statement_list ::= xx_top_statement_list * xx_top_statement
          xx_top_statement ::= * xx_namespace_def
          xx_top_statement ::= * xx_class_def
          xx_top_statement ::= * xx_comment
          xx_namespace_def ::= * NAMESPACE IDENTIFIER DOTCOMMA
          xx_class_def ::= * CLASS IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= * CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= * ABSTRACT CLASS IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= * ABSTRACT CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= * CLASS IDENTIFIER BRACKET_OPEN BRACKET_CLOSE
          xx_class_def ::= * CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN BRACKET_CLOSE
          xx_class_def ::= * ABSTRACT CLASS IDENTIFIER BRACKET_OPEN BRACKET_CLOSE
          xx_class_def ::= * ABSTRACT CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN BRACKET_CLOSE
          xx_comment ::= * COMMENT

                             $ reduce 1
                     NAMESPACE shift  7
                         CLASS shift  10
                      ABSTRACT shift  408
                       COMMENT shift  234
              xx_top_statement shift  3
              xx_namespace_def shift  4
                  xx_class_def shift  5
                    xx_comment shift  6

State 3:
      (2) xx_top_statement_list ::= xx_top_statement_list xx_top_statement *

                     {default} reduce 2

State 4:
      (4) xx_top_statement ::= xx_namespace_def *

                     {default} reduce 4

State 5:
      (5) xx_top_statement ::= xx_class_def *

                     {default} reduce 5

State 6:
      (6) xx_top_statement ::= xx_comment *

                     {default} reduce 6

State 7:
          xx_namespace_def ::= NAMESPACE * IDENTIFIER DOTCOMMA

                    IDENTIFIER shift  8

State 8:
          xx_namespace_def ::= NAMESPACE IDENTIFIER * DOTCOMMA

                      DOTCOMMA shift  9

State 9:
      (7) xx_namespace_def ::= NAMESPACE IDENTIFIER DOTCOMMA *

                     {default} reduce 7

State 10:
          xx_class_def ::= CLASS * IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= CLASS * IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= CLASS * IDENTIFIER BRACKET_OPEN BRACKET_CLOSE
          xx_class_def ::= CLASS * IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN BRACKET_CLOSE

                    IDENTIFIER shift  11

State 11:
          xx_class_def ::= CLASS IDENTIFIER * BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= CLASS IDENTIFIER * EXTENDS IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= CLASS IDENTIFIER * BRACKET_OPEN BRACKET_CLOSE
          xx_class_def ::= CLASS IDENTIFIER * EXTENDS IDENTIFIER BRACKET_OPEN BRACKET_CLOSE

                  BRACKET_OPEN shift  12
                       EXTENDS shift  402

State 12:
          xx_class_def ::= CLASS IDENTIFIER BRACKET_OPEN * xx_class_definition BRACKET_CLOSE
          xx_class_def ::= CLASS IDENTIFIER BRACKET_OPEN * BRACKET_CLOSE
          xx_class_definition ::= * xx_class_properties_definition
          xx_class_definition ::= * xx_class_consts_definition
          xx_class_definition ::= * xx_class_methods_definition
          xx_class_definition ::= * xx_class_properties_definition xx_class_methods_definition
          xx_class_definition ::= * xx_class_properties_definition xx_class_consts_definition
          xx_class_definition ::= * xx_class_consts_definition xx_class_properties_definition
          xx_class_definition ::= * xx_class_consts_definition xx_class_methods_definition
          xx_class_definition ::= * xx_class_properties_definition xx_class_consts_definition xx_class_methods_definition
          xx_class_definition ::= * xx_class_consts_definition xx_class_properties_definition xx_class_methods_definition
          xx_class_properties_definition ::= * xx_class_properties_definition xx_class_property_definition
          xx_class_properties_definition ::= * xx_class_property_definition
          xx_class_property_definition ::= * COMMENT PUBLIC IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PUBLIC IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PUBLIC IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * COMMENT PUBLIC IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * PROTECTED IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * COMMENT PROTECTED IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PROTECTED IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * COMMENT PROTECTED IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_consts_definition ::= * xx_class_consts_definition xx_class_const_definition
          xx_class_consts_definition ::= * xx_class_const_definition
          xx_class_methods_definition ::= * xx_class_methods_definition xx_class_method_definition
          xx_class_const_definition ::= * COMMENT CONST IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_const_definition ::= * CONST IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_methods_definition ::= * xx_class_method_definition
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                 BRACKET_CLOSE shift  15
                       COMMENT shift  369
                        PUBLIC shift  382
                     PROTECTED shift  388
                         CONST shift  362
           xx_class_definition shift  13
xx_class_properties_definition shift  16
    xx_class_consts_definition shift  395
   xx_class_methods_definition shift  401
  xx_class_property_definition shift  400
     xx_class_const_definition shift  394
    xx_class_method_definition shift  367

State 13:
          xx_class_def ::= CLASS IDENTIFIER BRACKET_OPEN xx_class_definition * BRACKET_CLOSE

                 BRACKET_CLOSE shift  14

State 14:
      (8) xx_class_def ::= CLASS IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE *

                     {default} reduce 8

State 15:
     (12) xx_class_def ::= CLASS IDENTIFIER BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 12

State 16:
     (16) xx_class_definition ::= xx_class_properties_definition *
          xx_class_definition ::= xx_class_properties_definition * xx_class_methods_definition
          xx_class_definition ::= xx_class_properties_definition * xx_class_consts_definition
          xx_class_definition ::= xx_class_properties_definition * xx_class_consts_definition xx_class_methods_definition
          xx_class_properties_definition ::= xx_class_properties_definition * xx_class_property_definition
          xx_class_property_definition ::= * COMMENT PUBLIC IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PUBLIC IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PUBLIC IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * COMMENT PUBLIC IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * PROTECTED IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * COMMENT PROTECTED IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PROTECTED IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * COMMENT PROTECTED IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_consts_definition ::= * xx_class_consts_definition xx_class_const_definition
          xx_class_consts_definition ::= * xx_class_const_definition
          xx_class_methods_definition ::= * xx_class_methods_definition xx_class_method_definition
          xx_class_const_definition ::= * COMMENT CONST IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_const_definition ::= * CONST IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_methods_definition ::= * xx_class_method_definition
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                 BRACKET_CLOSE reduce 16
                       COMMENT shift  369
                        PUBLIC shift  382
                     PROTECTED shift  388
                         CONST shift  362
    xx_class_consts_definition shift  353
   xx_class_methods_definition shift  17
  xx_class_property_definition shift  368
     xx_class_const_definition shift  394
    xx_class_method_definition shift  367

State 17:
     (19) xx_class_definition ::= xx_class_properties_definition xx_class_methods_definition *
          xx_class_methods_definition ::= xx_class_methods_definition * xx_class_method_definition
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                 BRACKET_CLOSE reduce 19
                       COMMENT shift  319
                        PUBLIC shift  19
                     PROTECTED shift  344
    xx_class_method_definition shift  18

State 18:
     (37) xx_class_methods_definition ::= xx_class_methods_definition xx_class_method_definition *

                     {default} reduce 37

State 19:
          xx_class_method_definition ::= PUBLIC * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                      FUNCTION shift  20

State 20:
          xx_class_method_definition ::= PUBLIC FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                    IDENTIFIER shift  21

State 21:
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE

              PARENTHESES_OPEN shift  22

State 22:
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_parameter_list ::= * xx_parameter_list COMMA xx_parameter
          xx_parameter_list ::= * xx_parameter
          xx_parameter ::= * IDENTIFIER
          xx_parameter ::= * xx_parameter_type IDENTIFIER
          xx_parameter ::= * xx_parameter_cast IDENTIFIER
          xx_parameter ::= * IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_type IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_cast IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY

                          LESS shift  306
                    IDENTIFIER shift  295
             PARENTHESES_CLOSE shift  23
                  TYPE_INTEGER shift  309
                   TYPE_DOUBLE shift  310
                     TYPE_BOOL shift  311
                   TYPE_STRING shift  312
                    TYPE_ARRAY shift  313
             xx_parameter_list shift  315
                  xx_parameter shift  314
             xx_parameter_type shift  298
             xx_parameter_cast shift  302

State 23:
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_parameter_list ::= * xx_parameter_list COMMA xx_parameter
          xx_parameter_list ::= * xx_parameter
          xx_parameter ::= * IDENTIFIER
          xx_parameter ::= * xx_parameter_type IDENTIFIER
          xx_parameter ::= * xx_parameter_cast IDENTIFIER
          xx_parameter ::= * IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_type IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_cast IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY

                          LESS shift  306
                    IDENTIFIER shift  295
                  BRACKET_OPEN shift  24
                  TYPE_INTEGER shift  309
                   TYPE_DOUBLE shift  310
                     TYPE_BOOL shift  311
                   TYPE_STRING shift  312
                    TYPE_ARRAY shift  313
             xx_parameter_list shift  289
                  xx_parameter shift  314
             xx_parameter_type shift  298
             xx_parameter_cast shift  302

State 24:
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN * BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_return_statement ::= * RETURN xx_literal_expr DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_comment ::= * COMMENT

                 BRACKET_CLOSE shift  25
                       COMMENT shift  234
                  TYPE_INTEGER shift  213
                   TYPE_DOUBLE shift  222
                     TYPE_BOOL shift  228
                   TYPE_STRING shift  225
                         BREAK shift  42
                      CONTINUE shift  44
                            IF shift  46
                          LOOP shift  55
                         WHILE shift  59
                           FOR shift  64
                           LET shift  71
                          ECHO shift  167
                        RETURN shift  175
                         UNSET shift  189
                         THROW shift  204
                      TYPE_VAR shift  231
                    xx_comment shift  41
             xx_statement_list shift  26
                  xx_statement shift  235
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_unset_statement shift  34
            xx_throw_statement shift  35
          xx_declare_statement shift  36
            xx_break_statement shift  37
         xx_continue_statement shift  38
            xx_while_statement shift  39
              xx_for_statement shift  40

State 25:
     (41) xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 41

State 26:
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_return_statement ::= * RETURN xx_literal_expr DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_comment ::= * COMMENT

                 BRACKET_CLOSE shift  27
                       COMMENT shift  234
                  TYPE_INTEGER shift  213
                   TYPE_DOUBLE shift  222
                     TYPE_BOOL shift  228
                   TYPE_STRING shift  225
                         BREAK shift  42
                      CONTINUE shift  44
                            IF shift  46
                          LOOP shift  55
                         WHILE shift  59
                           FOR shift  64
                           LET shift  71
                          ECHO shift  167
                        RETURN shift  175
                         UNSET shift  189
                         THROW shift  204
                      TYPE_VAR shift  231
                    xx_comment shift  41
                  xx_statement shift  28
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_unset_statement shift  34
            xx_throw_statement shift  35
          xx_declare_statement shift  36
            xx_break_statement shift  37
         xx_continue_statement shift  38
            xx_while_statement shift  39
              xx_for_statement shift  40

State 27:
     (45) xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 45

State 28:
     (67) xx_statement_list ::= xx_statement_list xx_statement *

                     {default} reduce 67

State 29:
     (69) xx_statement ::= xx_let_statement *

                     {default} reduce 69

State 30:
     (70) xx_statement ::= xx_if_statement *

                     {default} reduce 70

State 31:
     (71) xx_statement ::= xx_loop_statement *

                     {default} reduce 71

State 32:
     (72) xx_statement ::= xx_echo_statement *

                     {default} reduce 72

State 33:
     (73) xx_statement ::= xx_return_statement *

                     {default} reduce 73

State 34:
     (74) xx_statement ::= xx_unset_statement *

                     {default} reduce 74

State 35:
     (75) xx_statement ::= xx_throw_statement *

                     {default} reduce 75

State 36:
     (76) xx_statement ::= xx_declare_statement *

                     {default} reduce 76

State 37:
     (77) xx_statement ::= xx_break_statement *

                     {default} reduce 77

State 38:
     (78) xx_statement ::= xx_continue_statement *

                     {default} reduce 78

State 39:
     (79) xx_statement ::= xx_while_statement *

                     {default} reduce 79

State 40:
     (80) xx_statement ::= xx_for_statement *

                     {default} reduce 80

State 41:
     (81) xx_statement ::= xx_comment *

                     {default} reduce 81

State 42:
          xx_break_statement ::= BREAK * DOTCOMMA

                      DOTCOMMA shift  43

State 43:
     (82) xx_break_statement ::= BREAK DOTCOMMA *

                     {default} reduce 82

State 44:
          xx_continue_statement ::= CONTINUE * DOTCOMMA

                      DOTCOMMA shift  45

State 45:
     (83) xx_continue_statement ::= CONTINUE DOTCOMMA *

                     {default} reduce 83

State 46:
          xx_if_statement ::= IF * xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF * xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF * xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF * xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF * xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF * xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_eval_expr ::= * xx_literal_expr
          xx_eval_expr ::= * NOT xx_eval_expr
          xx_eval_expr ::= * TYPEOF xx_eval_expr
          xx_eval_expr ::= * ISSET xx_isset_expr
          xx_eval_expr ::= * xx_eval_expr TYPEOF xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr EQUALS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr NOTEQUALS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr IDENTICAL xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr NOTIDENTICAL xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr LESS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr GREATER xx_eval_expr
          xx_eval_expr ::= * PARENTHESES_OPEN xx_eval_expr PARENTHESES_CLOSE
          xx_eval_expr ::= * IDENTIFIER
          xx_eval_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_eval_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                        TYPEOF shift  241
                           NOT shift  238
                    IDENTIFIER shift  266
              PARENTHESES_OPEN shift  263
                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
                         ISSET shift  244
               xx_literal_expr shift  237
                  xx_eval_expr shift  47

State 47:
          xx_if_statement ::= IF xx_eval_expr * BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr * BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr * BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_eval_expr ::= xx_eval_expr * TYPEOF xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * EQUALS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * NOTEQUALS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * IDENTICAL xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * NOTIDENTICAL xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * LESS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * GREATER xx_eval_expr

                        EQUALS shift  240
                     IDENTICAL shift  255
                          LESS shift  259
                       GREATER shift  261
                  NOTIDENTICAL shift  257
                     NOTEQUALS shift  243
                        TYPEOF shift  236
                  BRACKET_OPEN shift  48

State 48:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN * BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN * BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN * BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_return_statement ::= * RETURN xx_literal_expr DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_comment ::= * COMMENT

                 BRACKET_CLOSE shift  283
                       COMMENT shift  234
                  TYPE_INTEGER shift  213
                   TYPE_DOUBLE shift  222
                     TYPE_BOOL shift  228
                   TYPE_STRING shift  225
                         BREAK shift  42
                      CONTINUE shift  44
                            IF shift  46
                          LOOP shift  55
                         WHILE shift  59
                           FOR shift  64
                           LET shift  71
                          ECHO shift  167
                        RETURN shift  175
                         UNSET shift  189
                         THROW shift  204
                      TYPE_VAR shift  231
                    xx_comment shift  41
             xx_statement_list shift  49
                  xx_statement shift  235
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_unset_statement shift  34
            xx_throw_statement shift  35
          xx_declare_statement shift  36
            xx_break_statement shift  37
         xx_continue_statement shift  38
            xx_while_statement shift  39
              xx_for_statement shift  40

State 49:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_return_statement ::= * RETURN xx_literal_expr DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_comment ::= * COMMENT

                 BRACKET_CLOSE shift  50
                       COMMENT shift  234
                  TYPE_INTEGER shift  213
                   TYPE_DOUBLE shift  222
                     TYPE_BOOL shift  228
                   TYPE_STRING shift  225
                         BREAK shift  42
                      CONTINUE shift  44
                            IF shift  46
                          LOOP shift  55
                         WHILE shift  59
                           FOR shift  64
                           LET shift  71
                          ECHO shift  167
                        RETURN shift  175
                         UNSET shift  189
                         THROW shift  204
                      TYPE_VAR shift  231
                    xx_comment shift  41
                  xx_statement shift  28
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_unset_statement shift  34
            xx_throw_statement shift  35
          xx_declare_statement shift  36
            xx_break_statement shift  37
         xx_continue_statement shift  38
            xx_while_statement shift  39
              xx_for_statement shift  40

State 50:
     (86) xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE *
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE * ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE * ELSE BRACKET_OPEN BRACKET_CLOSE

                          ELSE shift  51
                     {default} reduce 86

State 51:
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE * BRACKET_OPEN BRACKET_CLOSE

                  BRACKET_OPEN shift  52

State 52:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN * BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_return_statement ::= * RETURN xx_literal_expr DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_comment ::= * COMMENT

                 BRACKET_CLOSE shift  282
                       COMMENT shift  234
                  TYPE_INTEGER shift  213
                   TYPE_DOUBLE shift  222
                     TYPE_BOOL shift  228
                   TYPE_STRING shift  225
                         BREAK shift  42
                      CONTINUE shift  44
                            IF shift  46
                          LOOP shift  55
                         WHILE shift  59
                           FOR shift  64
                           LET shift  71
                          ECHO shift  167
                        RETURN shift  175
                         UNSET shift  189
                         THROW shift  204
                      TYPE_VAR shift  231
                    xx_comment shift  41
             xx_statement_list shift  53
                  xx_statement shift  235
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_unset_statement shift  34
            xx_throw_statement shift  35
          xx_declare_statement shift  36
            xx_break_statement shift  37
         xx_continue_statement shift  38
            xx_while_statement shift  39
              xx_for_statement shift  40

State 53:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_return_statement ::= * RETURN xx_literal_expr DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_comment ::= * COMMENT

                 BRACKET_CLOSE shift  54
                       COMMENT shift  234
                  TYPE_INTEGER shift  213
                   TYPE_DOUBLE shift  222
                     TYPE_BOOL shift  228
                   TYPE_STRING shift  225
                         BREAK shift  42
                      CONTINUE shift  44
                            IF shift  46
                          LOOP shift  55
                         WHILE shift  59
                           FOR shift  64
                           LET shift  71
                          ECHO shift  167
                        RETURN shift  175
                         UNSET shift  189
                         THROW shift  204
                      TYPE_VAR shift  231
                    xx_comment shift  41
                  xx_statement shift  28
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_unset_statement shift  34
            xx_throw_statement shift  35
          xx_declare_statement shift  36
            xx_break_statement shift  37
         xx_continue_statement shift  38
            xx_while_statement shift  39
              xx_for_statement shift  40

State 54:
     (87) xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 87

State 55:
          xx_loop_statement ::= LOOP * BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= LOOP * BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  56

State 56:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= LOOP BRACKET_OPEN * BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= LOOP BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_return_statement ::= * RETURN xx_literal_expr DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_comment ::= * COMMENT

                 BRACKET_CLOSE shift  281
                       COMMENT shift  234
                  TYPE_INTEGER shift  213
                   TYPE_DOUBLE shift  222
                     TYPE_BOOL shift  228
                   TYPE_STRING shift  225
                         BREAK shift  42
                      CONTINUE shift  44
                            IF shift  46
                          LOOP shift  55
                         WHILE shift  59
                           FOR shift  64
                           LET shift  71
                          ECHO shift  167
                        RETURN shift  175
                         UNSET shift  189
                         THROW shift  204
                      TYPE_VAR shift  231
                    xx_comment shift  41
             xx_statement_list shift  57
                  xx_statement shift  235
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_unset_statement shift  34
            xx_throw_statement shift  35
          xx_declare_statement shift  36
            xx_break_statement shift  37
         xx_continue_statement shift  38
            xx_while_statement shift  39
              xx_for_statement shift  40

State 57:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= LOOP BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_return_statement ::= * RETURN xx_literal_expr DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_comment ::= * COMMENT

                 BRACKET_CLOSE shift  58
                       COMMENT shift  234
                  TYPE_INTEGER shift  213
                   TYPE_DOUBLE shift  222
                     TYPE_BOOL shift  228
                   TYPE_STRING shift  225
                         BREAK shift  42
                      CONTINUE shift  44
                            IF shift  46
                          LOOP shift  55
                         WHILE shift  59
                           FOR shift  64
                           LET shift  71
                          ECHO shift  167
                        RETURN shift  175
                         UNSET shift  189
                         THROW shift  204
                      TYPE_VAR shift  231
                    xx_comment shift  41
                  xx_statement shift  28
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_unset_statement shift  34
            xx_throw_statement shift  35
          xx_declare_statement shift  36
            xx_break_statement shift  37
         xx_continue_statement shift  38
            xx_while_statement shift  39
              xx_for_statement shift  40

State 58:
     (91) xx_loop_statement ::= LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 91

State 59:
          xx_while_statement ::= WHILE * xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= WHILE * xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_eval_expr ::= * xx_literal_expr
          xx_eval_expr ::= * NOT xx_eval_expr
          xx_eval_expr ::= * TYPEOF xx_eval_expr
          xx_eval_expr ::= * ISSET xx_isset_expr
          xx_eval_expr ::= * xx_eval_expr TYPEOF xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr EQUALS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr NOTEQUALS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr IDENTICAL xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr NOTIDENTICAL xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr LESS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr GREATER xx_eval_expr
          xx_eval_expr ::= * PARENTHESES_OPEN xx_eval_expr PARENTHESES_CLOSE
          xx_eval_expr ::= * IDENTIFIER
          xx_eval_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_eval_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                        TYPEOF shift  241
                           NOT shift  238
                    IDENTIFIER shift  266
              PARENTHESES_OPEN shift  263
                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
                         ISSET shift  244
               xx_literal_expr shift  237
                  xx_eval_expr shift  60

State 60:
          xx_while_statement ::= WHILE xx_eval_expr * BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= WHILE xx_eval_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_eval_expr ::= xx_eval_expr * TYPEOF xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * EQUALS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * NOTEQUALS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * IDENTICAL xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * NOTIDENTICAL xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * LESS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * GREATER xx_eval_expr

                        EQUALS shift  240
                     IDENTICAL shift  255
                          LESS shift  259
                       GREATER shift  261
                  NOTIDENTICAL shift  257
                     NOTEQUALS shift  243
                        TYPEOF shift  236
                  BRACKET_OPEN shift  61

State 61:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= WHILE xx_eval_expr BRACKET_OPEN * BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= WHILE xx_eval_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_return_statement ::= * RETURN xx_literal_expr DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_comment ::= * COMMENT

                 BRACKET_CLOSE shift  280
                       COMMENT shift  234
                  TYPE_INTEGER shift  213
                   TYPE_DOUBLE shift  222
                     TYPE_BOOL shift  228
                   TYPE_STRING shift  225
                         BREAK shift  42
                      CONTINUE shift  44
                            IF shift  46
                          LOOP shift  55
                         WHILE shift  59
                           FOR shift  64
                           LET shift  71
                          ECHO shift  167
                        RETURN shift  175
                         UNSET shift  189
                         THROW shift  204
                      TYPE_VAR shift  231
                    xx_comment shift  41
             xx_statement_list shift  62
                  xx_statement shift  235
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_unset_statement shift  34
            xx_throw_statement shift  35
          xx_declare_statement shift  36
            xx_break_statement shift  37
         xx_continue_statement shift  38
            xx_while_statement shift  39
              xx_for_statement shift  40

State 62:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= WHILE xx_eval_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_return_statement ::= * RETURN xx_literal_expr DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_comment ::= * COMMENT

                 BRACKET_CLOSE shift  63
                       COMMENT shift  234
                  TYPE_INTEGER shift  213
                   TYPE_DOUBLE shift  222
                     TYPE_BOOL shift  228
                   TYPE_STRING shift  225
                         BREAK shift  42
                      CONTINUE shift  44
                            IF shift  46
                          LOOP shift  55
                         WHILE shift  59
                           FOR shift  64
                           LET shift  71
                          ECHO shift  167
                        RETURN shift  175
                         UNSET shift  189
                         THROW shift  204
                      TYPE_VAR shift  231
                    xx_comment shift  41
                  xx_statement shift  28
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_unset_statement shift  34
            xx_throw_statement shift  35
          xx_declare_statement shift  36
            xx_break_statement shift  37
         xx_continue_statement shift  38
            xx_while_statement shift  39
              xx_for_statement shift  40

State 63:
     (93) xx_while_statement ::= WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 93

State 64:
          xx_for_statement ::= FOR * IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR * IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                    IDENTIFIER shift  65

State 65:
          xx_for_statement ::= FOR IDENTIFIER * IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER * COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                         COMMA shift  273
                            IN shift  66

State 66:
          xx_for_statement ::= FOR IDENTIFIER IN * xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_eval_expr ::= * xx_literal_expr
          xx_eval_expr ::= * NOT xx_eval_expr
          xx_eval_expr ::= * TYPEOF xx_eval_expr
          xx_eval_expr ::= * ISSET xx_isset_expr
          xx_eval_expr ::= * xx_eval_expr TYPEOF xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr EQUALS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr NOTEQUALS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr IDENTICAL xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr NOTIDENTICAL xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr LESS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr GREATER xx_eval_expr
          xx_eval_expr ::= * PARENTHESES_OPEN xx_eval_expr PARENTHESES_CLOSE
          xx_eval_expr ::= * IDENTIFIER
          xx_eval_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_eval_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                        TYPEOF shift  241
                           NOT shift  238
                    IDENTIFIER shift  266
              PARENTHESES_OPEN shift  263
                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
                         ISSET shift  244
               xx_literal_expr shift  237
                  xx_eval_expr shift  67

State 67:
          xx_for_statement ::= FOR IDENTIFIER IN xx_eval_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_eval_expr ::= xx_eval_expr * TYPEOF xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * EQUALS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * NOTEQUALS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * IDENTICAL xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * NOTIDENTICAL xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * LESS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * GREATER xx_eval_expr

                        EQUALS shift  240
                     IDENTICAL shift  255
                          LESS shift  259
                       GREATER shift  261
                  NOTIDENTICAL shift  257
                     NOTEQUALS shift  243
                        TYPEOF shift  236
                  BRACKET_OPEN shift  68

State 68:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER IN xx_eval_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_return_statement ::= * RETURN xx_literal_expr DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_comment ::= * COMMENT

                       COMMENT shift  234
                  TYPE_INTEGER shift  213
                   TYPE_DOUBLE shift  222
                     TYPE_BOOL shift  228
                   TYPE_STRING shift  225
                         BREAK shift  42
                      CONTINUE shift  44
                            IF shift  46
                          LOOP shift  55
                         WHILE shift  59
                           FOR shift  64
                           LET shift  71
                          ECHO shift  167
                        RETURN shift  175
                         UNSET shift  189
                         THROW shift  204
                      TYPE_VAR shift  231
                    xx_comment shift  41
             xx_statement_list shift  69
                  xx_statement shift  235
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_unset_statement shift  34
            xx_throw_statement shift  35
          xx_declare_statement shift  36
            xx_break_statement shift  37
         xx_continue_statement shift  38
            xx_while_statement shift  39
              xx_for_statement shift  40

State 69:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_return_statement ::= * RETURN xx_literal_expr DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_comment ::= * COMMENT

                 BRACKET_CLOSE shift  70
                       COMMENT shift  234
                  TYPE_INTEGER shift  213
                   TYPE_DOUBLE shift  222
                     TYPE_BOOL shift  228
                   TYPE_STRING shift  225
                         BREAK shift  42
                      CONTINUE shift  44
                            IF shift  46
                          LOOP shift  55
                         WHILE shift  59
                           FOR shift  64
                           LET shift  71
                          ECHO shift  167
                        RETURN shift  175
                         UNSET shift  189
                         THROW shift  204
                      TYPE_VAR shift  231
                    xx_comment shift  41
                  xx_statement shift  28
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_unset_statement shift  34
            xx_throw_statement shift  35
          xx_declare_statement shift  36
            xx_break_statement shift  37
         xx_continue_statement shift  38
            xx_while_statement shift  39
              xx_for_statement shift  40

State 70:
     (94) xx_for_statement ::= FOR IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 94

State 71:
          xx_let_statement ::= LET * xx_let_assignments DOTCOMMA
          xx_let_assignments ::= * xx_let_assignments COMMA xx_let_assignment
          xx_let_assignments ::= * xx_let_assignment
          xx_let_assignment ::= * IDENTIFIER ASSIGN xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW IDENTIFIER ASSIGN xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE ASSIGN xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE ASSIGN xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE ASSIGN xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER INCR
          xx_let_assignment ::= * IDENTIFIER DECR

                    IDENTIFIER shift  76
            xx_let_assignments shift  72
             xx_let_assignment shift  166

State 72:
          xx_let_statement ::= LET xx_let_assignments * DOTCOMMA
          xx_let_assignments ::= xx_let_assignments * COMMA xx_let_assignment

                         COMMA shift  74
                      DOTCOMMA shift  73

State 73:
     (96) xx_let_statement ::= LET xx_let_assignments DOTCOMMA *

                     {default} reduce 96

State 74:
          xx_let_assignments ::= xx_let_assignments COMMA * xx_let_assignment
          xx_let_assignment ::= * IDENTIFIER ASSIGN xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW IDENTIFIER ASSIGN xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE ASSIGN xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE ASSIGN xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE ASSIGN xx_assign_expr
          xx_let_assignment ::= * IDENTIFIER INCR
          xx_let_assignment ::= * IDENTIFIER DECR

                    IDENTIFIER shift  76
             xx_let_assignment shift  75

State 75:
     (97) xx_let_assignments ::= xx_let_assignments COMMA xx_let_assignment *

                     {default} reduce 97

State 76:
          xx_let_assignment ::= IDENTIFIER * ASSIGN xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * ARROW IDENTIFIER ASSIGN xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * ARROW IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE ASSIGN xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * SBRACKET_OPEN SBRACKET_CLOSE ASSIGN xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE ASSIGN xx_assign_expr
          xx_let_assignment ::= IDENTIFIER * INCR
          xx_let_assignment ::= IDENTIFIER * DECR

                        ASSIGN shift  77
                         ARROW shift  148
                 SBRACKET_OPEN shift  156
                          INCR shift  164
                          DECR shift  165

State 77:
          xx_let_assignment ::= IDENTIFIER ASSIGN * xx_assign_expr
          xx_assign_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_assign_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_assign_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_assign_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE
          xx_assign_expr ::= * xx_assign_expr ADD xx_assign_expr
          xx_assign_expr ::= * xx_assign_expr SUB xx_assign_expr
          xx_assign_expr ::= * xx_assign_expr CONCAT xx_assign_expr
          xx_assign_expr ::= * xx_assign_expr EQUALS xx_assign_expr
          xx_assign_expr ::= * INSTANCEOF xx_assign_expr
          xx_assign_expr ::= * TYPEOF xx_assign_expr
          xx_assign_expr ::= * IDENTIFIER
          xx_assign_expr ::= * INTEGER
          xx_assign_expr ::= * STRING
          xx_assign_expr ::= * DOUBLE
          xx_assign_expr ::= * NULL
          xx_assign_expr ::= * FALSE
          xx_assign_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_assign_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_assign_expr ::= * NEW IDENTIFIER
          xx_assign_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= * TRUE

                        TYPEOF shift  118
                    INSTANCEOF shift  116
                           NEW shift  141
                    IDENTIFIER shift  80
                 SBRACKET_OPEN shift  125
                       INTEGER shift  120
                        STRING shift  121
                        DOUBLE shift  122
                          NULL shift  123
                         FALSE shift  124
                          TRUE shift  147
                xx_assign_expr shift  78

State 78:
     (99) xx_let_assignment ::= IDENTIFIER ASSIGN xx_assign_expr *
          xx_assign_expr ::= xx_assign_expr * ADD xx_assign_expr
          xx_assign_expr ::= xx_assign_expr * SUB xx_assign_expr
          xx_assign_expr ::= xx_assign_expr * CONCAT xx_assign_expr
          xx_assign_expr ::= xx_assign_expr * EQUALS xx_assign_expr

                        EQUALS shift  114
                           ADD shift  79
                           SUB shift  110
                        CONCAT shift  112
                     {default} reduce 99

State 79:
          xx_assign_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_assign_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_assign_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_assign_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE
          xx_assign_expr ::= * xx_assign_expr ADD xx_assign_expr
          xx_assign_expr ::= xx_assign_expr ADD * xx_assign_expr
          xx_assign_expr ::= * xx_assign_expr SUB xx_assign_expr
          xx_assign_expr ::= * xx_assign_expr CONCAT xx_assign_expr
          xx_assign_expr ::= * xx_assign_expr EQUALS xx_assign_expr
          xx_assign_expr ::= * INSTANCEOF xx_assign_expr
          xx_assign_expr ::= * TYPEOF xx_assign_expr
          xx_assign_expr ::= * IDENTIFIER
          xx_assign_expr ::= * INTEGER
          xx_assign_expr ::= * STRING
          xx_assign_expr ::= * DOUBLE
          xx_assign_expr ::= * NULL
          xx_assign_expr ::= * FALSE
          xx_assign_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_assign_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_assign_expr ::= * NEW IDENTIFIER
          xx_assign_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= * TRUE

                        TYPEOF shift  118
                    INSTANCEOF shift  116
                           NEW shift  141
                    IDENTIFIER shift  80
                 SBRACKET_OPEN shift  125
                       INTEGER shift  120
                        STRING shift  121
                        DOUBLE shift  122
                          NULL shift  123
                         FALSE shift  124
                          TRUE shift  147
                xx_assign_expr shift  109

State 80:
          xx_assign_expr ::= IDENTIFIER * ARROW IDENTIFIER
          xx_assign_expr ::= IDENTIFIER * SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_assign_expr ::= IDENTIFIER * SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_assign_expr ::= IDENTIFIER * SBRACKET_OPEN STRING SBRACKET_CLOSE
    (141) xx_assign_expr ::= IDENTIFIER *
          xx_assign_expr ::= IDENTIFIER * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= IDENTIFIER * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= IDENTIFIER * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  105
                         ARROW shift  81
                 SBRACKET_OPEN shift  98
                     {default} reduce 141

State 81:
          xx_assign_expr ::= IDENTIFIER ARROW * IDENTIFIER
          xx_assign_expr ::= IDENTIFIER ARROW * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= IDENTIFIER ARROW * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                    IDENTIFIER shift  82

State 82:
    (131) xx_assign_expr ::= IDENTIFIER ARROW IDENTIFIER *
          xx_assign_expr ::= IDENTIFIER ARROW IDENTIFIER * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= IDENTIFIER ARROW IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  83
                     {default} reduce 131

State 83:
          xx_assign_expr ::= IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN * xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE
          xx_call_parameters ::= * xx_call_parameters COMMA xx_call_parameter
          xx_call_parameters ::= * xx_call_parameter
          xx_call_parameter ::= * xx_literal_expr
          xx_call_parameter ::= * IDENTIFIER
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                    IDENTIFIER shift  89
             PARENTHESES_CLOSE shift  96
                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
               xx_literal_expr shift  88
            xx_call_parameters shift  84
             xx_call_parameter shift  97

State 84:
          xx_assign_expr ::= IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters * PARENTHESES_CLOSE
          xx_call_parameters ::= xx_call_parameters * COMMA xx_call_parameter

                         COMMA shift  86
             PARENTHESES_CLOSE shift  85

State 85:
    (154) xx_assign_expr ::= IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE *

                     {default} reduce 154

State 86:
          xx_call_parameters ::= xx_call_parameters COMMA * xx_call_parameter
          xx_call_parameter ::= * xx_literal_expr
          xx_call_parameter ::= * IDENTIFIER
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                    IDENTIFIER shift  89
                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
               xx_literal_expr shift  88
             xx_call_parameter shift  87

State 87:
    (156) xx_call_parameters ::= xx_call_parameters COMMA xx_call_parameter *

                     {default} reduce 156

State 88:
    (158) xx_call_parameter ::= xx_literal_expr *

                     {default} reduce 158

State 89:
    (159) xx_call_parameter ::= IDENTIFIER *

                     {default} reduce 159

State 90:
    (170) xx_literal_expr ::= INTEGER *

                     {default} reduce 170

State 91:
    (171) xx_literal_expr ::= STRING *

                     {default} reduce 171

State 92:
    (172) xx_literal_expr ::= DOUBLE *

                     {default} reduce 172

State 93:
    (173) xx_literal_expr ::= NULL *

                     {default} reduce 173

State 94:
    (174) xx_literal_expr ::= FALSE *

                     {default} reduce 174

State 95:
    (175) xx_literal_expr ::= TRUE *

                     {default} reduce 175

State 96:
    (155) xx_assign_expr ::= IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE *

                     {default} reduce 155

State 97:
    (157) xx_call_parameters ::= xx_call_parameter *

                     {default} reduce 157

State 98:
          xx_assign_expr ::= IDENTIFIER SBRACKET_OPEN * IDENTIFIER SBRACKET_CLOSE
          xx_assign_expr ::= IDENTIFIER SBRACKET_OPEN * INTEGER SBRACKET_CLOSE
          xx_assign_expr ::= IDENTIFIER SBRACKET_OPEN * STRING SBRACKET_CLOSE

                    IDENTIFIER shift  99
                       INTEGER shift  101
                        STRING shift  103

State 99:
          xx_assign_expr ::= IDENTIFIER SBRACKET_OPEN IDENTIFIER * SBRACKET_CLOSE

                SBRACKET_CLOSE shift  100

State 100:
    (132) xx_assign_expr ::= IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE *

                     {default} reduce 132

State 101:
          xx_assign_expr ::= IDENTIFIER SBRACKET_OPEN INTEGER * SBRACKET_CLOSE

                SBRACKET_CLOSE shift  102

State 102:
    (133) xx_assign_expr ::= IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE *

                     {default} reduce 133

State 103:
          xx_assign_expr ::= IDENTIFIER SBRACKET_OPEN STRING * SBRACKET_CLOSE

                SBRACKET_CLOSE shift  104

State 104:
    (134) xx_assign_expr ::= IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE *

                     {default} reduce 134

State 105:
          xx_assign_expr ::= IDENTIFIER PARENTHESES_OPEN * xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE
          xx_call_parameters ::= * xx_call_parameters COMMA xx_call_parameter
          xx_call_parameters ::= * xx_call_parameter
          xx_call_parameter ::= * xx_literal_expr
          xx_call_parameter ::= * IDENTIFIER
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                    IDENTIFIER shift  89
             PARENTHESES_CLOSE shift  108
                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
               xx_literal_expr shift  88
            xx_call_parameters shift  106
             xx_call_parameter shift  97

State 106:
          xx_assign_expr ::= IDENTIFIER PARENTHESES_OPEN xx_call_parameters * PARENTHESES_CLOSE
          xx_call_parameters ::= xx_call_parameters * COMMA xx_call_parameter

                         COMMA shift  86
             PARENTHESES_CLOSE shift  107

State 107:
    (152) xx_assign_expr ::= IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE *

                     {default} reduce 152

State 108:
    (153) xx_assign_expr ::= IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE *

                     {default} reduce 153

State 109:
          xx_assign_expr ::= xx_assign_expr * ADD xx_assign_expr
    (135) xx_assign_expr ::= xx_assign_expr ADD xx_assign_expr *
          xx_assign_expr ::= xx_assign_expr * SUB xx_assign_expr
          xx_assign_expr ::= xx_assign_expr * CONCAT xx_assign_expr
          xx_assign_expr ::= xx_assign_expr * EQUALS xx_assign_expr

                     {default} reduce 135

State 110:
          xx_assign_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_assign_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_assign_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_assign_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE
          xx_assign_expr ::= * xx_assign_expr ADD xx_assign_expr
          xx_assign_expr ::= * xx_assign_expr SUB xx_assign_expr
          xx_assign_expr ::= xx_assign_expr SUB * xx_assign_expr
          xx_assign_expr ::= * xx_assign_expr CONCAT xx_assign_expr
          xx_assign_expr ::= * xx_assign_expr EQUALS xx_assign_expr
          xx_assign_expr ::= * INSTANCEOF xx_assign_expr
          xx_assign_expr ::= * TYPEOF xx_assign_expr
          xx_assign_expr ::= * IDENTIFIER
          xx_assign_expr ::= * INTEGER
          xx_assign_expr ::= * STRING
          xx_assign_expr ::= * DOUBLE
          xx_assign_expr ::= * NULL
          xx_assign_expr ::= * FALSE
          xx_assign_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_assign_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_assign_expr ::= * NEW IDENTIFIER
          xx_assign_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= * TRUE

                        TYPEOF shift  118
                    INSTANCEOF shift  116
                           NEW shift  141
                    IDENTIFIER shift  80
                 SBRACKET_OPEN shift  125
                       INTEGER shift  120
                        STRING shift  121
                        DOUBLE shift  122
                          NULL shift  123
                         FALSE shift  124
                          TRUE shift  147
                xx_assign_expr shift  111

State 111:
          xx_assign_expr ::= xx_assign_expr * ADD xx_assign_expr
          xx_assign_expr ::= xx_assign_expr * SUB xx_assign_expr
    (136) xx_assign_expr ::= xx_assign_expr SUB xx_assign_expr *
          xx_assign_expr ::= xx_assign_expr * CONCAT xx_assign_expr
          xx_assign_expr ::= xx_assign_expr * EQUALS xx_assign_expr

                     {default} reduce 136

State 112:
          xx_assign_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_assign_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_assign_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_assign_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE
          xx_assign_expr ::= * xx_assign_expr ADD xx_assign_expr
          xx_assign_expr ::= * xx_assign_expr SUB xx_assign_expr
          xx_assign_expr ::= * xx_assign_expr CONCAT xx_assign_expr
          xx_assign_expr ::= xx_assign_expr CONCAT * xx_assign_expr
          xx_assign_expr ::= * xx_assign_expr EQUALS xx_assign_expr
          xx_assign_expr ::= * INSTANCEOF xx_assign_expr
          xx_assign_expr ::= * TYPEOF xx_assign_expr
          xx_assign_expr ::= * IDENTIFIER
          xx_assign_expr ::= * INTEGER
          xx_assign_expr ::= * STRING
          xx_assign_expr ::= * DOUBLE
          xx_assign_expr ::= * NULL
          xx_assign_expr ::= * FALSE
          xx_assign_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_assign_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_assign_expr ::= * NEW IDENTIFIER
          xx_assign_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= * TRUE

                        TYPEOF shift  118
                    INSTANCEOF shift  116
                           NEW shift  141
                    IDENTIFIER shift  80
                 SBRACKET_OPEN shift  125
                       INTEGER shift  120
                        STRING shift  121
                        DOUBLE shift  122
                          NULL shift  123
                         FALSE shift  124
                          TRUE shift  147
                xx_assign_expr shift  113

State 113:
          xx_assign_expr ::= xx_assign_expr * ADD xx_assign_expr
          xx_assign_expr ::= xx_assign_expr * SUB xx_assign_expr
          xx_assign_expr ::= xx_assign_expr * CONCAT xx_assign_expr
    (137) xx_assign_expr ::= xx_assign_expr CONCAT xx_assign_expr *
          xx_assign_expr ::= xx_assign_expr * EQUALS xx_assign_expr

                     {default} reduce 137

State 114:
          xx_assign_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_assign_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_assign_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_assign_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE
          xx_assign_expr ::= * xx_assign_expr ADD xx_assign_expr
          xx_assign_expr ::= * xx_assign_expr SUB xx_assign_expr
          xx_assign_expr ::= * xx_assign_expr CONCAT xx_assign_expr
          xx_assign_expr ::= * xx_assign_expr EQUALS xx_assign_expr
          xx_assign_expr ::= xx_assign_expr EQUALS * xx_assign_expr
          xx_assign_expr ::= * INSTANCEOF xx_assign_expr
          xx_assign_expr ::= * TYPEOF xx_assign_expr
          xx_assign_expr ::= * IDENTIFIER
          xx_assign_expr ::= * INTEGER
          xx_assign_expr ::= * STRING
          xx_assign_expr ::= * DOUBLE
          xx_assign_expr ::= * NULL
          xx_assign_expr ::= * FALSE
          xx_assign_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_assign_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_assign_expr ::= * NEW IDENTIFIER
          xx_assign_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= * TRUE

                        TYPEOF shift  118
                    INSTANCEOF shift  116
                           NEW shift  141
                    IDENTIFIER shift  80
                 SBRACKET_OPEN shift  125
                       INTEGER shift  120
                        STRING shift  121
                        DOUBLE shift  122
                          NULL shift  123
                         FALSE shift  124
                          TRUE shift  147
                xx_assign_expr shift  115

State 115:
          xx_assign_expr ::= xx_assign_expr * ADD xx_assign_expr
          xx_assign_expr ::= xx_assign_expr * SUB xx_assign_expr
          xx_assign_expr ::= xx_assign_expr * CONCAT xx_assign_expr
          xx_assign_expr ::= xx_assign_expr * EQUALS xx_assign_expr
    (138) xx_assign_expr ::= xx_assign_expr EQUALS xx_assign_expr *

                           ADD shift  79
                           SUB shift  110
                        CONCAT shift  112
                     {default} reduce 138

State 116:
          xx_assign_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_assign_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_assign_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_assign_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE
          xx_assign_expr ::= * xx_assign_expr ADD xx_assign_expr
          xx_assign_expr ::= * xx_assign_expr SUB xx_assign_expr
          xx_assign_expr ::= * xx_assign_expr CONCAT xx_assign_expr
          xx_assign_expr ::= * xx_assign_expr EQUALS xx_assign_expr
          xx_assign_expr ::= * INSTANCEOF xx_assign_expr
          xx_assign_expr ::= INSTANCEOF * xx_assign_expr
          xx_assign_expr ::= * TYPEOF xx_assign_expr
          xx_assign_expr ::= * IDENTIFIER
          xx_assign_expr ::= * INTEGER
          xx_assign_expr ::= * STRING
          xx_assign_expr ::= * DOUBLE
          xx_assign_expr ::= * NULL
          xx_assign_expr ::= * FALSE
          xx_assign_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_assign_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_assign_expr ::= * NEW IDENTIFIER
          xx_assign_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= * TRUE

                        TYPEOF shift  118
                    INSTANCEOF shift  116
                           NEW shift  141
                    IDENTIFIER shift  80
                 SBRACKET_OPEN shift  125
                       INTEGER shift  120
                        STRING shift  121
                        DOUBLE shift  122
                          NULL shift  123
                         FALSE shift  124
                          TRUE shift  147
                xx_assign_expr shift  117

State 117:
          xx_assign_expr ::= xx_assign_expr * ADD xx_assign_expr
          xx_assign_expr ::= xx_assign_expr * SUB xx_assign_expr
          xx_assign_expr ::= xx_assign_expr * CONCAT xx_assign_expr
          xx_assign_expr ::= xx_assign_expr * EQUALS xx_assign_expr
    (139) xx_assign_expr ::= INSTANCEOF xx_assign_expr *

                     {default} reduce 139

State 118:
          xx_assign_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_assign_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_assign_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_assign_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE
          xx_assign_expr ::= * xx_assign_expr ADD xx_assign_expr
          xx_assign_expr ::= * xx_assign_expr SUB xx_assign_expr
          xx_assign_expr ::= * xx_assign_expr CONCAT xx_assign_expr
          xx_assign_expr ::= * xx_assign_expr EQUALS xx_assign_expr
          xx_assign_expr ::= * INSTANCEOF xx_assign_expr
          xx_assign_expr ::= * TYPEOF xx_assign_expr
          xx_assign_expr ::= TYPEOF * xx_assign_expr
          xx_assign_expr ::= * IDENTIFIER
          xx_assign_expr ::= * INTEGER
          xx_assign_expr ::= * STRING
          xx_assign_expr ::= * DOUBLE
          xx_assign_expr ::= * NULL
          xx_assign_expr ::= * FALSE
          xx_assign_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_assign_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_assign_expr ::= * NEW IDENTIFIER
          xx_assign_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= * TRUE

                        TYPEOF shift  118
                    INSTANCEOF shift  116
                           NEW shift  141
                    IDENTIFIER shift  80
                 SBRACKET_OPEN shift  125
                       INTEGER shift  120
                        STRING shift  121
                        DOUBLE shift  122
                          NULL shift  123
                         FALSE shift  124
                          TRUE shift  147
                xx_assign_expr shift  119

State 119:
          xx_assign_expr ::= xx_assign_expr * ADD xx_assign_expr
          xx_assign_expr ::= xx_assign_expr * SUB xx_assign_expr
          xx_assign_expr ::= xx_assign_expr * CONCAT xx_assign_expr
          xx_assign_expr ::= xx_assign_expr * EQUALS xx_assign_expr
    (140) xx_assign_expr ::= TYPEOF xx_assign_expr *

                     {default} reduce 140

State 120:
    (142) xx_assign_expr ::= INTEGER *

                     {default} reduce 142

State 121:
    (143) xx_assign_expr ::= STRING *

                     {default} reduce 143

State 122:
    (144) xx_assign_expr ::= DOUBLE *

                     {default} reduce 144

State 123:
    (145) xx_assign_expr ::= NULL *

                     {default} reduce 145

State 124:
    (146) xx_assign_expr ::= FALSE *

                     {default} reduce 146

State 125:
          xx_assign_expr ::= SBRACKET_OPEN * SBRACKET_CLOSE
          xx_assign_expr ::= SBRACKET_OPEN * xx_array_list SBRACKET_CLOSE
          xx_array_list ::= * xx_array_list COMMA xx_array_item
          xx_array_list ::= * xx_array_item
          xx_array_item ::= * xx_array_key COLON xx_array_value
          xx_array_item ::= * xx_array_value
          xx_array_key ::= * IDENTIFIER
          xx_array_key ::= * STRING
          xx_array_key ::= * INTEGER
          xx_array_value ::= * xx_literal_expr
          xx_array_value ::= * IDENTIFIER
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                    IDENTIFIER shift  137
                SBRACKET_CLOSE shift  126
                       INTEGER shift  139
                        STRING shift  138
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
               xx_literal_expr shift  134
                 xx_array_list shift  127
                 xx_array_item shift  140
                  xx_array_key shift  131
                xx_array_value shift  136

State 126:
    (147) xx_assign_expr ::= SBRACKET_OPEN SBRACKET_CLOSE *

                     {default} reduce 147

State 127:
          xx_assign_expr ::= SBRACKET_OPEN xx_array_list * SBRACKET_CLOSE
          xx_array_list ::= xx_array_list * COMMA xx_array_item

                         COMMA shift  129
                SBRACKET_CLOSE shift  128

State 128:
    (148) xx_assign_expr ::= SBRACKET_OPEN xx_array_list SBRACKET_CLOSE *

                     {default} reduce 148

State 129:
          xx_array_list ::= xx_array_list COMMA * xx_array_item
          xx_array_item ::= * xx_array_key COLON xx_array_value
          xx_array_item ::= * xx_array_value
          xx_array_key ::= * IDENTIFIER
          xx_array_key ::= * STRING
          xx_array_key ::= * INTEGER
          xx_array_value ::= * xx_literal_expr
          xx_array_value ::= * IDENTIFIER
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                    IDENTIFIER shift  137
                       INTEGER shift  139
                        STRING shift  138
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
               xx_literal_expr shift  134
                 xx_array_item shift  130
                  xx_array_key shift  131
                xx_array_value shift  136

State 130:
    (160) xx_array_list ::= xx_array_list COMMA xx_array_item *

                     {default} reduce 160

State 131:
          xx_array_item ::= xx_array_key * COLON xx_array_value

                         COLON shift  132

State 132:
          xx_array_item ::= xx_array_key COLON * xx_array_value
          xx_array_value ::= * xx_literal_expr
          xx_array_value ::= * IDENTIFIER
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                    IDENTIFIER shift  135
                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
               xx_literal_expr shift  134
                xx_array_value shift  133

State 133:
    (162) xx_array_item ::= xx_array_key COLON xx_array_value *

                     {default} reduce 162

State 134:
    (167) xx_array_value ::= xx_literal_expr *

                     {default} reduce 167

State 135:
    (168) xx_array_value ::= IDENTIFIER *

                     {default} reduce 168

State 136:
    (163) xx_array_item ::= xx_array_value *

                     {default} reduce 163

State 137:
    (164) xx_array_key ::= IDENTIFIER *
    (168) xx_array_value ::= IDENTIFIER *

                         COLON reduce 164
                     {default} reduce 168

State 138:
    (165) xx_array_key ::= STRING *
    (171) xx_literal_expr ::= STRING *

                         COLON reduce 165
                     {default} reduce 171

State 139:
    (166) xx_array_key ::= INTEGER *
    (170) xx_literal_expr ::= INTEGER *

                         COLON reduce 166
                     {default} reduce 170

State 140:
    (161) xx_array_list ::= xx_array_item *

                     {default} reduce 161

State 141:
          xx_assign_expr ::= NEW * IDENTIFIER
          xx_assign_expr ::= NEW * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= NEW * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE

                    IDENTIFIER shift  142

State 142:
    (149) xx_assign_expr ::= NEW IDENTIFIER *
          xx_assign_expr ::= NEW IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= NEW IDENTIFIER * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  143
                     {default} reduce 149

State 143:
          xx_assign_expr ::= NEW IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE
          xx_assign_expr ::= NEW IDENTIFIER PARENTHESES_OPEN * xx_call_parameters PARENTHESES_CLOSE
          xx_call_parameters ::= * xx_call_parameters COMMA xx_call_parameter
          xx_call_parameters ::= * xx_call_parameter
          xx_call_parameter ::= * xx_literal_expr
          xx_call_parameter ::= * IDENTIFIER
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                    IDENTIFIER shift  89
             PARENTHESES_CLOSE shift  144
                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
               xx_literal_expr shift  88
            xx_call_parameters shift  145
             xx_call_parameter shift  97

State 144:
    (150) xx_assign_expr ::= NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE *

                     {default} reduce 150

State 145:
          xx_assign_expr ::= NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters * PARENTHESES_CLOSE
          xx_call_parameters ::= xx_call_parameters * COMMA xx_call_parameter

                         COMMA shift  86
             PARENTHESES_CLOSE shift  146

State 146:
    (151) xx_assign_expr ::= NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE *

                     {default} reduce 151

State 147:
    (169) xx_assign_expr ::= TRUE *

                     {default} reduce 169

State 148:
          xx_let_assignment ::= IDENTIFIER ARROW * IDENTIFIER ASSIGN xx_assign_expr
          xx_let_assignment ::= IDENTIFIER ARROW * IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE ASSIGN xx_assign_expr

                    IDENTIFIER shift  149

State 149:
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER * ASSIGN xx_assign_expr
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER * SBRACKET_OPEN SBRACKET_CLOSE ASSIGN xx_assign_expr

                        ASSIGN shift  150
                 SBRACKET_OPEN shift  152

State 150:
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER ASSIGN * xx_assign_expr
          xx_assign_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_assign_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_assign_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_assign_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE
          xx_assign_expr ::= * xx_assign_expr ADD xx_assign_expr
          xx_assign_expr ::= * xx_assign_expr SUB xx_assign_expr
          xx_assign_expr ::= * xx_assign_expr CONCAT xx_assign_expr
          xx_assign_expr ::= * xx_assign_expr EQUALS xx_assign_expr
          xx_assign_expr ::= * INSTANCEOF xx_assign_expr
          xx_assign_expr ::= * TYPEOF xx_assign_expr
          xx_assign_expr ::= * IDENTIFIER
          xx_assign_expr ::= * INTEGER
          xx_assign_expr ::= * STRING
          xx_assign_expr ::= * DOUBLE
          xx_assign_expr ::= * NULL
          xx_assign_expr ::= * FALSE
          xx_assign_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_assign_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_assign_expr ::= * NEW IDENTIFIER
          xx_assign_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= * TRUE

                        TYPEOF shift  118
                    INSTANCEOF shift  116
                           NEW shift  141
                    IDENTIFIER shift  80
                 SBRACKET_OPEN shift  125
                       INTEGER shift  120
                        STRING shift  121
                        DOUBLE shift  122
                          NULL shift  123
                         FALSE shift  124
                          TRUE shift  147
                xx_assign_expr shift  151

State 151:
    (100) xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER ASSIGN xx_assign_expr *
          xx_assign_expr ::= xx_assign_expr * ADD xx_assign_expr
          xx_assign_expr ::= xx_assign_expr * SUB xx_assign_expr
          xx_assign_expr ::= xx_assign_expr * CONCAT xx_assign_expr
          xx_assign_expr ::= xx_assign_expr * EQUALS xx_assign_expr

                        EQUALS shift  114
                           ADD shift  79
                           SUB shift  110
                        CONCAT shift  112
                     {default} reduce 100

State 152:
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN * SBRACKET_CLOSE ASSIGN xx_assign_expr

                SBRACKET_CLOSE shift  153

State 153:
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE * ASSIGN xx_assign_expr

                        ASSIGN shift  154

State 154:
          xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE ASSIGN * xx_assign_expr
          xx_assign_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_assign_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_assign_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_assign_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE
          xx_assign_expr ::= * xx_assign_expr ADD xx_assign_expr
          xx_assign_expr ::= * xx_assign_expr SUB xx_assign_expr
          xx_assign_expr ::= * xx_assign_expr CONCAT xx_assign_expr
          xx_assign_expr ::= * xx_assign_expr EQUALS xx_assign_expr
          xx_assign_expr ::= * INSTANCEOF xx_assign_expr
          xx_assign_expr ::= * TYPEOF xx_assign_expr
          xx_assign_expr ::= * IDENTIFIER
          xx_assign_expr ::= * INTEGER
          xx_assign_expr ::= * STRING
          xx_assign_expr ::= * DOUBLE
          xx_assign_expr ::= * NULL
          xx_assign_expr ::= * FALSE
          xx_assign_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_assign_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_assign_expr ::= * NEW IDENTIFIER
          xx_assign_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= * TRUE

                        TYPEOF shift  118
                    INSTANCEOF shift  116
                           NEW shift  141
                    IDENTIFIER shift  80
                 SBRACKET_OPEN shift  125
                       INTEGER shift  120
                        STRING shift  121
                        DOUBLE shift  122
                          NULL shift  123
                         FALSE shift  124
                          TRUE shift  147
                xx_assign_expr shift  155

State 155:
    (101) xx_let_assignment ::= IDENTIFIER ARROW IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE ASSIGN xx_assign_expr *
          xx_assign_expr ::= xx_assign_expr * ADD xx_assign_expr
          xx_assign_expr ::= xx_assign_expr * SUB xx_assign_expr
          xx_assign_expr ::= xx_assign_expr * CONCAT xx_assign_expr
          xx_assign_expr ::= xx_assign_expr * EQUALS xx_assign_expr

                        EQUALS shift  114
                           ADD shift  79
                           SUB shift  110
                        CONCAT shift  112
                     {default} reduce 101

State 156:
          xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN * SBRACKET_CLOSE ASSIGN xx_assign_expr
          xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN * IDENTIFIER SBRACKET_CLOSE ASSIGN xx_assign_expr

                    IDENTIFIER shift  160
                SBRACKET_CLOSE shift  157

State 157:
          xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE * ASSIGN xx_assign_expr

                        ASSIGN shift  158

State 158:
          xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE ASSIGN * xx_assign_expr
          xx_assign_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_assign_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_assign_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_assign_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE
          xx_assign_expr ::= * xx_assign_expr ADD xx_assign_expr
          xx_assign_expr ::= * xx_assign_expr SUB xx_assign_expr
          xx_assign_expr ::= * xx_assign_expr CONCAT xx_assign_expr
          xx_assign_expr ::= * xx_assign_expr EQUALS xx_assign_expr
          xx_assign_expr ::= * INSTANCEOF xx_assign_expr
          xx_assign_expr ::= * TYPEOF xx_assign_expr
          xx_assign_expr ::= * IDENTIFIER
          xx_assign_expr ::= * INTEGER
          xx_assign_expr ::= * STRING
          xx_assign_expr ::= * DOUBLE
          xx_assign_expr ::= * NULL
          xx_assign_expr ::= * FALSE
          xx_assign_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_assign_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_assign_expr ::= * NEW IDENTIFIER
          xx_assign_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= * TRUE

                        TYPEOF shift  118
                    INSTANCEOF shift  116
                           NEW shift  141
                    IDENTIFIER shift  80
                 SBRACKET_OPEN shift  125
                       INTEGER shift  120
                        STRING shift  121
                        DOUBLE shift  122
                          NULL shift  123
                         FALSE shift  124
                          TRUE shift  147
                xx_assign_expr shift  159

State 159:
    (102) xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN SBRACKET_CLOSE ASSIGN xx_assign_expr *
          xx_assign_expr ::= xx_assign_expr * ADD xx_assign_expr
          xx_assign_expr ::= xx_assign_expr * SUB xx_assign_expr
          xx_assign_expr ::= xx_assign_expr * CONCAT xx_assign_expr
          xx_assign_expr ::= xx_assign_expr * EQUALS xx_assign_expr

                        EQUALS shift  114
                           ADD shift  79
                           SUB shift  110
                        CONCAT shift  112
                     {default} reduce 102

State 160:
          xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN IDENTIFIER * SBRACKET_CLOSE ASSIGN xx_assign_expr

                SBRACKET_CLOSE shift  161

State 161:
          xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE * ASSIGN xx_assign_expr

                        ASSIGN shift  162

State 162:
          xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE ASSIGN * xx_assign_expr
          xx_assign_expr ::= * IDENTIFIER ARROW IDENTIFIER
          xx_assign_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_assign_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_assign_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE
          xx_assign_expr ::= * xx_assign_expr ADD xx_assign_expr
          xx_assign_expr ::= * xx_assign_expr SUB xx_assign_expr
          xx_assign_expr ::= * xx_assign_expr CONCAT xx_assign_expr
          xx_assign_expr ::= * xx_assign_expr EQUALS xx_assign_expr
          xx_assign_expr ::= * INSTANCEOF xx_assign_expr
          xx_assign_expr ::= * TYPEOF xx_assign_expr
          xx_assign_expr ::= * IDENTIFIER
          xx_assign_expr ::= * INTEGER
          xx_assign_expr ::= * STRING
          xx_assign_expr ::= * DOUBLE
          xx_assign_expr ::= * NULL
          xx_assign_expr ::= * FALSE
          xx_assign_expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          xx_assign_expr ::= * SBRACKET_OPEN xx_array_list SBRACKET_CLOSE
          xx_assign_expr ::= * NEW IDENTIFIER
          xx_assign_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_assign_expr ::= * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE
          xx_assign_expr ::= * TRUE

                        TYPEOF shift  118
                    INSTANCEOF shift  116
                           NEW shift  141
                    IDENTIFIER shift  80
                 SBRACKET_OPEN shift  125
                       INTEGER shift  120
                        STRING shift  121
                        DOUBLE shift  122
                          NULL shift  123
                         FALSE shift  124
                          TRUE shift  147
                xx_assign_expr shift  163

State 163:
    (103) xx_let_assignment ::= IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE ASSIGN xx_assign_expr *
          xx_assign_expr ::= xx_assign_expr * ADD xx_assign_expr
          xx_assign_expr ::= xx_assign_expr * SUB xx_assign_expr
          xx_assign_expr ::= xx_assign_expr * CONCAT xx_assign_expr
          xx_assign_expr ::= xx_assign_expr * EQUALS xx_assign_expr

                        EQUALS shift  114
                           ADD shift  79
                           SUB shift  110
                        CONCAT shift  112
                     {default} reduce 103

State 164:
    (104) xx_let_assignment ::= IDENTIFIER INCR *

                     {default} reduce 104

State 165:
    (105) xx_let_assignment ::= IDENTIFIER DECR *

                     {default} reduce 105

State 166:
     (98) xx_let_assignments ::= xx_let_assignment *

                     {default} reduce 98

State 167:
          xx_echo_statement ::= ECHO * xx_echo_expressions DOTCOMMA
          xx_echo_expressions ::= * xx_echo_expressions COMMA xx_echo_expression
          xx_echo_expressions ::= * xx_echo_expression
          xx_echo_expression ::= * xx_literal_expr
          xx_echo_expression ::= * IDENTIFIER
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                    IDENTIFIER shift  173
                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
               xx_literal_expr shift  172
           xx_echo_expressions shift  168
            xx_echo_expression shift  174

State 168:
          xx_echo_statement ::= ECHO xx_echo_expressions * DOTCOMMA
          xx_echo_expressions ::= xx_echo_expressions * COMMA xx_echo_expression

                         COMMA shift  170
                      DOTCOMMA shift  169

State 169:
    (106) xx_echo_statement ::= ECHO xx_echo_expressions DOTCOMMA *

                     {default} reduce 106

State 170:
          xx_echo_expressions ::= xx_echo_expressions COMMA * xx_echo_expression
          xx_echo_expression ::= * xx_literal_expr
          xx_echo_expression ::= * IDENTIFIER
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                    IDENTIFIER shift  173
                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
               xx_literal_expr shift  172
            xx_echo_expression shift  171

State 171:
    (107) xx_echo_expressions ::= xx_echo_expressions COMMA xx_echo_expression *

                     {default} reduce 107

State 172:
    (109) xx_echo_expression ::= xx_literal_expr *

                     {default} reduce 109

State 173:
    (110) xx_echo_expression ::= IDENTIFIER *

                     {default} reduce 110

State 174:
    (108) xx_echo_expressions ::= xx_echo_expression *

                     {default} reduce 108

State 175:
          xx_return_statement ::= RETURN * xx_literal_expr DOTCOMMA
          xx_return_statement ::= RETURN * IDENTIFIER DOTCOMMA
          xx_return_statement ::= RETURN * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= RETURN * IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= RETURN * IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                    IDENTIFIER shift  178
                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
               xx_literal_expr shift  176

State 176:
          xx_return_statement ::= RETURN xx_literal_expr * DOTCOMMA

                      DOTCOMMA shift  177

State 177:
    (111) xx_return_statement ::= RETURN xx_literal_expr DOTCOMMA *

                     {default} reduce 111

State 178:
          xx_return_statement ::= RETURN IDENTIFIER * DOTCOMMA
          xx_return_statement ::= RETURN IDENTIFIER * ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= RETURN IDENTIFIER * ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= RETURN IDENTIFIER * ARROW IDENTIFIER DOTCOMMA

                      DOTCOMMA shift  179
                         ARROW shift  180

State 179:
    (112) xx_return_statement ::= RETURN IDENTIFIER DOTCOMMA *

                     {default} reduce 112

State 180:
          xx_return_statement ::= RETURN IDENTIFIER ARROW * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= RETURN IDENTIFIER ARROW * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= RETURN IDENTIFIER ARROW * IDENTIFIER DOTCOMMA

                    IDENTIFIER shift  181

State 181:
          xx_return_statement ::= RETURN IDENTIFIER ARROW IDENTIFIER * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= RETURN IDENTIFIER ARROW IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= RETURN IDENTIFIER ARROW IDENTIFIER * DOTCOMMA

                      DOTCOMMA shift  188
              PARENTHESES_OPEN shift  182

State 182:
          xx_return_statement ::= RETURN IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN * xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= RETURN IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE DOTCOMMA
          xx_call_parameters ::= * xx_call_parameters COMMA xx_call_parameter
          xx_call_parameters ::= * xx_call_parameter
          xx_call_parameter ::= * xx_literal_expr
          xx_call_parameter ::= * IDENTIFIER
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                    IDENTIFIER shift  89
             PARENTHESES_CLOSE shift  186
                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
               xx_literal_expr shift  88
            xx_call_parameters shift  183
             xx_call_parameter shift  97

State 183:
          xx_return_statement ::= RETURN IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters * PARENTHESES_CLOSE DOTCOMMA
          xx_call_parameters ::= xx_call_parameters * COMMA xx_call_parameter

                         COMMA shift  86
             PARENTHESES_CLOSE shift  184

State 184:
          xx_return_statement ::= RETURN IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE * DOTCOMMA

                      DOTCOMMA shift  185

State 185:
    (113) xx_return_statement ::= RETURN IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA *

                     {default} reduce 113

State 186:
          xx_return_statement ::= RETURN IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * DOTCOMMA

                      DOTCOMMA shift  187

State 187:
    (114) xx_return_statement ::= RETURN IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA *

                     {default} reduce 114

State 188:
    (115) xx_return_statement ::= RETURN IDENTIFIER ARROW IDENTIFIER DOTCOMMA *

                     {default} reduce 115

State 189:
          xx_unset_statement ::= UNSET * IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= UNSET * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= UNSET * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= UNSET * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA

                    IDENTIFIER shift  190

State 190:
          xx_unset_statement ::= UNSET IDENTIFIER * ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= UNSET IDENTIFIER * SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= UNSET IDENTIFIER * SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= UNSET IDENTIFIER * SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA

                         ARROW shift  191
                 SBRACKET_OPEN shift  194

State 191:
          xx_unset_statement ::= UNSET IDENTIFIER ARROW * IDENTIFIER DOTCOMMA

                    IDENTIFIER shift  192

State 192:
          xx_unset_statement ::= UNSET IDENTIFIER ARROW IDENTIFIER * DOTCOMMA

                      DOTCOMMA shift  193

State 193:
    (116) xx_unset_statement ::= UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA *

                     {default} reduce 116

State 194:
          xx_unset_statement ::= UNSET IDENTIFIER SBRACKET_OPEN * IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= UNSET IDENTIFIER SBRACKET_OPEN * INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= UNSET IDENTIFIER SBRACKET_OPEN * STRING SBRACKET_CLOSE DOTCOMMA

                    IDENTIFIER shift  195
                       INTEGER shift  198
                        STRING shift  201

State 195:
          xx_unset_statement ::= UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER * SBRACKET_CLOSE DOTCOMMA

                SBRACKET_CLOSE shift  196

State 196:
          xx_unset_statement ::= UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE * DOTCOMMA

                      DOTCOMMA shift  197

State 197:
    (117) xx_unset_statement ::= UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA *

                     {default} reduce 117

State 198:
          xx_unset_statement ::= UNSET IDENTIFIER SBRACKET_OPEN INTEGER * SBRACKET_CLOSE DOTCOMMA

                SBRACKET_CLOSE shift  199

State 199:
          xx_unset_statement ::= UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE * DOTCOMMA

                      DOTCOMMA shift  200

State 200:
    (118) xx_unset_statement ::= UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA *

                     {default} reduce 118

State 201:
          xx_unset_statement ::= UNSET IDENTIFIER SBRACKET_OPEN STRING * SBRACKET_CLOSE DOTCOMMA

                SBRACKET_CLOSE shift  202

State 202:
          xx_unset_statement ::= UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE * DOTCOMMA

                      DOTCOMMA shift  203

State 203:
    (119) xx_unset_statement ::= UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA *

                     {default} reduce 119

State 204:
          xx_throw_statement ::= THROW * IDENTIFIER DOTCOMMA
          xx_throw_statement ::= THROW * NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA

                           NEW shift  207
                    IDENTIFIER shift  205

State 205:
          xx_throw_statement ::= THROW IDENTIFIER * DOTCOMMA

                      DOTCOMMA shift  206

State 206:
    (120) xx_throw_statement ::= THROW IDENTIFIER DOTCOMMA *

                     {default} reduce 120

State 207:
          xx_throw_statement ::= THROW NEW * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA

                    IDENTIFIER shift  208

State 208:
          xx_throw_statement ::= THROW NEW IDENTIFIER * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA

              PARENTHESES_OPEN shift  209

State 209:
          xx_throw_statement ::= THROW NEW IDENTIFIER PARENTHESES_OPEN * xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_call_parameters ::= * xx_call_parameters COMMA xx_call_parameter
          xx_call_parameters ::= * xx_call_parameter
          xx_call_parameter ::= * xx_literal_expr
          xx_call_parameter ::= * IDENTIFIER
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                    IDENTIFIER shift  89
                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
               xx_literal_expr shift  88
            xx_call_parameters shift  210
             xx_call_parameter shift  97

State 210:
          xx_throw_statement ::= THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters * PARENTHESES_CLOSE DOTCOMMA
          xx_call_parameters ::= xx_call_parameters * COMMA xx_call_parameter

                         COMMA shift  86
             PARENTHESES_CLOSE shift  211

State 211:
          xx_throw_statement ::= THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE * DOTCOMMA

                      DOTCOMMA shift  212

State 212:
    (121) xx_throw_statement ::= THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA *

                     {default} reduce 121

State 213:
          xx_declare_statement ::= TYPE_INTEGER * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  218
      xx_declare_variable_list shift  214
           xx_declare_variable shift  221

State 214:
          xx_declare_statement ::= TYPE_INTEGER xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  216
                      DOTCOMMA shift  215

State 215:
    (122) xx_declare_statement ::= TYPE_INTEGER xx_declare_variable_list DOTCOMMA *

                     {default} reduce 122

State 216:
          xx_declare_variable_list ::= xx_declare_variable_list COMMA * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  218
           xx_declare_variable shift  217

State 217:
    (127) xx_declare_variable_list ::= xx_declare_variable_list COMMA xx_declare_variable *

                     {default} reduce 127

State 218:
    (129) xx_declare_variable ::= IDENTIFIER *
          xx_declare_variable ::= IDENTIFIER * ASSIGN xx_literal_expr

                        ASSIGN shift  219
                     {default} reduce 129

State 219:
          xx_declare_variable ::= IDENTIFIER ASSIGN * xx_literal_expr
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
               xx_literal_expr shift  220

State 220:
    (130) xx_declare_variable ::= IDENTIFIER ASSIGN xx_literal_expr *

                     {default} reduce 130

State 221:
    (128) xx_declare_variable_list ::= xx_declare_variable *

                     {default} reduce 128

State 222:
          xx_declare_statement ::= TYPE_DOUBLE * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  218
      xx_declare_variable_list shift  223
           xx_declare_variable shift  221

State 223:
          xx_declare_statement ::= TYPE_DOUBLE xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  216
                      DOTCOMMA shift  224

State 224:
    (123) xx_declare_statement ::= TYPE_DOUBLE xx_declare_variable_list DOTCOMMA *

                     {default} reduce 123

State 225:
          xx_declare_statement ::= TYPE_STRING * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  218
      xx_declare_variable_list shift  226
           xx_declare_variable shift  221

State 226:
          xx_declare_statement ::= TYPE_STRING xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  216
                      DOTCOMMA shift  227

State 227:
    (124) xx_declare_statement ::= TYPE_STRING xx_declare_variable_list DOTCOMMA *

                     {default} reduce 124

State 228:
          xx_declare_statement ::= TYPE_BOOL * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  218
      xx_declare_variable_list shift  229
           xx_declare_variable shift  221

State 229:
          xx_declare_statement ::= TYPE_BOOL xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  216
                      DOTCOMMA shift  230

State 230:
    (125) xx_declare_statement ::= TYPE_BOOL xx_declare_variable_list DOTCOMMA *

                     {default} reduce 125

State 231:
          xx_declare_statement ::= TYPE_VAR * xx_declare_variable_list DOTCOMMA
          xx_declare_variable_list ::= * xx_declare_variable_list COMMA xx_declare_variable
          xx_declare_variable_list ::= * xx_declare_variable
          xx_declare_variable ::= * IDENTIFIER
          xx_declare_variable ::= * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  218
      xx_declare_variable_list shift  232
           xx_declare_variable shift  221

State 232:
          xx_declare_statement ::= TYPE_VAR xx_declare_variable_list * DOTCOMMA
          xx_declare_variable_list ::= xx_declare_variable_list * COMMA xx_declare_variable

                         COMMA shift  216
                      DOTCOMMA shift  233

State 233:
    (126) xx_declare_statement ::= TYPE_VAR xx_declare_variable_list DOTCOMMA *

                     {default} reduce 126

State 234:
    (194) xx_comment ::= COMMENT *

                     {default} reduce 194

State 235:
     (68) xx_statement_list ::= xx_statement *

                     {default} reduce 68

State 236:
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_eval_expr ::= * xx_literal_expr
          xx_eval_expr ::= * NOT xx_eval_expr
          xx_eval_expr ::= * TYPEOF xx_eval_expr
          xx_eval_expr ::= * ISSET xx_isset_expr
          xx_eval_expr ::= * xx_eval_expr TYPEOF xx_eval_expr
          xx_eval_expr ::= xx_eval_expr TYPEOF * xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr EQUALS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr NOTEQUALS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr IDENTICAL xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr NOTIDENTICAL xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr LESS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr GREATER xx_eval_expr
          xx_eval_expr ::= * PARENTHESES_OPEN xx_eval_expr PARENTHESES_CLOSE
          xx_eval_expr ::= * IDENTIFIER
          xx_eval_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_eval_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                        TYPEOF shift  241
                           NOT shift  238
                    IDENTIFIER shift  266
              PARENTHESES_OPEN shift  263
                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
                         ISSET shift  244
               xx_literal_expr shift  237
                  xx_eval_expr shift  272

State 237:
    (176) xx_eval_expr ::= xx_literal_expr *

                     {default} reduce 176

State 238:
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_eval_expr ::= * xx_literal_expr
          xx_eval_expr ::= * NOT xx_eval_expr
          xx_eval_expr ::= NOT * xx_eval_expr
          xx_eval_expr ::= * TYPEOF xx_eval_expr
          xx_eval_expr ::= * ISSET xx_isset_expr
          xx_eval_expr ::= * xx_eval_expr TYPEOF xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr EQUALS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr NOTEQUALS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr IDENTICAL xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr NOTIDENTICAL xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr LESS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr GREATER xx_eval_expr
          xx_eval_expr ::= * PARENTHESES_OPEN xx_eval_expr PARENTHESES_CLOSE
          xx_eval_expr ::= * IDENTIFIER
          xx_eval_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_eval_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                        TYPEOF shift  241
                           NOT shift  238
                    IDENTIFIER shift  266
              PARENTHESES_OPEN shift  263
                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
                         ISSET shift  244
               xx_literal_expr shift  237
                  xx_eval_expr shift  239

State 239:
    (177) xx_eval_expr ::= NOT xx_eval_expr *
          xx_eval_expr ::= xx_eval_expr * TYPEOF xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * EQUALS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * NOTEQUALS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * IDENTICAL xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * NOTIDENTICAL xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * LESS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * GREATER xx_eval_expr

                     {default} reduce 177

State 240:
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_eval_expr ::= * xx_literal_expr
          xx_eval_expr ::= * NOT xx_eval_expr
          xx_eval_expr ::= * TYPEOF xx_eval_expr
          xx_eval_expr ::= * ISSET xx_isset_expr
          xx_eval_expr ::= * xx_eval_expr TYPEOF xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr EQUALS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr EQUALS * xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr NOTEQUALS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr IDENTICAL xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr NOTIDENTICAL xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr LESS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr GREATER xx_eval_expr
          xx_eval_expr ::= * PARENTHESES_OPEN xx_eval_expr PARENTHESES_CLOSE
          xx_eval_expr ::= * IDENTIFIER
          xx_eval_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_eval_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                        TYPEOF shift  241
                           NOT shift  238
                    IDENTIFIER shift  266
              PARENTHESES_OPEN shift  263
                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
                         ISSET shift  244
               xx_literal_expr shift  237
                  xx_eval_expr shift  271

State 241:
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_eval_expr ::= * xx_literal_expr
          xx_eval_expr ::= * NOT xx_eval_expr
          xx_eval_expr ::= * TYPEOF xx_eval_expr
          xx_eval_expr ::= TYPEOF * xx_eval_expr
          xx_eval_expr ::= * ISSET xx_isset_expr
          xx_eval_expr ::= * xx_eval_expr TYPEOF xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr EQUALS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr NOTEQUALS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr IDENTICAL xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr NOTIDENTICAL xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr LESS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr GREATER xx_eval_expr
          xx_eval_expr ::= * PARENTHESES_OPEN xx_eval_expr PARENTHESES_CLOSE
          xx_eval_expr ::= * IDENTIFIER
          xx_eval_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_eval_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                        TYPEOF shift  241
                           NOT shift  238
                    IDENTIFIER shift  266
              PARENTHESES_OPEN shift  263
                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
                         ISSET shift  244
               xx_literal_expr shift  237
                  xx_eval_expr shift  242

State 242:
    (178) xx_eval_expr ::= TYPEOF xx_eval_expr *
          xx_eval_expr ::= xx_eval_expr * TYPEOF xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * EQUALS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * NOTEQUALS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * IDENTICAL xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * NOTIDENTICAL xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * LESS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * GREATER xx_eval_expr

                        TYPEOF shift  236
                     {default} reduce 178

State 243:
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_eval_expr ::= * xx_literal_expr
          xx_eval_expr ::= * NOT xx_eval_expr
          xx_eval_expr ::= * TYPEOF xx_eval_expr
          xx_eval_expr ::= * ISSET xx_isset_expr
          xx_eval_expr ::= * xx_eval_expr TYPEOF xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr EQUALS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr NOTEQUALS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr NOTEQUALS * xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr IDENTICAL xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr NOTIDENTICAL xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr LESS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr GREATER xx_eval_expr
          xx_eval_expr ::= * PARENTHESES_OPEN xx_eval_expr PARENTHESES_CLOSE
          xx_eval_expr ::= * IDENTIFIER
          xx_eval_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_eval_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                        TYPEOF shift  241
                           NOT shift  238
                    IDENTIFIER shift  266
              PARENTHESES_OPEN shift  263
                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
                         ISSET shift  244
               xx_literal_expr shift  237
                  xx_eval_expr shift  254

State 244:
          xx_eval_expr ::= ISSET * xx_isset_expr
          xx_isset_expr ::= * IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_isset_expr ::= * IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_isset_expr ::= * IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE

                    IDENTIFIER shift  246
                 xx_isset_expr shift  245

State 245:
    (179) xx_eval_expr ::= ISSET xx_isset_expr *

                     {default} reduce 179

State 246:
          xx_isset_expr ::= IDENTIFIER * SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE
          xx_isset_expr ::= IDENTIFIER * SBRACKET_OPEN INTEGER SBRACKET_CLOSE
          xx_isset_expr ::= IDENTIFIER * SBRACKET_OPEN STRING SBRACKET_CLOSE

                 SBRACKET_OPEN shift  247

State 247:
          xx_isset_expr ::= IDENTIFIER SBRACKET_OPEN * IDENTIFIER SBRACKET_CLOSE
          xx_isset_expr ::= IDENTIFIER SBRACKET_OPEN * INTEGER SBRACKET_CLOSE
          xx_isset_expr ::= IDENTIFIER SBRACKET_OPEN * STRING SBRACKET_CLOSE

                    IDENTIFIER shift  248
                       INTEGER shift  250
                        STRING shift  252

State 248:
          xx_isset_expr ::= IDENTIFIER SBRACKET_OPEN IDENTIFIER * SBRACKET_CLOSE

                SBRACKET_CLOSE shift  249

State 249:
    (191) xx_isset_expr ::= IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE *

                     {default} reduce 191

State 250:
          xx_isset_expr ::= IDENTIFIER SBRACKET_OPEN INTEGER * SBRACKET_CLOSE

                SBRACKET_CLOSE shift  251

State 251:
    (192) xx_isset_expr ::= IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE *

                     {default} reduce 192

State 252:
          xx_isset_expr ::= IDENTIFIER SBRACKET_OPEN STRING * SBRACKET_CLOSE

                SBRACKET_CLOSE shift  253

State 253:
    (193) xx_isset_expr ::= IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE *

                     {default} reduce 193

State 254:
          xx_eval_expr ::= xx_eval_expr * TYPEOF xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * EQUALS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * NOTEQUALS xx_eval_expr
    (182) xx_eval_expr ::= xx_eval_expr NOTEQUALS xx_eval_expr *
          xx_eval_expr ::= xx_eval_expr * IDENTICAL xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * NOTIDENTICAL xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * LESS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * GREATER xx_eval_expr

                        TYPEOF shift  236
                     {default} reduce 182

State 255:
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_eval_expr ::= * xx_literal_expr
          xx_eval_expr ::= * NOT xx_eval_expr
          xx_eval_expr ::= * TYPEOF xx_eval_expr
          xx_eval_expr ::= * ISSET xx_isset_expr
          xx_eval_expr ::= * xx_eval_expr TYPEOF xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr EQUALS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr NOTEQUALS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr IDENTICAL xx_eval_expr
          xx_eval_expr ::= xx_eval_expr IDENTICAL * xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr NOTIDENTICAL xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr LESS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr GREATER xx_eval_expr
          xx_eval_expr ::= * PARENTHESES_OPEN xx_eval_expr PARENTHESES_CLOSE
          xx_eval_expr ::= * IDENTIFIER
          xx_eval_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_eval_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                        TYPEOF shift  241
                           NOT shift  238
                    IDENTIFIER shift  266
              PARENTHESES_OPEN shift  263
                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
                         ISSET shift  244
               xx_literal_expr shift  237
                  xx_eval_expr shift  256

State 256:
          xx_eval_expr ::= xx_eval_expr * TYPEOF xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * EQUALS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * NOTEQUALS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * IDENTICAL xx_eval_expr
    (183) xx_eval_expr ::= xx_eval_expr IDENTICAL xx_eval_expr *
          xx_eval_expr ::= xx_eval_expr * NOTIDENTICAL xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * LESS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * GREATER xx_eval_expr

                        TYPEOF shift  236
                     {default} reduce 183

State 257:
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_eval_expr ::= * xx_literal_expr
          xx_eval_expr ::= * NOT xx_eval_expr
          xx_eval_expr ::= * TYPEOF xx_eval_expr
          xx_eval_expr ::= * ISSET xx_isset_expr
          xx_eval_expr ::= * xx_eval_expr TYPEOF xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr EQUALS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr NOTEQUALS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr IDENTICAL xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr NOTIDENTICAL xx_eval_expr
          xx_eval_expr ::= xx_eval_expr NOTIDENTICAL * xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr LESS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr GREATER xx_eval_expr
          xx_eval_expr ::= * PARENTHESES_OPEN xx_eval_expr PARENTHESES_CLOSE
          xx_eval_expr ::= * IDENTIFIER
          xx_eval_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_eval_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                        TYPEOF shift  241
                           NOT shift  238
                    IDENTIFIER shift  266
              PARENTHESES_OPEN shift  263
                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
                         ISSET shift  244
               xx_literal_expr shift  237
                  xx_eval_expr shift  258

State 258:
          xx_eval_expr ::= xx_eval_expr * TYPEOF xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * EQUALS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * NOTEQUALS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * IDENTICAL xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * NOTIDENTICAL xx_eval_expr
    (184) xx_eval_expr ::= xx_eval_expr NOTIDENTICAL xx_eval_expr *
          xx_eval_expr ::= xx_eval_expr * LESS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * GREATER xx_eval_expr

                        TYPEOF shift  236
                     {default} reduce 184

State 259:
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_eval_expr ::= * xx_literal_expr
          xx_eval_expr ::= * NOT xx_eval_expr
          xx_eval_expr ::= * TYPEOF xx_eval_expr
          xx_eval_expr ::= * ISSET xx_isset_expr
          xx_eval_expr ::= * xx_eval_expr TYPEOF xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr EQUALS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr NOTEQUALS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr IDENTICAL xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr NOTIDENTICAL xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr LESS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr LESS * xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr GREATER xx_eval_expr
          xx_eval_expr ::= * PARENTHESES_OPEN xx_eval_expr PARENTHESES_CLOSE
          xx_eval_expr ::= * IDENTIFIER
          xx_eval_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_eval_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                        TYPEOF shift  241
                           NOT shift  238
                    IDENTIFIER shift  266
              PARENTHESES_OPEN shift  263
                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
                         ISSET shift  244
               xx_literal_expr shift  237
                  xx_eval_expr shift  260

State 260:
          xx_eval_expr ::= xx_eval_expr * TYPEOF xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * EQUALS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * NOTEQUALS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * IDENTICAL xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * NOTIDENTICAL xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * LESS xx_eval_expr
    (185) xx_eval_expr ::= xx_eval_expr LESS xx_eval_expr *
          xx_eval_expr ::= xx_eval_expr * GREATER xx_eval_expr

                        TYPEOF shift  236
                     {default} reduce 185

State 261:
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_eval_expr ::= * xx_literal_expr
          xx_eval_expr ::= * NOT xx_eval_expr
          xx_eval_expr ::= * TYPEOF xx_eval_expr
          xx_eval_expr ::= * ISSET xx_isset_expr
          xx_eval_expr ::= * xx_eval_expr TYPEOF xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr EQUALS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr NOTEQUALS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr IDENTICAL xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr NOTIDENTICAL xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr LESS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr GREATER xx_eval_expr
          xx_eval_expr ::= xx_eval_expr GREATER * xx_eval_expr
          xx_eval_expr ::= * PARENTHESES_OPEN xx_eval_expr PARENTHESES_CLOSE
          xx_eval_expr ::= * IDENTIFIER
          xx_eval_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_eval_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                        TYPEOF shift  241
                           NOT shift  238
                    IDENTIFIER shift  266
              PARENTHESES_OPEN shift  263
                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
                         ISSET shift  244
               xx_literal_expr shift  237
                  xx_eval_expr shift  262

State 262:
          xx_eval_expr ::= xx_eval_expr * TYPEOF xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * EQUALS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * NOTEQUALS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * IDENTICAL xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * NOTIDENTICAL xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * LESS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * GREATER xx_eval_expr
    (186) xx_eval_expr ::= xx_eval_expr GREATER xx_eval_expr *

                        TYPEOF shift  236
                     {default} reduce 186

State 263:
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_eval_expr ::= * xx_literal_expr
          xx_eval_expr ::= * NOT xx_eval_expr
          xx_eval_expr ::= * TYPEOF xx_eval_expr
          xx_eval_expr ::= * ISSET xx_isset_expr
          xx_eval_expr ::= * xx_eval_expr TYPEOF xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr EQUALS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr NOTEQUALS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr IDENTICAL xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr NOTIDENTICAL xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr LESS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr GREATER xx_eval_expr
          xx_eval_expr ::= * PARENTHESES_OPEN xx_eval_expr PARENTHESES_CLOSE
          xx_eval_expr ::= PARENTHESES_OPEN * xx_eval_expr PARENTHESES_CLOSE
          xx_eval_expr ::= * IDENTIFIER
          xx_eval_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_eval_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                        TYPEOF shift  241
                           NOT shift  238
                    IDENTIFIER shift  266
              PARENTHESES_OPEN shift  263
                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
                         ISSET shift  244
               xx_literal_expr shift  237
                  xx_eval_expr shift  264

State 264:
          xx_eval_expr ::= xx_eval_expr * TYPEOF xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * EQUALS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * NOTEQUALS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * IDENTICAL xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * NOTIDENTICAL xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * LESS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * GREATER xx_eval_expr
          xx_eval_expr ::= PARENTHESES_OPEN xx_eval_expr * PARENTHESES_CLOSE

                        EQUALS shift  240
                     IDENTICAL shift  255
                          LESS shift  259
                       GREATER shift  261
                  NOTIDENTICAL shift  257
                     NOTEQUALS shift  243
                        TYPEOF shift  236
             PARENTHESES_CLOSE shift  265

State 265:
    (187) xx_eval_expr ::= PARENTHESES_OPEN xx_eval_expr PARENTHESES_CLOSE *

                     {default} reduce 187

State 266:
    (188) xx_eval_expr ::= IDENTIFIER *
          xx_eval_expr ::= IDENTIFIER * PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_eval_expr ::= IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE

              PARENTHESES_OPEN shift  267
                     {default} reduce 188

State 267:
          xx_call_parameters ::= * xx_call_parameters COMMA xx_call_parameter
          xx_call_parameters ::= * xx_call_parameter
          xx_call_parameter ::= * xx_literal_expr
          xx_call_parameter ::= * IDENTIFIER
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_eval_expr ::= IDENTIFIER PARENTHESES_OPEN * xx_call_parameters PARENTHESES_CLOSE
          xx_eval_expr ::= IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE

                    IDENTIFIER shift  89
             PARENTHESES_CLOSE shift  270
                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
               xx_literal_expr shift  88
            xx_call_parameters shift  268
             xx_call_parameter shift  97

State 268:
          xx_call_parameters ::= xx_call_parameters * COMMA xx_call_parameter
          xx_eval_expr ::= IDENTIFIER PARENTHESES_OPEN xx_call_parameters * PARENTHESES_CLOSE

                         COMMA shift  86
             PARENTHESES_CLOSE shift  269

State 269:
    (189) xx_eval_expr ::= IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE *

                     {default} reduce 189

State 270:
    (190) xx_eval_expr ::= IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE *

                     {default} reduce 190

State 271:
          xx_eval_expr ::= xx_eval_expr * TYPEOF xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * EQUALS xx_eval_expr
    (181) xx_eval_expr ::= xx_eval_expr EQUALS xx_eval_expr *
          xx_eval_expr ::= xx_eval_expr * NOTEQUALS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * IDENTICAL xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * NOTIDENTICAL xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * LESS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * GREATER xx_eval_expr

                        TYPEOF shift  236
                     {default} reduce 181

State 272:
          xx_eval_expr ::= xx_eval_expr * TYPEOF xx_eval_expr
    (180) xx_eval_expr ::= xx_eval_expr TYPEOF xx_eval_expr *
          xx_eval_expr ::= xx_eval_expr * EQUALS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * NOTEQUALS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * IDENTICAL xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * NOTIDENTICAL xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * LESS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * GREATER xx_eval_expr

                        TYPEOF shift  236
                     {default} reduce 180

State 273:
          xx_for_statement ::= FOR IDENTIFIER COMMA * IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                    IDENTIFIER shift  274

State 274:
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER * IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                            IN shift  275

State 275:
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN * xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE
          xx_eval_expr ::= * xx_literal_expr
          xx_eval_expr ::= * NOT xx_eval_expr
          xx_eval_expr ::= * TYPEOF xx_eval_expr
          xx_eval_expr ::= * ISSET xx_isset_expr
          xx_eval_expr ::= * xx_eval_expr TYPEOF xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr EQUALS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr NOTEQUALS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr IDENTICAL xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr NOTIDENTICAL xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr LESS xx_eval_expr
          xx_eval_expr ::= * xx_eval_expr GREATER xx_eval_expr
          xx_eval_expr ::= * PARENTHESES_OPEN xx_eval_expr PARENTHESES_CLOSE
          xx_eval_expr ::= * IDENTIFIER
          xx_eval_expr ::= * IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE
          xx_eval_expr ::= * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE

                        TYPEOF shift  241
                           NOT shift  238
                    IDENTIFIER shift  266
              PARENTHESES_OPEN shift  263
                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
                         ISSET shift  244
               xx_literal_expr shift  237
                  xx_eval_expr shift  276

State 276:
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_eval_expr ::= xx_eval_expr * TYPEOF xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * EQUALS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * NOTEQUALS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * IDENTICAL xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * NOTIDENTICAL xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * LESS xx_eval_expr
          xx_eval_expr ::= xx_eval_expr * GREATER xx_eval_expr

                        EQUALS shift  240
                     IDENTICAL shift  255
                          LESS shift  259
                       GREATER shift  261
                  NOTIDENTICAL shift  257
                     NOTEQUALS shift  243
                        TYPEOF shift  236
                  BRACKET_OPEN shift  277

State 277:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_return_statement ::= * RETURN xx_literal_expr DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_comment ::= * COMMENT

                       COMMENT shift  234
                  TYPE_INTEGER shift  213
                   TYPE_DOUBLE shift  222
                     TYPE_BOOL shift  228
                   TYPE_STRING shift  225
                         BREAK shift  42
                      CONTINUE shift  44
                            IF shift  46
                          LOOP shift  55
                         WHILE shift  59
                           FOR shift  64
                           LET shift  71
                          ECHO shift  167
                        RETURN shift  175
                         UNSET shift  189
                         THROW shift  204
                      TYPE_VAR shift  231
                    xx_comment shift  41
             xx_statement_list shift  278
                  xx_statement shift  235
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_unset_statement shift  34
            xx_throw_statement shift  35
          xx_declare_statement shift  36
            xx_break_statement shift  37
         xx_continue_statement shift  38
            xx_while_statement shift  39
              xx_for_statement shift  40

State 278:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_return_statement ::= * RETURN xx_literal_expr DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_comment ::= * COMMENT

                 BRACKET_CLOSE shift  279
                       COMMENT shift  234
                  TYPE_INTEGER shift  213
                   TYPE_DOUBLE shift  222
                     TYPE_BOOL shift  228
                   TYPE_STRING shift  225
                         BREAK shift  42
                      CONTINUE shift  44
                            IF shift  46
                          LOOP shift  55
                         WHILE shift  59
                           FOR shift  64
                           LET shift  71
                          ECHO shift  167
                        RETURN shift  175
                         UNSET shift  189
                         THROW shift  204
                      TYPE_VAR shift  231
                    xx_comment shift  41
                  xx_statement shift  28
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_unset_statement shift  34
            xx_throw_statement shift  35
          xx_declare_statement shift  36
            xx_break_statement shift  37
         xx_continue_statement shift  38
            xx_while_statement shift  39
              xx_for_statement shift  40

State 279:
     (95) xx_for_statement ::= FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 95

State 280:
     (92) xx_while_statement ::= WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 92

State 281:
     (90) xx_loop_statement ::= LOOP BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 90

State 282:
     (88) xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 88

State 283:
     (84) xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE *
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE * ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE * ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                          ELSE shift  284
                     {default} reduce 84

State 284:
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE * BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE * BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  285

State 285:
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN * BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_return_statement ::= * RETURN xx_literal_expr DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_comment ::= * COMMENT

                 BRACKET_CLOSE shift  288
                       COMMENT shift  234
                  TYPE_INTEGER shift  213
                   TYPE_DOUBLE shift  222
                     TYPE_BOOL shift  228
                   TYPE_STRING shift  225
                         BREAK shift  42
                      CONTINUE shift  44
                            IF shift  46
                          LOOP shift  55
                         WHILE shift  59
                           FOR shift  64
                           LET shift  71
                          ECHO shift  167
                        RETURN shift  175
                         UNSET shift  189
                         THROW shift  204
                      TYPE_VAR shift  231
                    xx_comment shift  41
             xx_statement_list shift  286
                  xx_statement shift  235
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_unset_statement shift  34
            xx_throw_statement shift  35
          xx_declare_statement shift  36
            xx_break_statement shift  37
         xx_continue_statement shift  38
            xx_while_statement shift  39
              xx_for_statement shift  40

State 286:
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_return_statement ::= * RETURN xx_literal_expr DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_comment ::= * COMMENT

                 BRACKET_CLOSE shift  287
                       COMMENT shift  234
                  TYPE_INTEGER shift  213
                   TYPE_DOUBLE shift  222
                     TYPE_BOOL shift  228
                   TYPE_STRING shift  225
                         BREAK shift  42
                      CONTINUE shift  44
                            IF shift  46
                          LOOP shift  55
                         WHILE shift  59
                           FOR shift  64
                           LET shift  71
                          ECHO shift  167
                        RETURN shift  175
                         UNSET shift  189
                         THROW shift  204
                      TYPE_VAR shift  231
                    xx_comment shift  41
                  xx_statement shift  28
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_unset_statement shift  34
            xx_throw_statement shift  35
          xx_declare_statement shift  36
            xx_break_statement shift  37
         xx_continue_statement shift  38
            xx_while_statement shift  39
              xx_for_statement shift  40

State 287:
     (89) xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 89

State 288:
     (85) xx_if_statement ::= IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 85

State 289:
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list * BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_parameter_list ::= xx_parameter_list * COMMA xx_parameter

                         COMMA shift  293
                  BRACKET_OPEN shift  290

State 290:
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_return_statement ::= * RETURN xx_literal_expr DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_comment ::= * COMMENT

                       COMMENT shift  234
                  TYPE_INTEGER shift  213
                   TYPE_DOUBLE shift  222
                     TYPE_BOOL shift  228
                   TYPE_STRING shift  225
                         BREAK shift  42
                      CONTINUE shift  44
                            IF shift  46
                          LOOP shift  55
                         WHILE shift  59
                           FOR shift  64
                           LET shift  71
                          ECHO shift  167
                        RETURN shift  175
                         UNSET shift  189
                         THROW shift  204
                      TYPE_VAR shift  231
                    xx_comment shift  41
             xx_statement_list shift  291
                  xx_statement shift  235
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_unset_statement shift  34
            xx_throw_statement shift  35
          xx_declare_statement shift  36
            xx_break_statement shift  37
         xx_continue_statement shift  38
            xx_while_statement shift  39
              xx_for_statement shift  40

State 291:
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_return_statement ::= * RETURN xx_literal_expr DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_comment ::= * COMMENT

                 BRACKET_CLOSE shift  292
                       COMMENT shift  234
                  TYPE_INTEGER shift  213
                   TYPE_DOUBLE shift  222
                     TYPE_BOOL shift  228
                   TYPE_STRING shift  225
                         BREAK shift  42
                      CONTINUE shift  44
                            IF shift  46
                          LOOP shift  55
                         WHILE shift  59
                           FOR shift  64
                           LET shift  71
                          ECHO shift  167
                        RETURN shift  175
                         UNSET shift  189
                         THROW shift  204
                      TYPE_VAR shift  231
                    xx_comment shift  41
                  xx_statement shift  28
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_unset_statement shift  34
            xx_throw_statement shift  35
          xx_declare_statement shift  36
            xx_break_statement shift  37
         xx_continue_statement shift  38
            xx_while_statement shift  39
              xx_for_statement shift  40

State 292:
     (46) xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 46

State 293:
          xx_parameter_list ::= xx_parameter_list COMMA * xx_parameter
          xx_parameter ::= * IDENTIFIER
          xx_parameter ::= * xx_parameter_type IDENTIFIER
          xx_parameter ::= * xx_parameter_cast IDENTIFIER
          xx_parameter ::= * IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_type IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_cast IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY

                          LESS shift  306
                    IDENTIFIER shift  295
                  TYPE_INTEGER shift  309
                   TYPE_DOUBLE shift  310
                     TYPE_BOOL shift  311
                   TYPE_STRING shift  312
                    TYPE_ARRAY shift  313
                  xx_parameter shift  294
             xx_parameter_type shift  298
             xx_parameter_cast shift  302

State 294:
     (53) xx_parameter_list ::= xx_parameter_list COMMA xx_parameter *

                     {default} reduce 53

State 295:
     (55) xx_parameter ::= IDENTIFIER *
          xx_parameter ::= IDENTIFIER * ASSIGN xx_literal_expr

                        ASSIGN shift  296
                     {default} reduce 55

State 296:
          xx_parameter ::= IDENTIFIER ASSIGN * xx_literal_expr
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
               xx_literal_expr shift  297

State 297:
     (58) xx_parameter ::= IDENTIFIER ASSIGN xx_literal_expr *

                     {default} reduce 58

State 298:
          xx_parameter ::= xx_parameter_type * IDENTIFIER
          xx_parameter ::= xx_parameter_type * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  299

State 299:
     (56) xx_parameter ::= xx_parameter_type IDENTIFIER *
          xx_parameter ::= xx_parameter_type IDENTIFIER * ASSIGN xx_literal_expr

                        ASSIGN shift  300
                     {default} reduce 56

State 300:
          xx_parameter ::= xx_parameter_type IDENTIFIER ASSIGN * xx_literal_expr
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
               xx_literal_expr shift  301

State 301:
     (59) xx_parameter ::= xx_parameter_type IDENTIFIER ASSIGN xx_literal_expr *

                     {default} reduce 59

State 302:
          xx_parameter ::= xx_parameter_cast * IDENTIFIER
          xx_parameter ::= xx_parameter_cast * IDENTIFIER ASSIGN xx_literal_expr

                    IDENTIFIER shift  303

State 303:
     (57) xx_parameter ::= xx_parameter_cast IDENTIFIER *
          xx_parameter ::= xx_parameter_cast IDENTIFIER * ASSIGN xx_literal_expr

                        ASSIGN shift  304
                     {default} reduce 57

State 304:
          xx_parameter ::= xx_parameter_cast IDENTIFIER ASSIGN * xx_literal_expr
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
               xx_literal_expr shift  305

State 305:
     (60) xx_parameter ::= xx_parameter_cast IDENTIFIER ASSIGN xx_literal_expr *

                     {default} reduce 60

State 306:
          xx_parameter_cast ::= LESS * IDENTIFIER GREATER

                    IDENTIFIER shift  307

State 307:
          xx_parameter_cast ::= LESS IDENTIFIER * GREATER

                       GREATER shift  308

State 308:
     (61) xx_parameter_cast ::= LESS IDENTIFIER GREATER *

                    IDENTIFIER reduce 61

State 309:
     (62) xx_parameter_type ::= TYPE_INTEGER *

                    IDENTIFIER reduce 62

State 310:
     (63) xx_parameter_type ::= TYPE_DOUBLE *

                    IDENTIFIER reduce 63

State 311:
     (64) xx_parameter_type ::= TYPE_BOOL *

                    IDENTIFIER reduce 64

State 312:
     (65) xx_parameter_type ::= TYPE_STRING *

                    IDENTIFIER reduce 65

State 313:
     (66) xx_parameter_type ::= TYPE_ARRAY *

                    IDENTIFIER reduce 66

State 314:
     (54) xx_parameter_list ::= xx_parameter *

                     {default} reduce 54

State 315:
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_parameter_list ::= xx_parameter_list * COMMA xx_parameter

                         COMMA shift  293
             PARENTHESES_CLOSE shift  316

State 316:
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * BRACKET_OPEN BRACKET_CLOSE

                  BRACKET_OPEN shift  317

State 317:
          xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN * BRACKET_CLOSE

                 BRACKET_CLOSE shift  318

State 318:
     (42) xx_class_method_definition ::= PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 42

State 319:
          xx_class_method_definition ::= COMMENT * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                        PUBLIC shift  320
                     PROTECTED shift  335

State 320:
          xx_class_method_definition ::= COMMENT PUBLIC * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                      FUNCTION shift  321

State 321:
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION * IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                    IDENTIFIER shift  322

State 322:
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER * PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

              PARENTHESES_OPEN shift  323

State 323:
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN * xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_parameter_list ::= * xx_parameter_list COMMA xx_parameter
          xx_parameter_list ::= * xx_parameter
          xx_parameter ::= * IDENTIFIER
          xx_parameter ::= * xx_parameter_type IDENTIFIER
          xx_parameter ::= * xx_parameter_cast IDENTIFIER
          xx_parameter ::= * IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_type IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter ::= * xx_parameter_cast IDENTIFIER ASSIGN xx_literal_expr
          xx_parameter_cast ::= * LESS IDENTIFIER GREATER
          xx_parameter_type ::= * TYPE_INTEGER
          xx_parameter_type ::= * TYPE_DOUBLE
          xx_parameter_type ::= * TYPE_BOOL
          xx_parameter_type ::= * TYPE_STRING
          xx_parameter_type ::= * TYPE_ARRAY

                          LESS shift  306
                    IDENTIFIER shift  295
             PARENTHESES_CLOSE shift  324
                  TYPE_INTEGER shift  309
                   TYPE_DOUBLE shift  310
                     TYPE_BOOL shift  311
                   TYPE_STRING shift  312
                    TYPE_ARRAY shift  313
             xx_parameter_list shift  329
                  xx_parameter shift  314
             xx_parameter_type shift  298
             xx_parameter_cast shift  302

State 324:
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  325

State 325:
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN * BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_return_statement ::= * RETURN xx_literal_expr DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_comment ::= * COMMENT

                 BRACKET_CLOSE shift  326
                       COMMENT shift  234
                  TYPE_INTEGER shift  213
                   TYPE_DOUBLE shift  222
                     TYPE_BOOL shift  228
                   TYPE_STRING shift  225
                         BREAK shift  42
                      CONTINUE shift  44
                            IF shift  46
                          LOOP shift  55
                         WHILE shift  59
                           FOR shift  64
                           LET shift  71
                          ECHO shift  167
                        RETURN shift  175
                         UNSET shift  189
                         THROW shift  204
                      TYPE_VAR shift  231
                    xx_comment shift  41
             xx_statement_list shift  327
                  xx_statement shift  235
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_unset_statement shift  34
            xx_throw_statement shift  35
          xx_declare_statement shift  36
            xx_break_statement shift  37
         xx_continue_statement shift  38
            xx_while_statement shift  39
              xx_for_statement shift  40

State 326:
     (43) xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 43

State 327:
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_return_statement ::= * RETURN xx_literal_expr DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_comment ::= * COMMENT

                 BRACKET_CLOSE shift  328
                       COMMENT shift  234
                  TYPE_INTEGER shift  213
                   TYPE_DOUBLE shift  222
                     TYPE_BOOL shift  228
                   TYPE_STRING shift  225
                         BREAK shift  42
                      CONTINUE shift  44
                            IF shift  46
                          LOOP shift  55
                         WHILE shift  59
                           FOR shift  64
                           LET shift  71
                          ECHO shift  167
                        RETURN shift  175
                         UNSET shift  189
                         THROW shift  204
                      TYPE_VAR shift  231
                    xx_comment shift  41
                  xx_statement shift  28
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_unset_statement shift  34
            xx_throw_statement shift  35
          xx_declare_statement shift  36
            xx_break_statement shift  37
         xx_continue_statement shift  38
            xx_while_statement shift  39
              xx_for_statement shift  40

State 328:
     (47) xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 47

State 329:
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list * PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_parameter_list ::= xx_parameter_list * COMMA xx_parameter

                         COMMA shift  293
             PARENTHESES_CLOSE shift  330

State 330:
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE * BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  331

State 331:
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN * BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_return_statement ::= * RETURN xx_literal_expr DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_comment ::= * COMMENT

                 BRACKET_CLOSE shift  332
                       COMMENT shift  234
                  TYPE_INTEGER shift  213
                   TYPE_DOUBLE shift  222
                     TYPE_BOOL shift  228
                   TYPE_STRING shift  225
                         BREAK shift  42
                      CONTINUE shift  44
                            IF shift  46
                          LOOP shift  55
                         WHILE shift  59
                           FOR shift  64
                           LET shift  71
                          ECHO shift  167
                        RETURN shift  175
                         UNSET shift  189
                         THROW shift  204
                      TYPE_VAR shift  231
                    xx_comment shift  41
             xx_statement_list shift  333
                  xx_statement shift  235
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_unset_statement shift  34
            xx_throw_statement shift  35
          xx_declare_statement shift  36
            xx_break_statement shift  37
         xx_continue_statement shift  38
            xx_while_statement shift  39
              xx_for_statement shift  40

State 332:
     (44) xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 44

State 333:
          xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_return_statement ::= * RETURN xx_literal_expr DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_comment ::= * COMMENT

                 BRACKET_CLOSE shift  334
                       COMMENT shift  234
                  TYPE_INTEGER shift  213
                   TYPE_DOUBLE shift  222
                     TYPE_BOOL shift  228
                   TYPE_STRING shift  225
                         BREAK shift  42
                      CONTINUE shift  44
                            IF shift  46
                          LOOP shift  55
                         WHILE shift  59
                           FOR shift  64
                           LET shift  71
                          ECHO shift  167
                        RETURN shift  175
                         UNSET shift  189
                         THROW shift  204
                      TYPE_VAR shift  231
                    xx_comment shift  41
                  xx_statement shift  28
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_unset_statement shift  34
            xx_throw_statement shift  35
          xx_declare_statement shift  36
            xx_break_statement shift  37
         xx_continue_statement shift  38
            xx_while_statement shift  39
              xx_for_statement shift  40

State 334:
     (48) xx_class_method_definition ::= COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 48

State 335:
          xx_class_method_definition ::= COMMENT PROTECTED * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PROTECTED * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                      FUNCTION shift  336

State 336:
          xx_class_method_definition ::= COMMENT PROTECTED FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PROTECTED FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                    IDENTIFIER shift  337

State 337:
          xx_class_method_definition ::= COMMENT PROTECTED FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PROTECTED FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

              PARENTHESES_OPEN shift  338

State 338:
          xx_class_method_definition ::= COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

             PARENTHESES_CLOSE shift  339

State 339:
          xx_class_method_definition ::= COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  340

State 340:
          xx_class_method_definition ::= COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN * BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_return_statement ::= * RETURN xx_literal_expr DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_comment ::= * COMMENT

                 BRACKET_CLOSE shift  341
                       COMMENT shift  234
                  TYPE_INTEGER shift  213
                   TYPE_DOUBLE shift  222
                     TYPE_BOOL shift  228
                   TYPE_STRING shift  225
                         BREAK shift  42
                      CONTINUE shift  44
                            IF shift  46
                          LOOP shift  55
                         WHILE shift  59
                           FOR shift  64
                           LET shift  71
                          ECHO shift  167
                        RETURN shift  175
                         UNSET shift  189
                         THROW shift  204
                      TYPE_VAR shift  231
                    xx_comment shift  41
             xx_statement_list shift  342
                  xx_statement shift  235
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_unset_statement shift  34
            xx_throw_statement shift  35
          xx_declare_statement shift  36
            xx_break_statement shift  37
         xx_continue_statement shift  38
            xx_while_statement shift  39
              xx_for_statement shift  40

State 341:
     (50) xx_class_method_definition ::= COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 50

State 342:
          xx_class_method_definition ::= COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_return_statement ::= * RETURN xx_literal_expr DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_comment ::= * COMMENT

                 BRACKET_CLOSE shift  343
                       COMMENT shift  234
                  TYPE_INTEGER shift  213
                   TYPE_DOUBLE shift  222
                     TYPE_BOOL shift  228
                   TYPE_STRING shift  225
                         BREAK shift  42
                      CONTINUE shift  44
                            IF shift  46
                          LOOP shift  55
                         WHILE shift  59
                           FOR shift  64
                           LET shift  71
                          ECHO shift  167
                        RETURN shift  175
                         UNSET shift  189
                         THROW shift  204
                      TYPE_VAR shift  231
                    xx_comment shift  41
                  xx_statement shift  28
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_unset_statement shift  34
            xx_throw_statement shift  35
          xx_declare_statement shift  36
            xx_break_statement shift  37
         xx_continue_statement shift  38
            xx_while_statement shift  39
              xx_for_statement shift  40

State 343:
     (52) xx_class_method_definition ::= COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 52

State 344:
          xx_class_method_definition ::= PROTECTED * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= PROTECTED * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                      FUNCTION shift  345

State 345:
          xx_class_method_definition ::= PROTECTED FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= PROTECTED FUNCTION * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                    IDENTIFIER shift  346

State 346:
          xx_class_method_definition ::= PROTECTED FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= PROTECTED FUNCTION IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

              PARENTHESES_OPEN shift  347

State 347:
          xx_class_method_definition ::= PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

             PARENTHESES_CLOSE shift  348

State 348:
          xx_class_method_definition ::= PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                  BRACKET_OPEN shift  349

State 349:
          xx_class_method_definition ::= PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN * BRACKET_CLOSE
          xx_class_method_definition ::= PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN * xx_statement_list BRACKET_CLOSE
          xx_statement_list ::= * xx_statement_list xx_statement
          xx_statement_list ::= * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_return_statement ::= * RETURN xx_literal_expr DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_comment ::= * COMMENT

                 BRACKET_CLOSE shift  350
                       COMMENT shift  234
                  TYPE_INTEGER shift  213
                   TYPE_DOUBLE shift  222
                     TYPE_BOOL shift  228
                   TYPE_STRING shift  225
                         BREAK shift  42
                      CONTINUE shift  44
                            IF shift  46
                          LOOP shift  55
                         WHILE shift  59
                           FOR shift  64
                           LET shift  71
                          ECHO shift  167
                        RETURN shift  175
                         UNSET shift  189
                         THROW shift  204
                      TYPE_VAR shift  231
                    xx_comment shift  41
             xx_statement_list shift  351
                  xx_statement shift  235
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_unset_statement shift  34
            xx_throw_statement shift  35
          xx_declare_statement shift  36
            xx_break_statement shift  37
         xx_continue_statement shift  38
            xx_while_statement shift  39
              xx_for_statement shift  40

State 350:
     (49) xx_class_method_definition ::= PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 49

State 351:
          xx_class_method_definition ::= PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list * BRACKET_CLOSE
          xx_statement_list ::= xx_statement_list * xx_statement
          xx_statement ::= * xx_let_statement
          xx_statement ::= * xx_if_statement
          xx_statement ::= * xx_loop_statement
          xx_statement ::= * xx_echo_statement
          xx_statement ::= * xx_return_statement
          xx_statement ::= * xx_unset_statement
          xx_statement ::= * xx_throw_statement
          xx_statement ::= * xx_declare_statement
          xx_statement ::= * xx_break_statement
          xx_statement ::= * xx_continue_statement
          xx_statement ::= * xx_while_statement
          xx_statement ::= * xx_for_statement
          xx_statement ::= * xx_comment
          xx_break_statement ::= * BREAK DOTCOMMA
          xx_continue_statement ::= * CONTINUE DOTCOMMA
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE ELSE BRACKET_OPEN BRACKET_CLOSE
          xx_if_statement ::= * IF xx_eval_expr BRACKET_OPEN BRACKET_CLOSE ELSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN BRACKET_CLOSE
          xx_loop_statement ::= * LOOP BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN BRACKET_CLOSE
          xx_while_statement ::= * WHILE xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_for_statement ::= * FOR IDENTIFIER COMMA IDENTIFIER IN xx_eval_expr BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_let_statement ::= * LET xx_let_assignments DOTCOMMA
          xx_echo_statement ::= * ECHO xx_echo_expressions DOTCOMMA
          xx_return_statement ::= * RETURN xx_literal_expr DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE DOTCOMMA
          xx_return_statement ::= * RETURN IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER ARROW IDENTIFIER DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN IDENTIFIER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN INTEGER SBRACKET_CLOSE DOTCOMMA
          xx_unset_statement ::= * UNSET IDENTIFIER SBRACKET_OPEN STRING SBRACKET_CLOSE DOTCOMMA
          xx_throw_statement ::= * THROW IDENTIFIER DOTCOMMA
          xx_throw_statement ::= * THROW NEW IDENTIFIER PARENTHESES_OPEN xx_call_parameters PARENTHESES_CLOSE DOTCOMMA
          xx_declare_statement ::= * TYPE_INTEGER xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_DOUBLE xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_STRING xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_BOOL xx_declare_variable_list DOTCOMMA
          xx_declare_statement ::= * TYPE_VAR xx_declare_variable_list DOTCOMMA
          xx_comment ::= * COMMENT

                 BRACKET_CLOSE shift  352
                       COMMENT shift  234
                  TYPE_INTEGER shift  213
                   TYPE_DOUBLE shift  222
                     TYPE_BOOL shift  228
                   TYPE_STRING shift  225
                         BREAK shift  42
                      CONTINUE shift  44
                            IF shift  46
                          LOOP shift  55
                         WHILE shift  59
                           FOR shift  64
                           LET shift  71
                          ECHO shift  167
                        RETURN shift  175
                         UNSET shift  189
                         THROW shift  204
                      TYPE_VAR shift  231
                    xx_comment shift  41
                  xx_statement shift  28
              xx_let_statement shift  29
               xx_if_statement shift  30
             xx_loop_statement shift  31
             xx_echo_statement shift  32
           xx_return_statement shift  33
            xx_unset_statement shift  34
            xx_throw_statement shift  35
          xx_declare_statement shift  36
            xx_break_statement shift  37
         xx_continue_statement shift  38
            xx_while_statement shift  39
              xx_for_statement shift  40

State 352:
     (51) xx_class_method_definition ::= PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE *

                     {default} reduce 51

State 353:
     (20) xx_class_definition ::= xx_class_properties_definition xx_class_consts_definition *
          xx_class_definition ::= xx_class_properties_definition xx_class_consts_definition * xx_class_methods_definition
          xx_class_consts_definition ::= xx_class_consts_definition * xx_class_const_definition
          xx_class_methods_definition ::= * xx_class_methods_definition xx_class_method_definition
          xx_class_const_definition ::= * COMMENT CONST IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_const_definition ::= * CONST IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_methods_definition ::= * xx_class_method_definition
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                 BRACKET_CLOSE reduce 20
                       COMMENT shift  356
                        PUBLIC shift  19
                     PROTECTED shift  344
                         CONST shift  362
   xx_class_methods_definition shift  354
     xx_class_const_definition shift  355
    xx_class_method_definition shift  367

State 354:
     (23) xx_class_definition ::= xx_class_properties_definition xx_class_consts_definition xx_class_methods_definition *
          xx_class_methods_definition ::= xx_class_methods_definition * xx_class_method_definition
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                 BRACKET_CLOSE reduce 23
                       COMMENT shift  319
                        PUBLIC shift  19
                     PROTECTED shift  344
    xx_class_method_definition shift  18

State 355:
     (35) xx_class_consts_definition ::= xx_class_consts_definition xx_class_const_definition *

                     {default} reduce 35

State 356:
          xx_class_const_definition ::= COMMENT * CONST IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= COMMENT * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                        PUBLIC shift  320
                     PROTECTED shift  335
                         CONST shift  357

State 357:
          xx_class_const_definition ::= COMMENT CONST * IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA

                    IDENTIFIER shift  358

State 358:
          xx_class_const_definition ::= COMMENT CONST IDENTIFIER * ASSIGN xx_literal_expr DOTCOMMA

                        ASSIGN shift  359

State 359:
          xx_class_const_definition ::= COMMENT CONST IDENTIFIER ASSIGN * xx_literal_expr DOTCOMMA
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
               xx_literal_expr shift  360

State 360:
          xx_class_const_definition ::= COMMENT CONST IDENTIFIER ASSIGN xx_literal_expr * DOTCOMMA

                      DOTCOMMA shift  361

State 361:
     (38) xx_class_const_definition ::= COMMENT CONST IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA *

                     {default} reduce 38

State 362:
          xx_class_const_definition ::= CONST * IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA

                    IDENTIFIER shift  363

State 363:
          xx_class_const_definition ::= CONST IDENTIFIER * ASSIGN xx_literal_expr DOTCOMMA

                        ASSIGN shift  364

State 364:
          xx_class_const_definition ::= CONST IDENTIFIER ASSIGN * xx_literal_expr DOTCOMMA
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
               xx_literal_expr shift  365

State 365:
          xx_class_const_definition ::= CONST IDENTIFIER ASSIGN xx_literal_expr * DOTCOMMA

                      DOTCOMMA shift  366

State 366:
     (39) xx_class_const_definition ::= CONST IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA *

                     {default} reduce 39

State 367:
     (40) xx_class_methods_definition ::= xx_class_method_definition *

                     {default} reduce 40

State 368:
     (25) xx_class_properties_definition ::= xx_class_properties_definition xx_class_property_definition *

                     {default} reduce 25

State 369:
          xx_class_property_definition ::= COMMENT * PUBLIC IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= COMMENT * PUBLIC IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= COMMENT * PROTECTED IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= COMMENT * PROTECTED IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_const_definition ::= COMMENT * CONST IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= COMMENT * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                        PUBLIC shift  370
                     PROTECTED shift  376
                         CONST shift  357

State 370:
          xx_class_property_definition ::= COMMENT PUBLIC * IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= COMMENT PUBLIC * IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= COMMENT PUBLIC * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PUBLIC * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                    IDENTIFIER shift  371
                      FUNCTION shift  321

State 371:
          xx_class_property_definition ::= COMMENT PUBLIC IDENTIFIER * DOTCOMMA
          xx_class_property_definition ::= COMMENT PUBLIC IDENTIFIER * ASSIGN xx_literal_expr DOTCOMMA

                      DOTCOMMA shift  372
                        ASSIGN shift  373

State 372:
     (27) xx_class_property_definition ::= COMMENT PUBLIC IDENTIFIER DOTCOMMA *

                     {default} reduce 27

State 373:
          xx_class_property_definition ::= COMMENT PUBLIC IDENTIFIER ASSIGN * xx_literal_expr DOTCOMMA
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
               xx_literal_expr shift  374

State 374:
          xx_class_property_definition ::= COMMENT PUBLIC IDENTIFIER ASSIGN xx_literal_expr * DOTCOMMA

                      DOTCOMMA shift  375

State 375:
     (30) xx_class_property_definition ::= COMMENT PUBLIC IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA *

                     {default} reduce 30

State 376:
          xx_class_property_definition ::= COMMENT PROTECTED * IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= COMMENT PROTECTED * IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= COMMENT PROTECTED * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT PROTECTED * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                    IDENTIFIER shift  377
                      FUNCTION shift  336

State 377:
          xx_class_property_definition ::= COMMENT PROTECTED IDENTIFIER * DOTCOMMA
          xx_class_property_definition ::= COMMENT PROTECTED IDENTIFIER * ASSIGN xx_literal_expr DOTCOMMA

                      DOTCOMMA shift  378
                        ASSIGN shift  379

State 378:
     (32) xx_class_property_definition ::= COMMENT PROTECTED IDENTIFIER DOTCOMMA *

                     {default} reduce 32

State 379:
          xx_class_property_definition ::= COMMENT PROTECTED IDENTIFIER ASSIGN * xx_literal_expr DOTCOMMA
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
               xx_literal_expr shift  380

State 380:
          xx_class_property_definition ::= COMMENT PROTECTED IDENTIFIER ASSIGN xx_literal_expr * DOTCOMMA

                      DOTCOMMA shift  381

State 381:
     (34) xx_class_property_definition ::= COMMENT PROTECTED IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA *

                     {default} reduce 34

State 382:
          xx_class_property_definition ::= PUBLIC * IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= PUBLIC * IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= PUBLIC * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC * FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= PUBLIC * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                    IDENTIFIER shift  383
                      FUNCTION shift  20

State 383:
          xx_class_property_definition ::= PUBLIC IDENTIFIER * DOTCOMMA
          xx_class_property_definition ::= PUBLIC IDENTIFIER * ASSIGN xx_literal_expr DOTCOMMA

                      DOTCOMMA shift  384
                        ASSIGN shift  385

State 384:
     (28) xx_class_property_definition ::= PUBLIC IDENTIFIER DOTCOMMA *

                     {default} reduce 28

State 385:
          xx_class_property_definition ::= PUBLIC IDENTIFIER ASSIGN * xx_literal_expr DOTCOMMA
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
               xx_literal_expr shift  386

State 386:
          xx_class_property_definition ::= PUBLIC IDENTIFIER ASSIGN xx_literal_expr * DOTCOMMA

                      DOTCOMMA shift  387

State 387:
     (29) xx_class_property_definition ::= PUBLIC IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA *

                     {default} reduce 29

State 388:
          xx_class_property_definition ::= PROTECTED * IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= PROTECTED * IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= PROTECTED * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= PROTECTED * FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                    IDENTIFIER shift  389
                      FUNCTION shift  345

State 389:
          xx_class_property_definition ::= PROTECTED IDENTIFIER * DOTCOMMA
          xx_class_property_definition ::= PROTECTED IDENTIFIER * ASSIGN xx_literal_expr DOTCOMMA

                      DOTCOMMA shift  390
                        ASSIGN shift  391

State 390:
     (31) xx_class_property_definition ::= PROTECTED IDENTIFIER DOTCOMMA *

                     {default} reduce 31

State 391:
          xx_class_property_definition ::= PROTECTED IDENTIFIER ASSIGN * xx_literal_expr DOTCOMMA
          xx_literal_expr ::= * INTEGER
          xx_literal_expr ::= * STRING
          xx_literal_expr ::= * DOUBLE
          xx_literal_expr ::= * NULL
          xx_literal_expr ::= * FALSE
          xx_literal_expr ::= * TRUE

                       INTEGER shift  90
                        STRING shift  91
                        DOUBLE shift  92
                          NULL shift  93
                         FALSE shift  94
                          TRUE shift  95
               xx_literal_expr shift  392

State 392:
          xx_class_property_definition ::= PROTECTED IDENTIFIER ASSIGN xx_literal_expr * DOTCOMMA

                      DOTCOMMA shift  393

State 393:
     (33) xx_class_property_definition ::= PROTECTED IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA *

                     {default} reduce 33

State 394:
     (36) xx_class_consts_definition ::= xx_class_const_definition *

                     {default} reduce 36

State 395:
     (17) xx_class_definition ::= xx_class_consts_definition *
          xx_class_definition ::= xx_class_consts_definition * xx_class_properties_definition
          xx_class_definition ::= xx_class_consts_definition * xx_class_methods_definition
          xx_class_definition ::= xx_class_consts_definition * xx_class_properties_definition xx_class_methods_definition
          xx_class_properties_definition ::= * xx_class_properties_definition xx_class_property_definition
          xx_class_properties_definition ::= * xx_class_property_definition
          xx_class_property_definition ::= * COMMENT PUBLIC IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PUBLIC IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PUBLIC IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * COMMENT PUBLIC IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * PROTECTED IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * COMMENT PROTECTED IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PROTECTED IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * COMMENT PROTECTED IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_consts_definition ::= xx_class_consts_definition * xx_class_const_definition
          xx_class_methods_definition ::= * xx_class_methods_definition xx_class_method_definition
          xx_class_const_definition ::= * COMMENT CONST IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_const_definition ::= * CONST IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_methods_definition ::= * xx_class_method_definition
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                 BRACKET_CLOSE reduce 17
                       COMMENT shift  369
                        PUBLIC shift  382
                     PROTECTED shift  388
                         CONST shift  362
xx_class_properties_definition shift  396
   xx_class_methods_definition shift  399
  xx_class_property_definition shift  400
     xx_class_const_definition shift  355
    xx_class_method_definition shift  367

State 396:
     (21) xx_class_definition ::= xx_class_consts_definition xx_class_properties_definition *
          xx_class_definition ::= xx_class_consts_definition xx_class_properties_definition * xx_class_methods_definition
          xx_class_properties_definition ::= xx_class_properties_definition * xx_class_property_definition
          xx_class_property_definition ::= * COMMENT PUBLIC IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PUBLIC IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PUBLIC IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * COMMENT PUBLIC IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * PROTECTED IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * COMMENT PROTECTED IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PROTECTED IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * COMMENT PROTECTED IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_methods_definition ::= * xx_class_methods_definition xx_class_method_definition
          xx_class_methods_definition ::= * xx_class_method_definition
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                 BRACKET_CLOSE reduce 21
                       COMMENT shift  398
                        PUBLIC shift  382
                     PROTECTED shift  388
   xx_class_methods_definition shift  397
  xx_class_property_definition shift  368
    xx_class_method_definition shift  367

State 397:
     (24) xx_class_definition ::= xx_class_consts_definition xx_class_properties_definition xx_class_methods_definition *
          xx_class_methods_definition ::= xx_class_methods_definition * xx_class_method_definition
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                 BRACKET_CLOSE reduce 24
                       COMMENT shift  319
                        PUBLIC shift  19
                     PROTECTED shift  344
    xx_class_method_definition shift  18

State 398:
          xx_class_property_definition ::= COMMENT * PUBLIC IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= COMMENT * PUBLIC IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= COMMENT * PROTECTED IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= COMMENT * PROTECTED IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_method_definition ::= COMMENT * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= COMMENT * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                        PUBLIC shift  370
                     PROTECTED shift  376

State 399:
     (22) xx_class_definition ::= xx_class_consts_definition xx_class_methods_definition *
          xx_class_methods_definition ::= xx_class_methods_definition * xx_class_method_definition
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                 BRACKET_CLOSE reduce 22
                       COMMENT shift  319
                        PUBLIC shift  19
                     PROTECTED shift  344
    xx_class_method_definition shift  18

State 400:
     (26) xx_class_properties_definition ::= xx_class_property_definition *

                     {default} reduce 26

State 401:
     (18) xx_class_definition ::= xx_class_methods_definition *
          xx_class_methods_definition ::= xx_class_methods_definition * xx_class_method_definition
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                 BRACKET_CLOSE reduce 18
                       COMMENT shift  319
                        PUBLIC shift  19
                     PROTECTED shift  344
    xx_class_method_definition shift  18

State 402:
          xx_class_def ::= CLASS IDENTIFIER EXTENDS * IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= CLASS IDENTIFIER EXTENDS * IDENTIFIER BRACKET_OPEN BRACKET_CLOSE

                    IDENTIFIER shift  403

State 403:
          xx_class_def ::= CLASS IDENTIFIER EXTENDS IDENTIFIER * BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= CLASS IDENTIFIER EXTENDS IDENTIFIER * BRACKET_OPEN BRACKET_CLOSE

                  BRACKET_OPEN shift  404

State 404:
          xx_class_def ::= CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN * xx_class_definition BRACKET_CLOSE
          xx_class_def ::= CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN * BRACKET_CLOSE
          xx_class_definition ::= * xx_class_properties_definition
          xx_class_definition ::= * xx_class_consts_definition
          xx_class_definition ::= * xx_class_methods_definition
          xx_class_definition ::= * xx_class_properties_definition xx_class_methods_definition
          xx_class_definition ::= * xx_class_properties_definition xx_class_consts_definition
          xx_class_definition ::= * xx_class_consts_definition xx_class_properties_definition
          xx_class_definition ::= * xx_class_consts_definition xx_class_methods_definition
          xx_class_definition ::= * xx_class_properties_definition xx_class_consts_definition xx_class_methods_definition
          xx_class_definition ::= * xx_class_consts_definition xx_class_properties_definition xx_class_methods_definition
          xx_class_properties_definition ::= * xx_class_properties_definition xx_class_property_definition
          xx_class_properties_definition ::= * xx_class_property_definition
          xx_class_property_definition ::= * COMMENT PUBLIC IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PUBLIC IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PUBLIC IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * COMMENT PUBLIC IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * PROTECTED IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * COMMENT PROTECTED IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PROTECTED IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * COMMENT PROTECTED IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_consts_definition ::= * xx_class_consts_definition xx_class_const_definition
          xx_class_consts_definition ::= * xx_class_const_definition
          xx_class_methods_definition ::= * xx_class_methods_definition xx_class_method_definition
          xx_class_const_definition ::= * COMMENT CONST IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_const_definition ::= * CONST IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_methods_definition ::= * xx_class_method_definition
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                 BRACKET_CLOSE shift  407
                       COMMENT shift  369
                        PUBLIC shift  382
                     PROTECTED shift  388
                         CONST shift  362
           xx_class_definition shift  405
xx_class_properties_definition shift  16
    xx_class_consts_definition shift  395
   xx_class_methods_definition shift  401
  xx_class_property_definition shift  400
     xx_class_const_definition shift  394
    xx_class_method_definition shift  367

State 405:
          xx_class_def ::= CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN xx_class_definition * BRACKET_CLOSE

                 BRACKET_CLOSE shift  406

State 406:
      (9) xx_class_def ::= CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE *

                     {default} reduce 9

State 407:
     (13) xx_class_def ::= CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 13

State 408:
          xx_class_def ::= ABSTRACT * CLASS IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= ABSTRACT * CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= ABSTRACT * CLASS IDENTIFIER BRACKET_OPEN BRACKET_CLOSE
          xx_class_def ::= ABSTRACT * CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN BRACKET_CLOSE

                         CLASS shift  409

State 409:
          xx_class_def ::= ABSTRACT CLASS * IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= ABSTRACT CLASS * IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= ABSTRACT CLASS * IDENTIFIER BRACKET_OPEN BRACKET_CLOSE
          xx_class_def ::= ABSTRACT CLASS * IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN BRACKET_CLOSE

                    IDENTIFIER shift  410

State 410:
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER * BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER * EXTENDS IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER * BRACKET_OPEN BRACKET_CLOSE
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER * EXTENDS IDENTIFIER BRACKET_OPEN BRACKET_CLOSE

                  BRACKET_OPEN shift  411
                       EXTENDS shift  415

State 411:
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER BRACKET_OPEN * xx_class_definition BRACKET_CLOSE
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER BRACKET_OPEN * BRACKET_CLOSE
          xx_class_definition ::= * xx_class_properties_definition
          xx_class_definition ::= * xx_class_consts_definition
          xx_class_definition ::= * xx_class_methods_definition
          xx_class_definition ::= * xx_class_properties_definition xx_class_methods_definition
          xx_class_definition ::= * xx_class_properties_definition xx_class_consts_definition
          xx_class_definition ::= * xx_class_consts_definition xx_class_properties_definition
          xx_class_definition ::= * xx_class_consts_definition xx_class_methods_definition
          xx_class_definition ::= * xx_class_properties_definition xx_class_consts_definition xx_class_methods_definition
          xx_class_definition ::= * xx_class_consts_definition xx_class_properties_definition xx_class_methods_definition
          xx_class_properties_definition ::= * xx_class_properties_definition xx_class_property_definition
          xx_class_properties_definition ::= * xx_class_property_definition
          xx_class_property_definition ::= * COMMENT PUBLIC IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PUBLIC IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PUBLIC IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * COMMENT PUBLIC IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * PROTECTED IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * COMMENT PROTECTED IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PROTECTED IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * COMMENT PROTECTED IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_consts_definition ::= * xx_class_consts_definition xx_class_const_definition
          xx_class_consts_definition ::= * xx_class_const_definition
          xx_class_methods_definition ::= * xx_class_methods_definition xx_class_method_definition
          xx_class_const_definition ::= * COMMENT CONST IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_const_definition ::= * CONST IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_methods_definition ::= * xx_class_method_definition
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                 BRACKET_CLOSE shift  414
                       COMMENT shift  369
                        PUBLIC shift  382
                     PROTECTED shift  388
                         CONST shift  362
           xx_class_definition shift  412
xx_class_properties_definition shift  16
    xx_class_consts_definition shift  395
   xx_class_methods_definition shift  401
  xx_class_property_definition shift  400
     xx_class_const_definition shift  394
    xx_class_method_definition shift  367

State 412:
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER BRACKET_OPEN xx_class_definition * BRACKET_CLOSE

                 BRACKET_CLOSE shift  413

State 413:
     (10) xx_class_def ::= ABSTRACT CLASS IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE *

                     {default} reduce 10

State 414:
     (14) xx_class_def ::= ABSTRACT CLASS IDENTIFIER BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 14

State 415:
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER EXTENDS * IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER EXTENDS * IDENTIFIER BRACKET_OPEN BRACKET_CLOSE

                    IDENTIFIER shift  416

State 416:
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER EXTENDS IDENTIFIER * BRACKET_OPEN xx_class_definition BRACKET_CLOSE
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER EXTENDS IDENTIFIER * BRACKET_OPEN BRACKET_CLOSE

                  BRACKET_OPEN shift  417

State 417:
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN * xx_class_definition BRACKET_CLOSE
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN * BRACKET_CLOSE
          xx_class_definition ::= * xx_class_properties_definition
          xx_class_definition ::= * xx_class_consts_definition
          xx_class_definition ::= * xx_class_methods_definition
          xx_class_definition ::= * xx_class_properties_definition xx_class_methods_definition
          xx_class_definition ::= * xx_class_properties_definition xx_class_consts_definition
          xx_class_definition ::= * xx_class_consts_definition xx_class_properties_definition
          xx_class_definition ::= * xx_class_consts_definition xx_class_methods_definition
          xx_class_definition ::= * xx_class_properties_definition xx_class_consts_definition xx_class_methods_definition
          xx_class_definition ::= * xx_class_consts_definition xx_class_properties_definition xx_class_methods_definition
          xx_class_properties_definition ::= * xx_class_properties_definition xx_class_property_definition
          xx_class_properties_definition ::= * xx_class_property_definition
          xx_class_property_definition ::= * COMMENT PUBLIC IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PUBLIC IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PUBLIC IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * COMMENT PUBLIC IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * PROTECTED IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * COMMENT PROTECTED IDENTIFIER DOTCOMMA
          xx_class_property_definition ::= * PROTECTED IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_property_definition ::= * COMMENT PROTECTED IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_consts_definition ::= * xx_class_consts_definition xx_class_const_definition
          xx_class_consts_definition ::= * xx_class_const_definition
          xx_class_methods_definition ::= * xx_class_methods_definition xx_class_method_definition
          xx_class_const_definition ::= * COMMENT CONST IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_const_definition ::= * CONST IDENTIFIER ASSIGN xx_literal_expr DOTCOMMA
          xx_class_methods_definition ::= * xx_class_method_definition
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE xx_parameter_list BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PUBLIC FUNCTION IDENTIFIER PARENTHESES_OPEN xx_parameter_list PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN BRACKET_CLOSE
          xx_class_method_definition ::= * PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE
          xx_class_method_definition ::= * COMMENT PROTECTED FUNCTION IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE BRACKET_OPEN xx_statement_list BRACKET_CLOSE

                 BRACKET_CLOSE shift  420
                       COMMENT shift  369
                        PUBLIC shift  382
                     PROTECTED shift  388
                         CONST shift  362
           xx_class_definition shift  418
xx_class_properties_definition shift  16
    xx_class_consts_definition shift  395
   xx_class_methods_definition shift  401
  xx_class_property_definition shift  400
     xx_class_const_definition shift  394
    xx_class_method_definition shift  367

State 418:
          xx_class_def ::= ABSTRACT CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN xx_class_definition * BRACKET_CLOSE

                 BRACKET_CLOSE shift  419

State 419:
     (11) xx_class_def ::= ABSTRACT CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN xx_class_definition BRACKET_CLOSE *

                     {default} reduce 11

State 420:
     (15) xx_class_def ::= ABSTRACT CLASS IDENTIFIER EXTENDS IDENTIFIER BRACKET_OPEN BRACKET_CLOSE *

                     {default} reduce 15

State 421:
      (3) xx_top_statement_list ::= xx_top_statement *

                     {default} reduce 3

